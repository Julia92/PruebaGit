<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_map_gene_test_8java" kind="file">
    <compoundname>MapGeneTest.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test" prot="public">org::jgap::impl::MapGeneTest</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1impl">org::jgap::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.impl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.*;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test" kindref="compound">MapGeneTest</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">JGAPTestCase</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a71c626eecac268907be7bf527a95c4cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a71c626eecac268907be7bf527a95c4cd" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.19<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6cb9f77fefdc16c9f3b737f8236bf30d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6cb9f77fefdc16c9f3b737f8236bf30d" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6cb9f77fefdc16c9f3b737f8236bf30d" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite(<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test" kindref="compound">MapGeneTest</ref>.class);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6cb9f77fefdc16c9f3b737f8236bf30d" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6fd6049713214751800663597746ca15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6fd6049713214751800663597746ca15" kindref="member">testConstruct_0</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNotNull(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(gene,<sp/></highlight><highlight class="stringliteral">&quot;m_geneMap&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2259e972992fd4a2a8dacdd80263aaf7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2259e972992fd4a2a8dacdd80263aaf7" kindref="member">testConstruct_1</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>map<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>map.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>map);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>geneMap<sp/>=<sp/>(Map)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(gene,<sp/></highlight><highlight class="stringliteral">&quot;m_geneMap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNotNull(geneMap);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/>geneMap.get(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2)));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>geneMap.size());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a097eeab02b213dc76db3063c8e743697" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a097eeab02b213dc76db3063c8e743697" kindref="member">testConstruct_2</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>null);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalArgumentException<sp/>iex)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3bffc2642bca60f06a5e3f0c1cff60b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3bffc2642bca60f06a5e3f0c1cff60b9" kindref="member">testConstruct_3</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Genotype.setStaticConfiguration(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>gene.getConfiguration());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a4dc696cec07451418218f1406c4ae333" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a4dc696cec07451418218f1406c4ae333" kindref="member">testToString_0</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[null]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a353c565478e1693eba3d1422ed365b19" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a353c565478e1693eba3d1422ed365b19" kindref="member">testToString_1</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(102));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[(102,102)]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a69dbbc7956d50b247d6cfae19a93f4ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a69dbbc7956d50b247d6cfae19a93f4ef" kindref="member">testToString_2</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-55));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(102));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[(7,-55),(3,102)]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c921a35595e6aaa94fa199e6e1d6c49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c921a35595e6aaa94fa199e6e1d6c49" kindref="member">testToString_3</ref>()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(3),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(102));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(7),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-55));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[(3.0,102),(7.0,-55)]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a0affe0ce7427ea6b4926eb0ff1fd92b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a0affe0ce7427ea6b4926eb0ff1fd92b7" kindref="member">testToString_4</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(102));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(7),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-55));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[(3,102.0),(7.0,-55)]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a65be7596c2df1901886d5b698deafd03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a65be7596c2df1901886d5b698deafd03" kindref="member">testToString_5</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(7),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-55));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(102));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;[(3,102.0),(7.0,-55)]&quot;</highlight><highlight class="normal">,<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7596ec075d333d0c1c65915fc2440cd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7596ec075d333d0c1c65915fc2440cd6" kindref="member">testGetAllele_0</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(7);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(<sp/>-5);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(3);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1),<sp/>gene.<ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/>gene.<ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-5));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-5),<sp/>gene.<ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7),<sp/>gene.<ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalArgumentException<sp/>iex)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a159a36bbd9db248348ea2bf45dbc2f08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a159a36bbd9db248348ea2bf45dbc2f08" kindref="member">testEquals_0</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene1.equals(gene2));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene2.equals(gene1));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1adb2be3928f55387ff1b3330e7b4729d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1adb2be3928f55387ff1b3330e7b4729d8" kindref="member">testEquals_1</ref>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene1.equals(null));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aae4d425f59b5c2cfcdf5152e64e2eede" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aae4d425f59b5c2cfcdf5152e64e2eede" kindref="member">testEquals_2</ref>()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene1.equals(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>)));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab82b4fe64d2e6ff80720bebcec8a55f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab82b4fe64d2e6ff80720bebcec8a55f3" kindref="member">testEquals_3</ref>()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene1.equals(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector()));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a9af5a0e70b47f070e275ff1c683502c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a9af5a0e70b47f070e275ff1c683502c1" kindref="member">testEquals_4</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene1.equals(gene2));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene2.equals(gene1));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a4b19204ba39c1fee3b904ab41ad39535" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a4b19204ba39c1fee3b904ab41ad39535" kindref="member">testEquals_4_2</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>alleles1.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>alleles1.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles2);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene1.equals(gene2));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene2.equals(gene1));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3f351ee2e03d21b76ebf8b687d0f5abe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3f351ee2e03d21b76ebf8b687d0f5abe" kindref="member">testEquals_5</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>1,<sp/>99);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene1.equals(gene2));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(gene2.equals(gene1));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aa98a87c42a771b3c60c9d687ac19d2ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aa98a87c42a771b3c60c9d687ac19d2ba" kindref="member">testSetAllele_0</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(null);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ace56cc4234b94c60ba8db4619938a123" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ace56cc4234b94c60ba8db4619938a123" kindref="member">testSetAllele_1</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1acd0d6bcb29fd2fee5ba0f8259618c9d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1acd0d6bcb29fd2fee5ba0f8259618c9d2" kindref="member">testSetAllele_2</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(101));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3367d5a2d86ba7f0d9467f30a7f3143b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3367d5a2d86ba7f0d9467f30a7f3143b" kindref="member">testNewGene_0</ref>()</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(4711));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>value1<sp/>=<sp/>privateAccessor.getField(gene1,<sp/></highlight><highlight class="stringliteral">&quot;m_value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>)<sp/>gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" kindref="member">newGene</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>value2<sp/>=<sp/>privateAccessor.getField(gene2,<sp/></highlight><highlight class="stringliteral">&quot;m_value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>geneMap<sp/>=<sp/>(Map)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(gene2,<sp/></highlight><highlight class="stringliteral">&quot;m_geneMap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(value1,<sp/>value2);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>geneMap.size());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene1,<sp/>gene2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aa110813c5f2bdc9045aa2044eb2c7a70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aa110813c5f2bdc9045aa2044eb2c7a70" kindref="member">testNewGene_1</ref>()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>)<sp/>gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" kindref="member">newGene</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene1,<sp/>gene2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1af16a147e8e62220d91afa1f0393c6e5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1af16a147e8e62220d91afa1f0393c6e5a" kindref="member">testNewGene_2</ref>()</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Hashtable();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>40;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>)<sp/>gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" kindref="member">newGene</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" kindref="member">equals</ref>(gene2));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab7deb8db5b683e0e902a3e9bf30bff7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab7deb8db5b683e0e902a3e9bf30bff7a" kindref="member">testNewGene_3</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Hashtable();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>40;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="stringliteral">&quot;metadata<sp/>&quot;</highlight><highlight class="normal">+i,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>)<sp/>gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" kindref="member">newGene</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" kindref="member">equals</ref>(gene2));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a49ff30aa24423a7b73b2f0aff11b7541" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a49ff30aa24423a7b73b2f0aff11b7541" kindref="member">testCleanup</ref>()</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup<sp/>should<sp/>do<sp/>nothing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setAllele(</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>copy<sp/>=<sp/>gene.newGene();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.cleanup();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(copy,<sp/>gene);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2d86a1bb4acbfca07c5d8137b79de781" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2d86a1bb4acbfca07c5d8137b79de781" kindref="member">testPersistentRepresentation_0</ref>()</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-3;<sp/>i<sp/>&lt;<sp/>45;<sp/>i<sp/>=<sp/>i<sp/>+<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(17));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pres1<sp/>=<sp/>gene1.getPersistentRepresentation();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setValueFromPersistentRepresentation(pres1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pres2<sp/>=<sp/>gene2.getPersistentRepresentation();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>genes<sp/>itself,<sp/>not<sp/>string<sp/>representation<sp/>as<sp/>the<sp/>latter<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>well-defined<sp/>order<sp/>of<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>gene3.setValueFromPersistentRepresentation(pres2);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene1,<sp/>gene3);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene2,<sp/>gene3);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3f7483ed1862544483200c546c2f0405" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3f7483ed1862544483200c546c2f0405" kindref="member">testPersistentRepresentation_1</ref>()</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(45));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setValueFromPersistentRepresentation(null);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a1cddaada86124996c52f6b8d377da67e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a1cddaada86124996c52f6b8d377da67e" kindref="member">testPersistentRepresentation_2</ref>()</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(45));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setValueFromPersistentRepresentation(</highlight><highlight class="stringliteral">&quot;6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapGene.</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PERSISTENT_FIELD_DELIMITER</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Integer,0,java.lang.Double,1.0d),&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Integer,2,java.lang.Double,3.0d),&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Integer,4,java.lang.Double,5.0d)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(6,<sp/>(<sp/>(Integer)<sp/>gene1.<ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele</ref>()).intValue());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3,<sp/>(<sp/>(Map)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(gene1,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;m_geneMap&quot;</highlight><highlight class="normal">)).size());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aea2f56e45427df3bbbc7d484849121bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aea2f56e45427df3bbbc7d484849121bf" kindref="member">testPersistentRepresentation_3</ref>()</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(45));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setValueFromPersistentRepresentation(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>MapGene.</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PERSISTENT_FIELD_DELIMITER</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Integer,0,java.lang.Double,1.0d),&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Double,<sp/>2,java.lang.Double,3.0d),&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Double,4,java.lang.Double,5.0d)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNull(gene1.<ref refid="interfaceorg_1_1jgap_1_1_gene_1aa06c80639659ddbcfa1cfe7b7bb109f9" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3,<sp/>(<sp/>(Map)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(gene1,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;m_geneMap&quot;</highlight><highlight class="normal">)).size());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3af6170b18646359e608a11e5c538681" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3af6170b18646359e608a11e5c538681" kindref="member">testPersistentRepresentation_4</ref>()</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(45));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gene1.setValueFromPersistentRepresentation(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>MapGene.</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PERSISTENT_FIELD_DELIMITER</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(0,1.0d),1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalStateException<sp/>uex)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7edd1b284f12ca3522bb540d2d8f020f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7edd1b284f12ca3522bb540d2d8f020f" kindref="member">testPersistentRepresentation_5</ref>()</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(45));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setValueFromPersistentRepresentation(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapGene.PERSISTENT_FIELD_DELIMITER</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(java.lang.Double,0,java.lang.Double,1.0d),&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a59cb249ed5e507fab6d3c552ebb29f50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a59cb249ed5e507fab6d3c552ebb29f50" kindref="member">testPersistentRepresentation_6</ref>()</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>Map<sp/>alleles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-49;<sp/>i<sp/>&lt;<sp/>-3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alleles.put(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>alleles);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-23));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pres1<sp/>=<sp/>gene1.getPersistentRepresentation();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setValueFromPersistentRepresentation(pres1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pres2<sp/>=<sp/>gene2.getPersistentRepresentation();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>genes<sp/>itself,<sp/>not<sp/>string<sp/>representation<sp/>as<sp/>the<sp/>latter<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>well-defined<sp/>order<sp/>of<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>gene3.setValueFromPersistentRepresentation(pres2);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene1,<sp/>gene3);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(gene2,<sp/>gene3);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ad13b264f3cef66c9cb223e97d71b044c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ad13b264f3cef66c9cb223e97d71b044c" kindref="member">testCompareTo_0</ref>()</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(59),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(<sp/>-1,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" kindref="member">compareTo</ref>(gene2));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>gene2.compareTo(gene1));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a548bb5b895f35bac3492e7d8a521b7bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a548bb5b895f35bac3492e7d8a521b7bf" kindref="member">testCompareTo_1</ref>()</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" kindref="member">compareTo</ref>(gene2));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2ac65ef5715e77180f2aa53862c3a9d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2ac65ef5715e77180f2aa53862c3a9d1" kindref="member">testCompareTo_2</ref>()</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/>null);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(<sp/>-1,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" kindref="member">compareTo</ref>(gene2));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>gene2.compareTo(gene1));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab241ff461c072cd476021ea965180c59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab241ff461c072cd476021ea965180c59" kindref="member">testCompareTo_3</ref>()</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(77),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(62),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(62),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(77),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" kindref="member">compareTo</ref>(gene2));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab6c0cd54eb035dd82a007917bfe389b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab6c0cd54eb035dd82a007917bfe389b9" kindref="member">testRemoveAlleles_0</ref>()</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(key,<sp/>null);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().size());</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.removeAlleles(key);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().size());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6fa09c14b5b028c8106aba235e91ae65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6fa09c14b5b028c8106aba235e91ae65" kindref="member">testRemoveAlleles_1</ref>()</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>Object<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(58);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.addAllele(key,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Double(5));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().size());</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.removeAlleles(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(33));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>gene1.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().size());</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="comment">//<sp/><sp/>public<sp/>void<sp/>testApplyMutation_1()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DefaultConfiguration<sp/>config<sp/>=<sp/>new<sp/>DefaultConfiguration();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>config.setRandomGenerator(new<sp/>RandomGeneratorForTest(15));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Genotype.setConfiguration(config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>IntegerGene<sp/>gene<sp/>=<sp/>new<sp/>IntegerGene(0,<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>gene.setAllele(new<sp/>Integer(50));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>gene.applyMutation(0,<sp/>0.5d);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>assertEquals(Math.round(50<sp/>+<sp/>(100<sp/>-<sp/>0)<sp/>*<sp/>0.5d),<sp/>gene.intValue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7c02a53a8930dc6240785629c6c340d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7c02a53a8930dc6240785629c6c340d7" kindref="member">testSetToRandomValue_0</ref>()</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setToRandomValue(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>(3));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/>gene.<ref refid="interfaceorg_1_1jgap_1_1_gene_1aa06c80639659ddbcfa1cfe7b7bb109f9" kindref="member">getAllele</ref>());</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c54e74d3962fa7877e32a8682ef0ef3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c54e74d3962fa7877e32a8682ef0ef3" kindref="member">testSetToRandomValue_1</ref>()</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref><sp/>gene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" kindref="compound">MapGene</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.addAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>gene.setToRandomValue(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_stock_random_generator" kindref="compound">StockRandomGenerator</ref>());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(2),<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().keySet().iterator().next());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3),<sp/>gene.<ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" kindref="member">getAlleles</ref>().values().iterator().next());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MapGeneTest.java"/>
  </compounddef>
</doxygen>
