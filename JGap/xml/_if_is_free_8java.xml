<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_if_is_free_8java" kind="file">
    <compoundname>IfIsFree.java</compoundname>
    <innerclass refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free" prot="public">examples::gp::tictactoe::IfIsFree</innerclass>
    <innernamespace refid="namespaceexamples_1_1gp_1_1tictactoe">examples::gp::tictactoe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">examples.gp.tictactoe;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.impl.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.util.*;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free" kindref="compound">IfIsFree</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref><sp/>implements<sp/><ref refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable" kindref="compound">ICloneable</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a89f6f18bc2e3c73a778ef5fbc3cb8eca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a89f6f18bc2e3c73a778ef5fbc3cb8eca" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.3<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Class<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a0114d222769e96e765d2fc978a793cb0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a0114d222769e96e765d2fc978a793cb0" kindref="member">m_board</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aff049fce999893cb1f0b5a9f15cd0a3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aff049fce999893cb1f0b5a9f15cd0a3f" kindref="member">IfIsFree</ref>(</highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>a_conf,<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref><sp/>a_board,<sp/>Class<sp/>a_type)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(a_conf,<sp/>a_board,<sp/>a_type,<sp/>0,<sp/>null);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1af9c53797fc985cadd644437841856f18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1af9c53797fc985cadd644437841856f18" kindref="member">IfIsFree</ref>(</highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>a_conf,<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref><sp/>a_board,<sp/>Class<sp/>a_type,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_subReturnType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>a_subChildTypes)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>super(a_conf,<sp/>3,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a1214548cf4ac295646ccdf73259210d6" kindref="member">VoidClass</ref>,<sp/>a_subReturnType,<sp/>a_subChildTypes);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref><sp/>=<sp/>a_type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a0114d222769e96e765d2fc978a793cb0" kindref="member">m_board</ref><sp/>=<sp/>a_board;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aae49dcef4fdaf7653aaa1171ab1bd97c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aae49dcef4fdaf7653aaa1171ab1bd97c" kindref="member">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;if<sp/>free(&amp;1,<sp/>&amp;2)<sp/>then<sp/>(&amp;3)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aff53b7771d46bf39bee22fe0ec55925b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aff53b7771d46bf39bee22fe0ec55925b" kindref="member">getName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>Free&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aec3c23f9baf9bec46678cb359a3b7928" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aec3c23f9baf9bec46678cb359a3b7928" kindref="member">execute_void</ref>(<ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_program_chromosome" kindref="compound">ProgramChromosome</ref><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>Object[]<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1ae035736365ad5b9d7e03094b412c2252" kindref="member">check</ref>(c);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>condition;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref><sp/>==<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a8e354d57c541097dab355e145b048b22" kindref="member">IntegerClass</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>c.execute_int(n,<sp/>0,<sp/>args);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;=<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref>.<ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board_1a09c11cc14ebbe4fdabb088a97fcfd5ea" kindref="member">WIDTH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight><highlight class="stringliteral">&quot;x<sp/>must<sp/>be<sp/>0..&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref>.<ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board_1a09c11cc14ebbe4fdabb088a97fcfd5ea" kindref="member">WIDTH</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>c.execute_int(n,<sp/>1,<sp/>args);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;=<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref>.<ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board_1aa0183ffc1692e094a69283aeb7903003" kindref="member">HEIGHT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight><highlight class="stringliteral">&quot;y<sp/>must<sp/>be<sp/>0..&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board" kindref="compound">Board</ref>.<ref refid="classexamples_1_1gp_1_1tictactoe_1_1_board_1aa0183ffc1692e094a69283aeb7903003" kindref="member">HEIGHT</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>condition<sp/>=<sp/>m_board.readField(x,<sp/>y)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight><highlight class="stringliteral">&quot;IfIsFree:<sp/>cannot<sp/>process<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.execute_void(n,<sp/>2,<sp/>args);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1af6f00dbf98d1cfe26d179c525bdd1d0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Class<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1af6f00dbf98d1cfe26d179c525bdd1d0d" kindref="member">getChildType</ref>(<ref refid="interfaceorg_1_1jgap_1_1gp_1_1_i_g_p_program" kindref="compound">IGPProgram</ref><sp/>a_ind,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_chromNum)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_chromNum<sp/>==<sp/>0<sp/>||<sp/>a_chromNum<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a1214548cf4ac295646ccdf73259210d6" kindref="member">CommandGene.VoidClass</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a324fd630db9ca78c5b2c07b5bf1363cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a324fd630db9ca78c5b2c07b5bf1363cb" kindref="member">clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free" kindref="compound">IfIsFree</ref><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1aff049fce999893cb1f0b5a9f15cd0a3f" kindref="member">IfIsFree</ref>(<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a8093c30ad437344240369be5185698bb" kindref="member">getGPConfiguration</ref>(),<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1a0114d222769e96e765d2fc978a793cb0" kindref="member">m_board</ref>,<sp/><ref refid="classexamples_1_1gp_1_1tictactoe_1_1_if_is_free_1abc952d10b71af2ecc76aea823fa42f1a" kindref="member">m_type</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1af1493149bbcf86ee3d848b493f7adcc6" kindref="member">getSubReturnType</ref>(),<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a479e8b5355b16cf06b8cbd02cd1dbb6c" kindref="member">getSubChildTypes</ref>());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Throwable<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1util_1_1_clone_exception" kindref="compound">CloneException</ref>(t);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/tictactoe/IfIsFree.java"/>
  </compounddef>
</doxygen>
