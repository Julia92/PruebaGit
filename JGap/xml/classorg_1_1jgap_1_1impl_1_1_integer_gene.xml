<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_integer_gene" kind="class" prot="public">
    <compoundname>org::jgap::impl::IntegerGene</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" prot="public" virt="non-virtual">org.jgap.impl.NumberGene</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_persistent_representation" prot="public" virt="non-virtual">org.jgap.IPersistentRepresentation</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2" prot="public" virt="non-virtual">org.jgap.impl.IntegerGeneTest.IntegerGene2</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a55f3d782c94e8002b3e52de15f0e3ae0" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.IntegerGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.46 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a91bfa275e9a9ba43b6cab6f368aa1526" prot="protected" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.jgap.impl.IntegerGene.INTEGER_RANGE</definition>
        <argsstring></argsstring>
        <name>INTEGER_RANGE</name>
        <initializer>= (long) Integer.MAX_VALUE
      - (long) Integer.MIN_VALUE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the constant range of values supported by integers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.m_upperBounds</definition>
        <argsstring></argsstring>
        <name>m_upperBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The upper bounds of values represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. If not explicitly provided by the user, this should be set to Integer.MAX_VALUE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="39" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" compoundref="_integer_gene_8java" startline="331" endline="340">org.jgap.impl.IntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" compoundref="_integer_gene_8java" startline="137" endline="150">org.jgap.impl.IntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1aeadfb567a20ff5e7000d242f4c392ddf" compoundref="_integer_gene_8java" startline="394" endline="396">org.jgap.impl.IntegerGene.getUpperBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1affb4e686eaf110e8451f4afab7c0d2d6" compoundref="_integer_gene_8java" startline="95" endline="101">org.jgap.impl.IntegerGene.IntegerGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" compoundref="_integer_gene_8java" startline="113" endline="121">org.jgap.impl.IntegerGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" compoundref="_integer_gene_8java" startline="257" endline="262">org.jgap.impl.IntegerGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" compoundref="_integer_gene_8java" startline="171" endline="228">org.jgap.impl.IntegerGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" compoundref="_integer_gene_8java" startline="366" endline="376">org.jgap.impl.IntegerGene.toString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.m_lowerBounds</definition>
        <argsstring></argsstring>
        <name>m_lowerBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The lower bounds of values represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. If not explicitly provided by the user, this should be set to Integer.MIN_VALUE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="45" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="45" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" compoundref="_integer_gene_8java" startline="331" endline="340">org.jgap.impl.IntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ada11b926a9171e6bc6a1d16a28b62d89" compoundref="_integer_gene_8java" startline="384" endline="386">org.jgap.impl.IntegerGene.getLowerBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" compoundref="_integer_gene_8java" startline="137" endline="150">org.jgap.impl.IntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1affb4e686eaf110e8451f4afab7c0d2d6" compoundref="_integer_gene_8java" startline="95" endline="101">org.jgap.impl.IntegerGene.IntegerGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" compoundref="_integer_gene_8java" startline="113" endline="121">org.jgap.impl.IntegerGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" compoundref="_integer_gene_8java" startline="257" endline="262">org.jgap.impl.IntegerGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" compoundref="_integer_gene_8java" startline="171" endline="228">org.jgap.impl.IntegerGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" compoundref="_integer_gene_8java" startline="366" endline="376">org.jgap.impl.IntegerGene.toString</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae8edebc964e1c4e91951ecda1f26109c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.IntegerGene.IntegerGene</definition>
        <argsstring>()</argsstring>
        <name>IntegerGene</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> with default settings. No bounds will be put into effect for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance, other than the standard range of integer values.</para><para>Attention: The configuration used is the one set with the static method Genotype.setConfiguration.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="60" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="60" bodyend="63"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" compoundref="_integer_gene_8java" startline="113" endline="121">org.jgap.impl.IntegerGene.newGeneInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1afe1aeaaa89646a83a34edb94cd58b6af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.IntegerGene.IntegerGene</definition>
        <argsstring>(final Configuration a_config)</argsstring>
        <name>IntegerGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> with default settings. No bounds will be put into effect for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance, other than the standard range of integer values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="76" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1affb4e686eaf110e8451f4afab7c0d2d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.IntegerGene.IntegerGene</definition>
        <argsstring>(final Configuration a_config, final int a_lowerBounds, final int a_upperBounds)</argsstring>
        <name>IntegerGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>a_lowerBounds</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>a_upperBounds</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> with the specified lower and upper bounds for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_lowerBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>the lowest value that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> may possess, inclusive </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_upperBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>the highest value that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> may possess, inclusive </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="95" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="95" bodyend="101"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.IntegerGene.getPersistentRepresentation</definition>
        <argsstring>()</argsstring>
        <name>getPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a07bf7dbaa8de08e268c9357a46e79dac">getPersistentRepresentation</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> that includes any information required to reconstruct it at a later time, such as its value and internal state. This string will be used to represent this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in XML persistence. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s current state</para></simplesect>
<simplesect kind="author"><para>Neil Rostan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="137" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="137" bodyend="150"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a6db638a4ed7cb78bda76ad0b9cabbd40" compoundref="_integer_gene_test_8java" startline="485" endline="492">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_6</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.IntegerGene.setValueFromPersistentRepresentation</definition>
        <argsstring>(final String a_representation)</argsstring>
        <name>setValueFromPersistentRepresentation</name>
        <param>
          <type>final String</type>
          <declname>a_representation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value and internal state of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from the string representation returned by a previous invocation of the <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" kindref="member">getPersistentRepresentation()</ref> method. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_representation</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representation retrieved from a prior call to the <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" kindref="member">getPersistentRepresentation()</ref> method</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation does not support the given string representation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rostan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="171" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="171" bodyend="228"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a90c518c0ed7c08016323ea88b9fb4078" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.intValue</definition>
        <argsstring>()</argsstring>
        <name>intValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the int value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>, which may be more convenient in some cases than the more general <ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele()</ref> method.</para><para><simplesect kind="return"><para>the int value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="author"><para>Neil Rostan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="239" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="239" bodyend="241"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" compoundref="_integer_gene_8java" startline="331" endline="340">org.jgap.impl.IntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_greedy_crossover_1a41deed206eb483d92e5dee7d0bf537ef" compoundref="_greedy_crossover_8java" startline="105" endline="109">org.jgap.impl.GreedyCrossover.distance</referencedby>
        <referencedby refid="classexamples_1_1supergene_1_1_nickels_pennies_supergene_1a412430fbe022d7dec0fa3db0db42fc6f" compoundref="_nickels_pennies_supergene_8java" startline="51" endline="56">examples.supergene.NickelsPenniesSupergene.isValid</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a77a50cd7fa1906209761ed7593013e40" compoundref="_integer_gene_test_8java" startline="663" endline="669">org.jgap.impl.IntegerGeneTest.testApplyMutation_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1af4c01df7bd175523c24a4023a68e26f2" compoundref="_integer_gene_test_8java" startline="1004" endline="1014">org.jgap.impl.IntegerGeneTest.testApplyMutationSupportsFullIntegerRange</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1ad2152cfedb1e473499e46d5039300d90" compoundref="_integer_gene_test_8java" startline="265" endline="270">org.jgap.impl.IntegerGeneTest.testIntValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a1f482f6d09c6b082ca2b581a7a21eae4" compoundref="_integer_gene_test_8java" startline="272" endline="282">org.jgap.impl.IntegerGeneTest.testIntValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1ae034e141ed7ea58f40fb5cc12550111d" compoundref="_integer_gene_test_8java" startline="314" endline="319">org.jgap.impl.IntegerGeneTest.testSetAllele_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1aa5b779a2469d3255e6f1e7a2a0e77eb4" compoundref="_integer_gene_test_8java" startline="329" endline="334">org.jgap.impl.IntegerGeneTest.testSetAllele_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a9201daa968387fb52ecd93ef817f4e3c" compoundref="_integer_gene_test_8java" startline="846" endline="855">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a0d85aad99120ec7d20057a8c20d97d83" compoundref="_integer_gene_test_8java" startline="863" endline="872">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_4</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.IntegerGene.setToRandomValue</definition>
        <argsstring>(final RandomGenerator a_numberGenerator)</argsstring>
        <name>setToRandomValue</name>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_numberGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to a random Integer value between the lower and upper bounds (if any) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_numberGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number generator that should be used to create any random values. It&apos;s important to use this generator to maintain the user&apos;s flexibility to configure the genetic engine to use the random number generator of their choice</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para><simplesectsep/><para>David Kemp </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="257" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="257" bodyend="262"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1a708f273cc71846c2ae973172f20f2c01">org.jgap.RandomGenerator.nextDouble</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.IntegerGene.applyMutation</definition>
        <argsstring>(final int a_index, final double a_percentage)</argsstring>
        <name>applyMutation</name>
        <param>
          <type>final int</type>
          <declname>a_index</declname>
        </param>
        <param>
          <type>final double</type>
          <declname>a_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>See interface <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> for description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_index</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored (because there is only 1 atomic element) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>percentage of mutation (greater than -1 and smaller than 1)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para><simplesectsep/><para>David Kemp </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="331" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="331" bodyend="340"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a90c518c0ed7c08016323ea88b9fb4078" compoundref="_integer_gene_8java" startline="239" endline="241">org.jgap.impl.IntegerGene.intValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a5a2ddbdf4b8deab10c3c7c7c6ee0a4b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.hashCode</definition>
        <argsstring>()</argsstring>
        <name>hashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modified <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a5a2ddbdf4b8deab10c3c7c7c6ee0a4b7" kindref="member">hashCode()</ref> function to return different hashcodes for differently ordered genes in a chromosome. <simplesect kind="return"><para>-1 if no allele set, otherwise value return by <ref refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" kindref="member">BaseGene.hashCode()</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="350" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="350" bodyend="357"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.IntegerGene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value that may be useful for display purposes</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="366" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="366" bodyend="376"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ada11b926a9171e6bc6a1d16a28b62d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.getLowerBounds</definition>
        <argsstring>()</argsstring>
        <name>getLowerBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the lower bounds of the integer gene</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="384" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="384" bodyend="386"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a960a1c0047255716026fb60d0d04a850" compoundref="_integer_gene_test_8java" startline="955" endline="960">org.jgap.impl.IntegerGeneTest.testGetBounds_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1aa9a1b9e80aa3d7137a14bcae1ce5442e" compoundref="_integer_gene_test_8java" startline="392" endline="406">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a70f12c3c52313d5353c8fc0e58905126" compoundref="_integer_gene_test_8java" startline="414" endline="428">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1aeadfb567a20ff5e7000d242f4c392ddf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.getUpperBounds</definition>
        <argsstring>()</argsstring>
        <name>getUpperBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the upper bounds of the integer gene</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="394" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="394" bodyend="396"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a960a1c0047255716026fb60d0d04a850" compoundref="_integer_gene_test_8java" startline="955" endline="960">org.jgap.impl.IntegerGeneTest.testGetBounds_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1aa9a1b9e80aa3d7137a14bcae1ce5442e" compoundref="_integer_gene_test_8java" startline="392" endline="406">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a70f12c3c52313d5353c8fc0e58905126" compoundref="_integer_gene_test_8java" startline="414" endline="428">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_3</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.impl.IntegerGene.newGeneInternal</definition>
        <argsstring>()</argsstring>
        <name>newGeneInternal</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c">newGeneInternal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides implementation-independent means for creating new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instances.</para><para><simplesect kind="return"><para>a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance of the same type and with the same setup as this concrete <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 (was newGene since 1.0, moved to <ref refid="classorg_1_1jgap_1_1_base_gene" kindref="compound">BaseGene</ref>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="113" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="113" bodyend="121"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae8edebc964e1c4e91951ecda1f26109c" compoundref="_integer_gene_8java" startline="60" endline="63">org.jgap.impl.IntegerGene.IntegerGene</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a8bf63bc12293cf330f6aee95d89b644e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.IntegerGene.compareToNative</definition>
        <argsstring>(final Object a_o1, final Object a_o2)</argsstring>
        <name>compareToNative</name>
        <param>
          <type>final Object</type>
          <declname>a_o1</declname>
        </param>
        <param>
          <type>final Object</type>
          <declname>a_o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares to objects by first casting them into their expected type (e.g. Integer for <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>) and then calling the compareTo-method of the casted type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_o1</parametername>
</parameternamelist>
<parameterdescription>
<para>first object to be compared, always is not null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_o2</parametername>
</parameternamelist>
<parameterdescription>
<para>second object to be compared, always is not null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the object provided for comparison</para></simplesect>
<simplesect kind="author"><para>Neil Rostan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="276" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void org.jgap.impl.IntegerGene.mapValueToWithinBounds</definition>
        <argsstring>()</argsstring>
        <name>mapValueToWithinBounds</name>
        <reimplements refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1abecc7e11d15220180de70184adbca1dd">mapValueToWithinBounds</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps the value of this <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> to within the bounds specified by the m_upperBounds and m_lowerBounds instance variables. The value&apos;s relative position within the integer range will be preserved within the bounds range (in other words, if the value is about halfway between the integer max and min, then the resulting value will be about halfway between the upper bounds and lower bounds). If the value is null or is already within the bounds, it will be left unchanged.</para><para><simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="293" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="293" bodyend="319"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" compoundref="_integer_gene_8java" startline="45">org.jgap.impl.IntegerGene.m_lowerBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" compoundref="_integer_gene_8java" startline="39">org.jgap.impl.IntegerGene.m_upperBounds</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" compoundref="_integer_gene_8java" startline="257" endline="262">org.jgap.impl.IntegerGene.setToRandomValue</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation that supports an integer values for its allele. Upper and lower bounds may optionally be provided to restrict the range of legal values allowed by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance.</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="14611">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="14610">
        <label>Serializable</label>
      </node>
      <node id="14609">
        <label>Comparable</label>
      </node>
      <node id="14612">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="14607">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="14608" relation="public-inheritance">
        </childnode>
        <childnode refid="14612" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14605">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="14606" relation="public-inheritance">
        </childnode>
        <childnode refid="14613" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14608">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="14609" relation="public-inheritance">
        </childnode>
        <childnode refid="14610" relation="public-inheritance">
        </childnode>
        <childnode refid="14611" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14613">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="14606">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="14607" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14614">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="14605" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14621">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="14636">
        <label>List</label>
      </node>
      <node id="14635">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14632">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14620">
        <label>Serializable</label>
      </node>
      <node id="14619">
        <label>Comparable</label>
      </node>
      <node id="14622">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="14617">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="14618" relation="public-inheritance">
        </childnode>
        <childnode refid="14622" relation="public-inheritance">
        </childnode>
        <childnode refid="14623" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="14637" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="14615">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="14616" relation="public-inheritance">
        </childnode>
        <childnode refid="14638" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14625">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="14626" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14630">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14637">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14633">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14626">
        <label>Cloneable</label>
      </node>
      <node id="14618">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="14619" relation="public-inheritance">
        </childnode>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14621" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14638">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="14616">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="14617" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14628">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14634">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14627">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="14625" relation="public-inheritance">
        </childnode>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14619" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14631">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="14619" relation="public-inheritance">
        </childnode>
        <childnode refid="14625" relation="public-inheritance">
        </childnode>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14621" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14623">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="14624" relation="public-inheritance">
        </childnode>
        <childnode refid="14620" relation="public-inheritance">
        </childnode>
        <childnode refid="14625" relation="public-inheritance">
        </childnode>
        <childnode refid="14619" relation="public-inheritance">
        </childnode>
        <childnode refid="14627" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="14628" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="14629" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="14630" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="14631" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="14632" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="14633" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="14634" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="14635" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="14636" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="14629">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="14624">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/IntegerGene.java" bodystart="24" bodyend="397"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>applyMutation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a8bf63bc12293cf330f6aee95d89b644e" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e" prot="protected" virt="pure-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGene</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a55f3d782c94e8002b3e52de15f0e3ae0" prot="private" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getInternalValue</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ada11b926a9171e6bc6a1d16a28b62d89" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getLowerBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1aeadfb567a20ff5e7000d242f4c392ddf" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>getUpperBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a5a2ddbdf4b8deab10c3c7c7c6ee0a4b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a91bfa275e9a9ba43b6cab6f368aa1526" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>INTEGER_RANGE</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae8edebc964e1c4e91951ecda1f26109c" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1afe1aeaaa89646a83a34edb94cd58b6af" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1affb4e686eaf110e8451f4afab7c0d2d6" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a90c518c0ed7c08016323ea88b9fb4078" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>intValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a71ba6d9ef1c55621d69f0a7fcc00360b" prot="private" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>m_lowerBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a80d01e26893dfaef21fa9223d2e375f4" prot="private" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>m_upperBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGene</scope><name>mapValueToWithinBounds</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGene</scope><name>newGeneInternal</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>NumberGene</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::IntegerGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGene</scope><name>setEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setToRandomValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a94a345f1919c4840dd0b9eecf7afc6a3" prot="public" virt="non-virtual" ambiguityscope="org::jgap::IPersistentRepresentation."><scope>org::jgap::impl::IntegerGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
