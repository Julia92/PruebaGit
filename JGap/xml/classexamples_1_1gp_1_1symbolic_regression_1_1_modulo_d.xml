<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d" kind="class" prot="public">
    <compoundname>examples::gp::symbolicRegression::ModuloD</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MathCommand</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ICloneable</basecompoundref>
    <innerclass refid="interfaceexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1_1_compatible" prot="protected">examples::gp::symbolicRegression::ModuloD::Compatible</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a6c02cb522fbc6ae5f4b2cf25a3e154c4" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.gp.symbolicRegression.ModuloD.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.1 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a1dba5c0be689dc6f2c247cb07feb0819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.gp.symbolicRegression.ModuloD.ModuloD</definition>
        <argsstring>(final GPConfiguration a_conf, Class a_returnType)</argsstring>
        <name>ModuloD</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_returnType</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="29" bodyend="32"/>
        <referencedby refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1abaa51ab57de56c37eb0c0e23bdb65a67" compoundref="_modulo_d_8java" startline="115" endline="122">examples.gp.symbolicRegression.ModuloD.clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a521b78cfb99251e694a38e35406391a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.ModuloD.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1ad1341a1872a5fdfb557b5aa0e1751e50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.ModuloD.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>textual name of this command</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="44" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a5504ffe7797721a35b5c9fa45455a246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int examples.gp.symbolicRegression.ModuloD.execute_int</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_int</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="48" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1ac6d902fa7585ea698556f5ae6c743495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long examples.gp.symbolicRegression.ModuloD.execute_long</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_long</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="57" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a6d2f29a47f48da3fbb0641a98514bbab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float examples.gp.symbolicRegression.ModuloD.execute_float</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_float</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="66" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="66" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a9a8bbb6d5617d06ec08c810bd72ca9b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.gp.symbolicRegression.ModuloD.execute_double</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_double</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="81" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1af8acb3b3312f9beb327acaefb173e6bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object examples.gp.symbolicRegression.ModuloD.execute_object</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_object</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="95" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1abaa51ab57de56c37eb0c0e23bdb65a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object examples.gp.symbolicRegression.ModuloD.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clones the object. Simple and straight forward implementation here.</para><para><simplesect kind="return"><para>cloned instance of this object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="115" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="115" bodyend="122"/>
        <references refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a1dba5c0be689dc6f2c247cb07feb0819" compoundref="_modulo_d_8java" startline="29" endline="32">examples.gp.symbolicRegression.ModuloD.ModuloD</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The modulo operation.</para><para><simplesect kind="author"><para>Konrad Odell </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="16025">
        <label>MathCommand</label>
      </node>
      <node id="16024">
        <label>examples.gp.symbolicRegression.ModuloD</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d"/>
        <childnode refid="16025" relation="public-inheritance">
        </childnode>
        <childnode refid="16026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16026">
        <label>ICloneable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16028">
        <label>MathCommand</label>
      </node>
      <node id="16027">
        <label>examples.gp.symbolicRegression.ModuloD</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d"/>
        <childnode refid="16028" relation="public-inheritance">
        </childnode>
        <childnode refid="16029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16029">
        <label>ICloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/ModuloD.java" bodystart="24" bodyend="123"/>
    <listofallmembers>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1abaa51ab57de56c37eb0c0e23bdb65a67" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>clone</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a6c02cb522fbc6ae5f4b2cf25a3e154c4" prot="private" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a9a8bbb6d5617d06ec08c810bd72ca9b7" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>execute_double</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a6d2f29a47f48da3fbb0641a98514bbab" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>execute_float</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a5504ffe7797721a35b5c9fa45455a246" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>execute_int</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1ac6d902fa7585ea698556f5ae6c743495" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>execute_long</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1af8acb3b3312f9beb327acaefb173e6bd" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>execute_object</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1ad1341a1872a5fdfb557b5aa0e1751e50" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>getName</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a1dba5c0be689dc6f2c247cb07feb0819" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>ModuloD</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_modulo_d_1a521b78cfb99251e694a38e35406391a6" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::ModuloD</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
