<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_crossover_operator_test_8java" kind="file">
    <compoundname>CrossoverOperatorTest.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test" prot="public">org::jgap::impl::CrossoverOperatorTest</innerclass>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing" prot="public">org::jgap::impl::CrossoverOperatorTest::GeneticOperatorConstraintForTesting</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1impl">org::jgap::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.impl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test" kindref="compound">CrossoverOperatorTest</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">JGAPTestCase</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a1180c6a35312f0980ba5da290657cd15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a1180c6a35312f0980ba5da290657cd15" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.33<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a588500ff8b6226360226992109bd2a60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a588500ff8b6226360226992109bd2a60" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a588500ff8b6226360226992109bd2a60" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite(<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test" kindref="compound">CrossoverOperatorTest</ref>.class);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a588500ff8b6226360226992109bd2a60" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a9783402210f5dca876e6012a5ae5517e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a9783402210f5dca876e6012a5ae5517e" kindref="member">setUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>super.setUp();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Configuration.reset();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a8e89fa6faf156308ee6c6e1776dd06ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a8e89fa6faf156308ee6c6e1776dd06ad" kindref="member">testConstruct_0</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>null);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_mutation_rate_calculator" kindref="compound">DefaultMutationRateCalculator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>50);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a75fedbdd27191321bda395a07474d6e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a75fedbdd27191321bda395a07474d6e8" kindref="member">testConstruct_1</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalArgumentException<sp/>iex)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a6f823453a29ef9107060d90f3b82a6c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a6f823453a29ef9107060d90f3b82a6c8" kindref="member">testConstruct_2</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>(),<sp/>-3);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalArgumentException<sp/>iex)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a27ad387292e289724dfea705c28cd5b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a27ad387292e289724dfea705c28cd5b1" kindref="member">testConstruct_4</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(5,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a4152e74d59787d7f2a892b9f90e8340d" kindref="member">getCrossOverRate</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1ac554ffe6c1b5eb38ed6a5e9f0528b556" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1ac554ffe6c1b5eb38ed6a5e9f0528b556" kindref="member">testConstruct_5</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a4152e74d59787d7f2a892b9f90e8340d" kindref="member">getCrossOverRate</ref>());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1acd61e3a089ee1c208e43d4222fdd6794" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1acd61e3a089ee1c208e43d4222fdd6794" kindref="member">testConstruct_6</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a4152e74d59787d7f2a892b9f90e8340d" kindref="member">getCrossOverRate</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a0513af93be7e58a3ee600e3890906948" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a0513af93be7e58a3ee600e3890906948" kindref="member">testConstruct_7</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>1.2d);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1.2d,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a3a23b88eca25371ff8429d0fedf1c8b8" kindref="member">getCrossOverRatePercent</ref>(),<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" kindref="member">DELTA</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a3cf866a28ee8385b0f5514432f2cfb34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a3cf866a28ee8385b0f5514432f2cfb34" kindref="member">testConstruct_8</ref>()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>4.2d,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(4.2d,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a3a23b88eca25371ff8429d0fedf1c8b8" kindref="member">getCrossOverRatePercent</ref>(),<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" kindref="member">DELTA</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1aee4b6ccb946ca1c408c4e24406a23ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1aee4b6ccb946ca1c408c4e24406a23ba8" kindref="member">testConstruct_9</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>18.0d,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.<ref refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" kindref="member">getConfiguration</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a51faa8e8996095443a18c617768cd01f" kindref="member">isAllowFullCrossOver</ref>());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(18.0d,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a3a23b88eca25371ff8429d0fedf1c8b8" kindref="member">getCrossOverRatePercent</ref>(),<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" kindref="member">DELTA</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a37f0eff1c6dd05e110b11949b38fc77a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a37f0eff1c6dd05e110b11949b38fc77a" kindref="member">testOperate_0</ref>()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preset<sp/>&quot;random&quot;<sp/>values:<sp/>index<sp/>first<sp/>chromosome,<sp/>index<sp/>second<sp/>chromosome,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>locus<sp/>(index<sp/>of<sp/>gene<sp/>on<sp/>chromosome)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextIntSequence(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0});</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>3);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>100);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(66));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene1};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>100);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(88));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>increase<sp/>necessary<sp/>to<sp/>make<sp/>x-over<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom2.increaseAge();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene2);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>gene3.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(4));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene3);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf,2);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>following<sp/>crossover-operation<sp/>should<sp/>exchange<sp/>alleles<sp/>of<sp/>cgene1<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cgene2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chroms<sp/>size<sp/>=<sp/>3<sp/>+<sp/>2<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>=<sp/>number<sp/>of<sp/>already<sp/>existent<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>=<sp/>number<sp/>of<sp/>genes<sp/>added<sp/>from<sp/>&quot;population&quot;<sp/>(which<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(5,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>Gene<sp/>3<sp/>=<sp/>first<sp/>new<sp/>gene<sp/>(0..2<sp/>=<sp/>old<sp/>genes,<sp/>3..4<sp/>=<sp/>new<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(3);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>88<sp/>=<sp/>allele<sp/>of<sp/>cgene2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(88,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>Gene<sp/>4<sp/>=<sp/>second<sp/>new<sp/>gene<sp/>(0..2<sp/>=<sp/>old<sp/>genes,<sp/>3..4<sp/>=<sp/>new<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(4);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>66<sp/>=<sp/>allele<sp/>of<sp/>cgene1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(66,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a071dfc861b18f3b974fcc29344965f3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a071dfc861b18f3b974fcc29344965f3c" kindref="member">testOperate_0_2</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>conf.addGeneticOperator(op);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preset<sp/>&quot;random&quot;<sp/>values:<sp/>index<sp/>first<sp/>chromosome,<sp/>index<sp/>second<sp/>chromosome,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>locus<sp/>(index<sp/>of<sp/>gene<sp/>on<sp/>chromosome)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextIntSequence(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0});</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(6));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene1};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(8));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>increase<sp/>necessary<sp/>to<sp/>make<sp/>x-over<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom2.increaseAge();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chroms<sp/>size<sp/>=<sp/>1<sp/>+<sp/>2<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>=<sp/>number<sp/>of<sp/>already<sp/>existent<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>=<sp/>number<sp/>of<sp/>genes<sp/>added<sp/>from<sp/>&quot;population&quot;<sp/>(which<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>Gene<sp/>1<sp/>=<sp/>first<sp/>new<sp/>gene<sp/>(0..0<sp/>=<sp/>old<sp/>genes,<sp/>1..2<sp/>=<sp/>new<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(1);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(8,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>Gene<sp/>2<sp/>=<sp/>second<sp/>new<sp/>gene<sp/>(0..0<sp/>=<sp/>old<sp/>genes,<sp/>1..2<sp/>=<sp/>new<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(2);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(6,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chroms<sp/>size<sp/>=<sp/>1<sp/>+<sp/>2<sp/>+<sp/>2<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>+<sp/>2<sp/>=<sp/>number<sp/>of<sp/>already<sp/>existent<sp/>genes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>=<sp/>number<sp/>of<sp/>genes<sp/>added<sp/>from<sp/>&quot;population&quot;<sp/>(which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>2<sp/>genes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1<sp/>+<sp/>2<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a568a7b05bdcaee46722fa2d2caab2ba0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a568a7b05bdcaee46722fa2d2caab2ba0" kindref="member">testOperate_1</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>conf.addGeneticOperator(op);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextIntSequence(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>2});</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>3);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(6));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene1};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(8));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>some<sp/>genes<sp/>to<sp/>chroms<sp/>that<sp/>should<sp/>not<sp/>be<sp/>overridden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene2);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[])<sp/>population.<ref refid="classorg_1_1jgap_1_1_chromosome_1a9f590d55a34d8b99c2a9a1b4aedd568b" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_genetic_operator" kindref="compound">GeneticOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population2),<sp/>chroms);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a4f484987731cdc5276ee2575a165fcf3" kindref="member">isChromosomesEqual</ref>(population,<sp/>population2));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>original<sp/>genes<sp/>have<sp/>not<sp/>been<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(gene1,<sp/>chroms.get(0));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(gene2,<sp/>chroms.get(1));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a04597a3c0b3976e1f9e723e74072ed76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a04597a3c0b3976e1f9e723e74072ed76" kindref="member">testOperate_2</ref>()</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextIntSequence(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>2});</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>3);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(6));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref><sp/>compGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref>(conf);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>compGene.addGene(cgene1);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGene};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(8));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>increase<sp/>necessary<sp/>to<sp/>make<sp/>x-over<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom2.increaseAge();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene2);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf,<sp/>2);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>crossing<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>of<sp/>chroms<sp/>=<sp/>2<sp/>(original<sp/>chromosomes)<sp/>+<sp/>2<sp/>(from<sp/>&quot;population&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(2);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref><sp/>result<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref>)<sp/>target.getGene(0);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(8,<sp/>(<sp/>(Integer)<sp/>(<sp/>(Vector)<sp/>result.<ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a06d9f8415a3386a04b4eebc12850dbcf" kindref="member">getAllele</ref>())</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">get</highlight><highlight class="normal">(0)).intValue());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(3);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(6,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a6a9c8507f438a534c8a44f3b662cc9d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a6a9c8507f438a534c8a44f3b662cc9d1" kindref="member">testOperate_3</ref>()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_i_genetic_operator_constraint" kindref="compound">IGeneticOperatorConstraint</ref><sp/>constraint<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing" kindref="compound">GeneticOperatorConstraintForTesting</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.getJGAPFactory().setGeneticOperatorConstraint(constraint);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextIntSequence(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>2});</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>3);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene0<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene0.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(8));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes0<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene0};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom0<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes0);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene1};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome_for_testing" kindref="compound">ChromosomeForTesting</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome_for_testing" kindref="compound">ChromosomeForTesting</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(6));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>increase<sp/>necessary<sp/>to<sp/>make<sp/>x-over<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom2.increaseAge();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom0,<sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>some<sp/>nonsense<sp/>objects<sp/>to<sp/>results<sp/>list<sp/>(to<sp/>see<sp/>if<sp/>they<sp/>are<sp/>kept).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene2);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf,<sp/>2);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>crossing<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>chroms);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(gene1,<sp/>chroms.get(0));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(gene2,<sp/>chroms.get(1));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(2);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(6,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>chroms.get(3);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(8,<sp/>(<sp/>(Integer)<sp/>target.getGene(0).getAllele()).intValue());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a732469b287c30040bf26e7f6751c119b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a732469b287c30040bf26e7f6751c119b" kindref="member">testIsSerializable_0</ref>()</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" kindref="member">isSerializable</ref>(op));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a190fff4ebb6548e7b1d218f48f51a017" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a190fff4ebb6548e7b1d218f48f51a017" kindref="member">testDoSerialize_0</ref>()</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>object<sp/>to<sp/>be<sp/>serialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>o<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" kindref="member">doSerialize</ref>(op);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(o,<sp/>op);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a9b0421cd898462856e66131b7590141a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1a9b0421cd898462856e66131b7590141a" kindref="member">testDoSerialize_1</ref>()</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>object<sp/>to<sp/>be<sp/>serialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(conf,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>o<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" kindref="member">doSerialize</ref>(op);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(o,<sp/>op);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing" kindref="compound">GeneticOperatorConstraintForTesting</ref></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_i_genetic_operator_constraint" kindref="compound">IGeneticOperatorConstraint</ref><sp/>{</highlight></codeline>
<codeline lineno="526" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing_1a78254e4e062004c2440858c0d3a59fa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1_1_genetic_operator_constraint_for_testing_1a78254e4e062004c2440858c0d3a59fa9" kindref="member">isValid</ref>(<ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref><sp/>a_pop,<sp/>List<sp/>a_chromosomes,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_genetic_operator" kindref="compound">GeneticOperator</ref><sp/>a_caller)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Iterator<sp/>it<sp/>=<sp/>a_chromosomes.iterator();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>)<sp/>it.next();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1jgap_1_1_chromosome_for_testing" kindref="compound">ChromosomeForTesting</ref>.class<sp/>==<sp/>chrom.getClass())<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1abdcf80d860e979d58f927d43bc84a101" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1abdcf80d860e979d58f927d43bc84a101" kindref="member">testEquals_0</ref>()</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_genetic_operator" kindref="compound">GeneticOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(op.equals(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>)));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1ae6d7cab1227e4a66387f65012a16850b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_test_1ae6d7cab1227e4a66387f65012a16850b" kindref="member">testCompareTo_0</ref>()</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a13ba59ced7b3bfd8b7f9433756664726" kindref="member">compareTo</ref>(null));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref><sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator_1a13ba59ced7b3bfd8b7f9433756664726" kindref="member">compareTo</ref>(op2));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(-1,<sp/>op.compareTo(op2));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op2.compareTo(op));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op.compareTo(op2));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(<sp/>-1,<sp/>op2.compareTo(op));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_crossover_operator" kindref="compound">CrossoverOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>op.compareTo(op2));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CrossoverOperatorTest.java"/>
  </compounddef>
</doxygen>
