<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid" kind="class" prot="public">
    <compoundname>examples::gp::symbolicRegression::Sigmoid</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MathCommand</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ICloneable</basecompoundref>
    <innerclass refid="interfaceexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1_1_compatible" prot="protected">examples::gp::symbolicRegression::Sigmoid::Compatible</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1ac6597457c3deea5310e5a3fb7a8520d7" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.gp.symbolicRegression.Sigmoid.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.1 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1aaebda63b279fa043e2f98b2c318a9989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.gp.symbolicRegression.Sigmoid.Sigmoid</definition>
        <argsstring>(final GPConfiguration a_conf, Class a_returnType)</argsstring>
        <name>Sigmoid</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_returnType</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="40" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="40" bodyend="43"/>
        <referencedby refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a6a35ee90e09e868d82ee62386f34ec4f" compoundref="_sigmoid_8java" startline="82" endline="89">examples.gp.symbolicRegression.Sigmoid.clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a7b2e7d1f0cba3e9e3afb544c24156474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.Sigmoid.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="45" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a6d23ccbdb487c8f7e3a8d0443c346352" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.Sigmoid.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>textual name of this command</para></simplesect>
<simplesect kind="author"><para>Hakan Kjellerstrand (based on Klaus Meffert&apos;s Log file) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a0f2a2fbd1e3f3ccb7376d91e343620ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float examples.gp.symbolicRegression.Sigmoid.execute_float</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_float</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a073543c5af217d1934aebd060fba712d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.gp.symbolicRegression.Sigmoid.execute_double</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_double</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="63" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a2642230cf325d1025266b3aa9d42ed0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object examples.gp.symbolicRegression.Sigmoid.execute_object</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_object</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="68" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a6a35ee90e09e868d82ee62386f34ec4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object examples.gp.symbolicRegression.Sigmoid.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clones the object. Simple and straight forward implementation here.</para><para><simplesect kind="return"><para>cloned instance of this object</para></simplesect>
<simplesect kind="author"><para>Hakan Kjellerstrand (based on Klaus Meffert&apos;s Log file) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="82" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="82" bodyend="89"/>
        <references refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1aaebda63b279fa043e2f98b2c318a9989" compoundref="_sigmoid_8java" startline="40" endline="43">examples.gp.symbolicRegression.Sigmoid.Sigmoid</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Returns the <ref refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid" kindref="compound">Sigmoid</ref> of a double value.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="17690">
        <label>examples.gp.symbolicRegression.Sigmoid</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid"/>
        <childnode refid="17691" relation="public-inheritance">
        </childnode>
        <childnode refid="17692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17691">
        <label>MathCommand</label>
      </node>
      <node id="17692">
        <label>ICloneable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17693">
        <label>examples.gp.symbolicRegression.Sigmoid</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid"/>
        <childnode refid="17694" relation="public-inheritance">
        </childnode>
        <childnode refid="17695" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17694">
        <label>MathCommand</label>
      </node>
      <node id="17695">
        <label>ICloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/Sigmoid.java" bodystart="35" bodyend="90"/>
    <listofallmembers>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a6a35ee90e09e868d82ee62386f34ec4f" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>clone</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1ac6597457c3deea5310e5a3fb7a8520d7" prot="private" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a073543c5af217d1934aebd060fba712d" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>execute_double</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a0f2a2fbd1e3f3ccb7376d91e343620ce" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>execute_float</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a2642230cf325d1025266b3aa9d42ed0f" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>execute_object</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a6d23ccbdb487c8f7e3a8d0443c346352" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>getName</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1aaebda63b279fa043e2f98b2c318a9989" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>Sigmoid</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_sigmoid_1a7b2e7d1f0cba3e9e3afb544c24156474" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::Sigmoid</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
