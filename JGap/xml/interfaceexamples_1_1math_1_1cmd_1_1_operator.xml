<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interfaceexamples_1_1math_1_1cmd_1_1_operator" kind="interface" prot="public">
    <compoundname>examples::math::cmd::Operator</compoundname>
    <basecompoundref refid="interfaceexamples_1_1math_1_1cmd_1_1_operand" prot="public" virt="non-virtual">examples.math.cmd.Operand</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ICloneable</basecompoundref>
    <derivedcompoundref refid="classexamples_1_1math_1_1cmd_1_1_math_operator" prot="public" virt="non-virtual">examples.math.cmd.MathOperator</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="interfaceexamples_1_1math_1_1cmd_1_1_operator_1ab663b9142aea9a3bfa24565216dba755" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.math.cmd.Operator.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.1 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceexamples_1_1math_1_1cmd_1_1_operator_1a2498fd5b2a244bf2e63bc2613dc49e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double examples.math.cmd.Operator.calcuate</definition>
        <argsstring>()</argsstring>
        <name>calcuate</name>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_multiply_operator_1a582a725467188609ce540758a9b8950c">calcuate</reimplementedby>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_minus_operator_1ae0b4f472b4092248b6e88e790316d0fc">calcuate</reimplementedby>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_divide_operator_1ad828845a8752d36f022c5099f3b09dfc">calcuate</reimplementedby>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1a2f5f91fe8ca269a76e26554ffb4795ae">calcuate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" line="25" column="1"/>
        <referencedby refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a94d1b7d6b6d29c8cad4518a44011a493" compoundref="_math_operator_8java" startline="51" endline="53">examples.math.cmd.MathOperator.value</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceexamples_1_1math_1_1cmd_1_1_operator_1acd2737e0e2fa4cb2e3199b68e89bc540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceexamples_1_1math_1_1cmd_1_1_operand" kindref="compound">Operand</ref></type>
        <definition>Operand examples.math.cmd.Operator.getLeftOperand</definition>
        <argsstring>()</argsstring>
        <name>getLeftOperand</name>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a82444ae785a3f0ac0097130acd7d432c">getLeftOperand</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceexamples_1_1math_1_1cmd_1_1_operator_1a9475decb7446aa496fafa921d6c86d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceexamples_1_1math_1_1cmd_1_1_operand" kindref="compound">Operand</ref></type>
        <definition>Operand examples.math.cmd.Operator.getRightOperand</definition>
        <argsstring>()</argsstring>
        <name>getRightOperand</name>
        <reimplementedby refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1af9f13db06baf29ab594a4fd6df0efea9">getRightOperand</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" line="29" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface for mathematical operators with arity two.</para><para><simplesect kind="author"><para>Michael Grove </para></simplesect>
<simplesect kind="since"><para>3.4.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="16712">
        <label>examples.math.cmd.MathOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_math_operator"/>
        <childnode refid="16709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16710">
        <label>examples.math.cmd.Operand</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operand"/>
        <childnode refid="16711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16713">
        <label>examples.math.cmd.AddOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_add_operator"/>
        <childnode refid="16712" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16709">
        <label>examples.math.cmd.Operator</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operator"/>
        <childnode refid="16710" relation="public-inheritance">
        </childnode>
        <childnode refid="16711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16714">
        <label>examples.math.cmd.DivideOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_divide_operator"/>
        <childnode refid="16712" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16716">
        <label>examples.math.cmd.MultiplyOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_multiply_operator"/>
        <childnode refid="16712" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16715">
        <label>examples.math.cmd.MinusOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_minus_operator"/>
        <childnode refid="16712" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16711">
        <label>ICloneable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16718">
        <label>examples.math.cmd.Operand</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operand"/>
        <childnode refid="16719" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16717">
        <label>examples.math.cmd.Operator</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operator"/>
        <childnode refid="16718" relation="public-inheritance">
        </childnode>
        <childnode refid="16719" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16719">
        <label>ICloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" line="21" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/Operator.java" bodystart="20" bodyend="30"/>
    <listofallmembers>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operand_1aaadf6877856130d245dbb5a3a6993ef6" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>accept</name></member>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operator_1a2498fd5b2a244bf2e63bc2613dc49e96" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>calcuate</name></member>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operator_1ab663b9142aea9a3bfa24565216dba755" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>CVS_REVISION</name></member>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operator_1acd2737e0e2fa4cb2e3199b68e89bc540" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>getLeftOperand</name></member>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operator_1a9475decb7446aa496fafa921d6c86d01" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>getRightOperand</name></member>
      <member refid="interfaceexamples_1_1math_1_1cmd_1_1_operand_1aa5af74a515a1ecbd6cad1ecd1e618064" prot="public" virt="non-virtual"><scope>examples::math::cmd::Operator</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
