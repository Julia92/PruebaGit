<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_data_tree_builder_test_8java" kind="file">
    <compoundname>DataTreeBuilderTest.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test" prot="public">org::jgap::data::DataTreeBuilderTest</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1data">org::jgap::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.data;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.impl.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test" kindref="compound">DataTreeBuilderTest</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">JGAPTestCase</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1aa0655723fe40a4190a32c3d1e79e773c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1aa0655723fe40a4190a32c3d1e79e773c" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.12<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>chromosomes<sp/>used<sp/>in<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" kindref="member">NUM_CHROMS</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>genes<sp/>used<sp/>in<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" kindref="member">NUM_GENES</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1acdac36713838b42fbf8184a47847b557" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1acdac36713838b42fbf8184a47847b557" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1acdac36713838b42fbf8184a47847b557" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite(<ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test" kindref="compound">DataTreeBuilderTest</ref>.class);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1acdac36713838b42fbf8184a47847b557" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a17e227ae90814cd60fedc366c6ec3af4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a17e227ae90814cd60fedc366c6ec3af4" kindref="member">setUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>super.setUp();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Configuration.reset();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1af45a4095716ce8083c850d469e7f7b55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1af45a4095716ce8083c850d469e7f7b55" kindref="member">testRepresentGenotypeAsDocument_0</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configuration<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DefaultConfiguration();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StaticFitnessFunction(5));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(<ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" kindref="member">NUM_CHROMS</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>5),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>3)}));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>Genotype<sp/>with<sp/>a<sp/>population<sp/>of<sp/>NUM_CHROMS<sp/>Chromosomes,<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Chromosome<sp/>with<sp/>NUM_GENES<sp/>Genes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[<ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" kindref="member">NUM_CHROMS</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" kindref="member">NUM_CHROMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chroms[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>5),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>10)});</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chroms[i].getGene(0).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chroms[i].getGene(1).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref><sp/>popul<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>chroms);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_genotype" kindref="compound">Genotype</ref><sp/>genotype<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_genotype" kindref="compound">Genotype</ref>(conf,<sp/>popul);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>genotype<sp/>as<sp/>a<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_creators" kindref="compound">IDataCreators</ref><sp/>doc<sp/>=<sp/>DataTreeBuilder.getInstance().</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representGenotypeAsDocument(genotype);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>if<sp/>it<sp/>got<sp/>written<sp/>as<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>tree<sp/>=<sp/>doc.getTree();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>single<sp/>top<sp/>level<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(tree.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>element<sp/>=<sp/>tree.item(0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>Genotype<sp/>should<sp/>be<sp/>the<sp/>top<sp/>level<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(</highlight><highlight class="stringliteral">&quot;genotype&quot;</highlight><highlight class="normal">,<sp/>element.getTagName());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>chromList<sp/>=<sp/>element.getChildNodes();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(NUM_CHROMS,<sp/>chromList.getLength());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>chromosomes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a044a27fdc84ec1b3063b48f8894a79f4" kindref="member">NUM_CHROMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>chrom<sp/>=<sp/>chromList.item(i);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(chrom.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_1adcb1961f896d1edab8ebef2b6994f560" kindref="member">getTagName</ref>().equals(</highlight><highlight class="stringliteral">&quot;chromosome&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>genesList<sp/>=<sp/>chrom.getChildNodes();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(genesList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>genes<sp/>=<sp/>genesList.item(0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(genes.getTagName().equals(</highlight><highlight class="stringliteral">&quot;genes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>geneList<sp/>=<sp/>genes.getChildNodes();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(geneList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" kindref="member">NUM_GENES</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>genes<sp/>in<sp/>a<sp/>chromosome</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" kindref="member">NUM_GENES</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>gene<sp/>=<sp/>geneList.item(j);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(gene.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_1adcb1961f896d1edab8ebef2b6994f560" kindref="member">getTagName</ref>().equals(</highlight><highlight class="stringliteral">&quot;gene&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>alleleList<sp/>=<sp/>gene.getChildNodes();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(alleleList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>allele<sp/>=<sp/>alleleList.item(0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(allele.getTagName().equals(</highlight><highlight class="stringliteral">&quot;allele&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(allele.getAttribute(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">).</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equals(chroms[i].getGene(j).</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getPersistentRepresentation()));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a3d5c0711247c6ea2c4c32e46c3f1b383" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a3d5c0711247c6ea2c4c32e46c3f1b383" kindref="member">testRepresentChromosomeAsDocument_0</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DefaultConfiguration();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>5),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerGene(conf,<sp/>1,<sp/>10)});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom.getGene(0).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(1));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom.getGene(1).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(<sp/>-3));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>chromosome<sp/>as<sp/>a<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_creators" kindref="compound">IDataCreators</ref><sp/>doc<sp/>=<sp/>DataTreeBuilder.getInstance().</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representChromosomeAsDocument(chrom);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>if<sp/>it<sp/>got<sp/>written<sp/>as<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>tree<sp/>=<sp/>doc.getTree();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>single<sp/>top<sp/>level<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(tree.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>element<sp/>=<sp/>tree.item(0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>Chromosome<sp/>should<sp/>be<sp/>the<sp/>top<sp/>level<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(element.getTagName().equals(</highlight><highlight class="stringliteral">&quot;chromosome&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>chromsList<sp/>=<sp/>element.getChildNodes();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>chromsList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>genes<sp/>=<sp/>chromsList.item(0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(genes.getTagName().equals(</highlight><highlight class="stringliteral">&quot;genes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>geneList<sp/>=<sp/>genes.getChildNodes();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(geneList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" kindref="member">NUM_GENES</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>genes<sp/>in<sp/>a<sp/>chromosome</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classorg_1_1jgap_1_1data_1_1_data_tree_builder_test_1a4e22d9af8e2f651acebeb91c55ea7f66" kindref="member">NUM_GENES</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>gene<sp/>=<sp/>geneList.item(j);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(gene.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_1adcb1961f896d1edab8ebef2b6994f560" kindref="member">getTagName</ref>().equals(</highlight><highlight class="stringliteral">&quot;gene&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list" kindref="compound">IDataElementList</ref><sp/>alleleList<sp/>=<sp/>gene.getChildNodes();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(alleleList.<ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element_list_1aa9e2e115ba0dfd569a8b6fe9393c33d9" kindref="member">getLength</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1data_1_1_i_data_element" kindref="compound">IDataElement</ref><sp/>allele<sp/>=<sp/>alleleList.item(0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(allele.getTagName().equals(</highlight><highlight class="stringliteral">&quot;allele&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(allele.getAttribute(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">).</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equals(chrom.getGene(j).</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getPersistentRepresentation()));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/data/DataTreeBuilderTest.java"/>
  </compounddef>
</doxygen>
