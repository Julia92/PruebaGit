<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance" kind="class" prot="public">
    <compoundname>org::jgap::perf::TestOverallPerformance</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1ac41c91455d9fdd78203f0464c6c71727" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.perf.TestOverallPerformance.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.7 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1aa9b50c87546cbebd930aa4e91b4dfec6" prot="private" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.jgap.perf.TestOverallPerformance.MAX_ALLOWED_EVOLUTIONS</definition>
        <argsstring></argsstring>
        <name>MAX_ALLOWED_EVOLUTIONS</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of times we&apos;ll let the population evolve. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="36" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1ad523e31281c890faf7e3cc883b2d2898" compoundref="_test_overall_performance_8java" startline="51" endline="119">org.jgap.perf.TestOverallPerformance.makeChangeForAmount</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1ad523e31281c890faf7e3cc883b2d2898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.perf.TestOverallPerformance.makeChangeForAmount</definition>
        <argsstring>(int a_targetChangeAmount)</argsstring>
        <name>makeChangeForAmount</name>
        <param>
          <type>int</type>
          <declname>a_targetChangeAmount</declname>
        </param>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes the genetic algorithm to determine the minimum number of coins necessary to make up the given target amount of change. The solution will then be written to System.out.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_targetChangeAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>the target amount of change for which this method is attempting to produce the minimum number of coins</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="51" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="51" bodyend="119"/>
        <references refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1aa9b50c87546cbebd930aa4e91b4dfec6" compoundref="_test_overall_performance_8java" startline="36">org.jgap.perf.TestOverallPerformance.MAX_ALLOWED_EVOLUTIONS</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1a8a1f3db5c5abb3ae3788b4dc59e73491" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.jgap.perf.TestOverallPerformance.main</definition>
        <argsstring>(String[] args)</argsstring>
        <name>main</name>
        <param>
          <type>String[]</type>
          <declname>args</declname>
        </param>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the performance test.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="130" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="130" bodyend="146"/>
        <references refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1acc563ba735cdea009be0a1d6eba57fe3" compoundref="_test_overall_performance_8java" startline="151" endline="154">org.jgap.perf.TestOverallPerformance.getCurrentMilliseconds</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1acc563ba735cdea009be0a1d6eba57fe3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.jgap.perf.TestOverallPerformance.getCurrentMilliseconds</definition>
        <argsstring>()</argsstring>
        <name>getCurrentMilliseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current time in milliseconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="151" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="151" bodyend="154"/>
        <referencedby refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1a8a1f3db5c5abb3ae3788b4dc59e73491" compoundref="_test_overall_performance_8java" startline="130" endline="146">org.jgap.perf.TestOverallPerformance.main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides an implementation of an overall performance test. To obtain this, the provided example has been modified slightly, regarding the random number generator. We use a static number generator here which does not deserve the name &quot;random generator&quot;. With that we have a determined calculation path that results in reproducable results. By executing the example several times we get a performance measurement. The measured time has to be compared to other results manually as with different hardware equipment the numbers vary a lot.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/perf/TestOverallPerformance.java" bodystart="29" bodyend="155"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1ac41c91455d9fdd78203f0464c6c71727" prot="private" virt="non-virtual"><scope>org::jgap::perf::TestOverallPerformance</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1acc563ba735cdea009be0a1d6eba57fe3" prot="private" virt="non-virtual"><scope>org::jgap::perf::TestOverallPerformance</scope><name>getCurrentMilliseconds</name></member>
      <member refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1a8a1f3db5c5abb3ae3788b4dc59e73491" prot="public" virt="non-virtual"><scope>org::jgap::perf::TestOverallPerformance</scope><name>main</name></member>
      <member refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1ad523e31281c890faf7e3cc883b2d2898" prot="public" virt="non-virtual"><scope>org::jgap::perf::TestOverallPerformance</scope><name>makeChangeForAmount</name></member>
      <member refid="classorg_1_1jgap_1_1perf_1_1_test_overall_performance_1aa9b50c87546cbebd930aa4e91b4dfec6" prot="private" virt="non-virtual"><scope>org::jgap::perf::TestOverallPerformance</scope><name>MAX_ALLOWED_EVOLUTIONS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
