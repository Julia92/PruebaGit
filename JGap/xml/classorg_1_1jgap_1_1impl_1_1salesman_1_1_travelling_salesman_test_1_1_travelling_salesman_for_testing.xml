<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing" kind="class" prot="public">
    <compoundname>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman" prot="public" virt="non-virtual">org.jgap.impl.salesman.Salesman</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1af3a7d892c006e39524622ed2ee779c16" prot="public" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.CITIES</definition>
        <argsstring></argsstring>
        <name>CITIES</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of cities to visit, 7 by default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" line="126" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" bodystart="126" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1a3587ad164718c422dba17cc9c1a2507f" compoundref="_travelling_salesman_test_8java" startline="135" endline="147">org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.createSampleChromosome</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1ad85b8e3b7f696be1895a8f4942786a2d" compoundref="_travelling_salesman_test_8java" startline="158" endline="170">org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.distance</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1a3587ad164718c422dba17cc9c1a2507f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_i_chromosome" kindref="compound">IChromosome</ref></type>
        <definition>IChromosome org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.createSampleChromosome</definition>
        <argsstring>(Object a_initial_data)</argsstring>
        <name>createSampleChromosome</name>
        <reimplements refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a862317900d8463de5375560a20b2df34">createSampleChromosome</reimplements>
        <param>
          <type>Object</type>
          <declname>a_initial_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array of the given number of integer genes. The first gene is always 0, this is a city where the salesman starts the journey.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_initial_data</parametername>
</parameternamelist>
<parameterdescription>
<para>not needed here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new chromosome </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" line="135" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" bodystart="135" bodyend="147"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1af3a7d892c006e39524622ed2ee779c16" compoundref="_travelling_salesman_test_8java" startline="126">org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.CITIES</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a2d0c09a1b99ae518259a4e551fe12d3b" compoundref="_salesman_8java" startline="285" endline="287">org.jgap.impl.salesman.Salesman.getConfiguration</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1ad85b8e3b7f696be1895a8f4942786a2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.distance</definition>
        <argsstring>(Gene a_from, Gene a_to)</argsstring>
        <name>distance</name>
        <reimplements refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a423725e8d0b857402a4db166061137aa">distance</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
          <declname>a_from</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
          <declname>a_to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Distance is equal to the difference between city numbers, except the distance between the last and first cities that is equal to 1. In this way, we ensure that the optimal soultion is 0 1 2 3 .. n - easy to check. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_from</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_to</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance betwen cities </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" line="158" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" bodystart="158" bodyend="170"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1af3a7d892c006e39524622ed2ee779c16" compoundref="_travelling_salesman_test_8java" startline="126">org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting.CITIES</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Explains how to use JGap extensions, needed to solve the task group, known as the <emphasis>Problem of the travelling salesman</emphasis>. The extensions are defined in <ref refid="namespaceorg_1_1jgap_1_1impl_1_1salesman" kindref="compound">org.jgap.impl.salesman</ref></para><para>&lt;font size=&quot;-1&quot;&gt;</para><para>The traveling salesman problem is the following: given a finite number of &apos;cities&apos; along with the cost of travel between each pair of them, find the cheapest way of visiting all the cities and returning to your starting point. </para><para>&lt;/font&gt;</para><para>See <itemizedlist>
<listitem>
<para>J. Grefenstette, R. Gopal, R. Rosmaita, and D. Gucht. <emphasis>Genetic algorithms for the traveling salesman problem</emphasis>. In Proceedings of the Second International Conference on Genetic Algorithms. Lawrence Eribaum Associates, Mahwah, NJ, 1985.  </para></listitem>
<listitem>
<para><ulink url="http://ecsl.cs.unr.edu/docs/techreports/gong/node3.html">Sushil J. Louis &amp; Gong Li</ulink> (very clear explanatory material)  </para></listitem>
<listitem>
<para><ulink url="http://www.tsp.gatech.edu www.tsp.gatech.edu"><emphasis>Travelling salesman</emphasis> web site</ulink>  </para></listitem>
</itemizedlist>
</para><para>This simple test and example shows how to use the <ref refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman" kindref="compound">Salesman</ref> class. The distance between the cities is assumed to be equal to the difference of the assigned numbers. So, the optimal solution is obviously 1 2 3 4 ... n or reverse, but the system does not know this. To get the useful application, you need to override at least the distance function. Also, it is recommended to define a new type of gene, corresponding the data about your &quot;city&quot;. For example, it can contain the city X and Y co-ordinates, used by the distance function.</para><para><simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18648">
        <label>Serializable</label>
      </node>
      <node id="18647">
        <label>org.jgap.impl.salesman.Salesman</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman"/>
        <childnode refid="18648" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18646">
        <label>org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing"/>
        <childnode refid="18647" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18662">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="18667">
        <label>List</label>
      </node>
      <node id="18666">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18663">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18651">
        <label>Serializable</label>
      </node>
      <node id="18656">
        <label>Comparable</label>
      </node>
      <node id="18650">
        <label>org.jgap.impl.salesman.Salesman</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18652" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
      </node>
      <node id="18654">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="18655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18660">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18664">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18655">
        <label>Cloneable</label>
      </node>
      <node id="18649">
        <label>org.jgap.impl.salesman.TravellingSalesmanTest.TravellingSalesmanForTesting</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing"/>
        <childnode refid="18650" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18658">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18665">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18657">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="18654" relation="public-inheritance">
        </childnode>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18661">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="18656" relation="public-inheritance">
        </childnode>
        <childnode refid="18654" relation="public-inheritance">
        </childnode>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18662" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18652">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="18653" relation="public-inheritance">
        </childnode>
        <childnode refid="18651" relation="public-inheritance">
        </childnode>
        <childnode refid="18654" relation="public-inheritance">
        </childnode>
        <childnode refid="18656" relation="public-inheritance">
        </childnode>
        <childnode refid="18657" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="18658" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="18659" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="18660" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="18661" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="18663" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="18664" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18665" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="18666" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18667" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="18659">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="18653">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" line="124" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/salesman/TravellingSalesmanTest.java" bodystart="123" bodyend="171"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1af3a7d892c006e39524622ed2ee779c16" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>CITIES</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a193cb2998893eb36fc7d37cc87d24326" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>createConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1accdccbaa500b8c5ad94cd861cf7e9306" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>createFitnessFunction</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1a3587ad164718c422dba17cc9c1a2507f" prot="public" virt="virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>createSampleChromosome</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_travelling_salesman_test_1_1_travelling_salesman_for_testing_1ad85b8e3b7f696be1895a8f4942786a2d" prot="public" virt="virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>distance</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a17270454b42f21cf42819a47c65c65ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>findOptimalPath</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a2d0c09a1b99ae518259a4e551fe12d3b" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1ad5ff641569964f2c82cdc769e18fa9ec" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>getMaxEvolution</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a493897c0bbe0d11d7c600bfc8bff882d" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>getPopulationSize</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1abcd6189164cf7f797c141a43d12d66a3" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>getStartOffset</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a490c23524355029fb233ba131371019e" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>setMaxEvolution</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a35ae7583e5a7148d600351147e8b24b6" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>setPopulationSize</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1salesman_1_1_salesman_1a2b2c4a050ea8d6b8974465a3ca933d9e" prot="public" virt="non-virtual"><scope>org::jgap::impl::salesman::TravellingSalesmanTest::TravellingSalesmanForTesting</scope><name>setStartOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
