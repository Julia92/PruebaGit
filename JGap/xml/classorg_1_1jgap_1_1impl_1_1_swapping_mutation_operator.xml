<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kind="class" prot="public">
    <compoundname>org::jgap::impl::SwappingMutationOperator</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator" prot="public" virt="non-virtual">org.jgap.impl.MutationOperator</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a0ffd35f7d9b1437b5cb2c4bbcd3687de" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.SwappingMutationOperator.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.21 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.jgap.impl.SwappingMutationOperator.m_startOffset</definition>
        <argsstring></argsstring>
        <name>m_startOffset</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="36" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" compoundref="_swapping_mutation_operator_8java" startline="254" endline="256">org.jgap.impl.SwappingMutationOperator.getStartOffset</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a43cda60692e8d1a1fcecb6a0e4e00073" compoundref="_swapping_mutation_operator_8java" startline="165" endline="195">org.jgap.impl.SwappingMutationOperator.operate</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1aceccb3775429c8efd2b45ad6e7f979d0" compoundref="_swapping_mutation_operator_8java" startline="239" endline="241">org.jgap.impl.SwappingMutationOperator.setStartOffset</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a99466fe42f99057ac58575f31c8ac0c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.SwappingMutationOperator.SwappingMutationOperator</definition>
        <argsstring>()</argsstring>
        <name>SwappingMutationOperator</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new instance of this operator.</para><para>Attention: The configuration used is the one set with the static method Genotype.setConfiguration.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="47" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a63832201f7929c857ac8c08a36e8774d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.SwappingMutationOperator.SwappingMutationOperator</definition>
        <argsstring>(final Configuration a_config)</argsstring>
        <name>SwappingMutationOperator</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="59" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a5125bd9c3714d95f5c1097bf011d3c23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.SwappingMutationOperator.SwappingMutationOperator</definition>
        <argsstring>(final Configuration a_config, final IUniversalRateCalculator a_mutationRateCalculator)</argsstring>
        <name>SwappingMutationOperator</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_i_universal_rate_calculator" kindref="compound">IUniversalRateCalculator</ref></type>
          <declname>a_mutationRateCalculator</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new instance of this operator with a specified mutation rate calculator, which results in dynamic mutation being turned on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_mutationRateCalculator</parametername>
</parameternamelist>
<parameterdescription>
<para>calculator for dynamic mutation rate computation </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 (previously: without a_config) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="77" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a615f713435327476dc65db3f0200157e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.SwappingMutationOperator.SwappingMutationOperator</definition>
        <argsstring>(final Configuration a_config, final int a_desiredMutationRate)</argsstring>
        <name>SwappingMutationOperator</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>a_desiredMutationRate</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new instance of this <ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator" kindref="compound">MutationOperator</ref> with the given mutation rate.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_desiredMutationRate</parametername>
</parameternamelist>
<parameterdescription>
<para>desired rate of mutation, expressed as the denominator of the 1 / X fraction. For example, 1000 would result in 1/1000 genes being mutated on average. A mutation rate of zero disables mutation entirely </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 (previously: without a_config) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="98" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a810eb9c5bd759b5e4a61f6a91963b7df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.SwappingMutationOperator.operate</definition>
        <argsstring>(final Population a_population, List a_candidateChromosomes)</argsstring>
        <name>operate</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref></type>
          <declname>a_population</declname>
        </param>
        <param>
          <type>List</type>
          <declname>a_candidateChromosomes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_population</parametername>
</parameternamelist>
<parameterdescription>
<para>the population of chromosomes from the current evolution prior to exposure to any genetic operators. Chromosomes in this array should not be modified. Please, notice, that the call in <ref refid="classorg_1_1jgap_1_1_genotype_1a54a6791fbb6e13920e79f4e2dd719eb4" kindref="member">Genotype.evolve()</ref> to the implementations of <ref refid="interfaceorg_1_1jgap_1_1_genetic_operator" kindref="compound">GeneticOperator</ref> overgoes this due to performance issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_candidateChromosomes</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool of chromosomes that have been selected for the next evolved population</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Audrius Meskauskas </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="117" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="117" bodyend="152"/>
        <references refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" compoundref="_base_genetic_operator_8java" startline="57" endline="59">org.jgap.BaseGeneticOperator.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" compoundref="_mutation_operator_8java" startline="372" endline="374">org.jgap.impl.MutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" compoundref="_mutation_operator_8java" startline="276" endline="278">org.jgap.impl.MutationOperator.getMutationRateCalc</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a7159d9d04d2eec98514a4756411b1699" compoundref="_mutation_operator_8java" startline="43">org.jgap.impl.MutationOperator.m_mutationRateCalc</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a43cda60692e8d1a1fcecb6a0e4e00073" compoundref="_swapping_mutation_operator_8java" startline="165" endline="195">org.jgap.impl.SwappingMutationOperator.operate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1aceccb3775429c8efd2b45ad6e7f979d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.SwappingMutationOperator.setStartOffset</definition>
        <argsstring>(final int a_offset)</argsstring>
        <name>setStartOffset</name>
        <param>
          <type>final int</type>
          <declname>a_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a number of genes at the start of chromosome, that are excluded from the swapping. In the Salesman task, the first city in the list should (where the salesman leaves from) probably should not change as it is part of the list. The default value is 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="239" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="239" bodyend="241"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" compoundref="_swapping_mutation_operator_8java" startline="36">org.jgap.impl.SwappingMutationOperator.m_startOffset</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.SwappingMutationOperator.getStartOffset</definition>
        <argsstring>()</argsstring>
        <name>getStartOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a number of genes at the start of chromosome, that are excluded from the swapping. In the Salesman task, the first city in the list should (where the salesman leaves from) probably should not change as it is part of the list. The default value is 1.</para><para><simplesect kind="return"><para>the start offset</para></simplesect>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="254" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="254" bodyend="256"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" compoundref="_swapping_mutation_operator_8java" startline="36">org.jgap.impl.SwappingMutationOperator.m_startOffset</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ad21ac2ce7a69b2efd0b54e0eb38c0f6e" compoundref="_swapping_mutation_operator_test_8java" startline="320" endline="330">org.jgap.impl.SwappingMutationOperatorTest.testStartoffset_0</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a43cda60692e8d1a1fcecb6a0e4e00073" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_i_chromosome" kindref="compound">IChromosome</ref></type>
        <definition>IChromosome org.jgap.impl.SwappingMutationOperator.operate</definition>
        <argsstring>(final IChromosome a_chrom, final int a_rate, final RandomGenerator a_generator)</argsstring>
        <name>operate</name>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_i_chromosome" kindref="compound">IChromosome</ref></type>
          <declname>a_chrom</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>a_rate</declname>
        </param>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operate on the given chromosome with the given mutation rate.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_chrom</parametername>
</parameternamelist>
<parameterdescription>
<para>chromosome to operate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>mutation rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>random generator to use (must not be null) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mutated chromosome of null if no mutation has occured.</para></simplesect>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="165" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="165" bodyend="195"/>
        <references refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable_1aa7e7d62077e6428ad7904932b1b4f7d5">org.jgap.util.ICloneable.clone</references>
        <references refid="classorg_1_1jgap_1_1_base_genetic_operator_1a5194e705ed206f99852bf158546646b5" compoundref="_base_genetic_operator_8java" startline="30">org.jgap.BaseGeneticOperator.m_monitorActive</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" compoundref="_swapping_mutation_operator_8java" startline="36">org.jgap.impl.SwappingMutationOperator.m_startOffset</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1a993f3b23cfbc3f8001405544580eda2e">org.jgap.RandomGenerator.nextInt</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a810eb9c5bd759b5e4a61f6a91963b7df" compoundref="_swapping_mutation_operator_8java" startline="117" endline="152">org.jgap.impl.SwappingMutationOperator.operate</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a4fdd309d7274d97a6a4ecfa68910a381" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]</type>
        <definition>Gene [] org.jgap.impl.SwappingMutationOperator.operate</definition>
        <argsstring>(final RandomGenerator a_generator, final int a_target_gene, final Gene[] a_genes)</argsstring>
        <name>operate</name>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_generator</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>a_target_gene</declname>
        </param>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]</type>
          <declname>a_genes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operate on the given array of genes. This method is only called when it is already clear that the mutation must occur under the given mutation rate.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>a random number generator that may be needed to perform a mutation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_target_gene</parametername>
</parameternamelist>
<parameterdescription>
<para>an index of gene in the chromosome that will mutate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_genes</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of all genes in the chromosome </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the mutated gene array</para></simplesect>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="211" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="211" bodyend="226"/>
        <references refid="classorg_1_1jgap_1_1_base_genetic_operator_1a5194e705ed206f99852bf158546646b5" compoundref="_base_genetic_operator_8java" startline="30">org.jgap.BaseGeneticOperator.m_monitorActive</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" compoundref="_swapping_mutation_operator_8java" startline="36">org.jgap.impl.SwappingMutationOperator.m_startOffset</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Swaps the genes instead of mutating them. This kind of operator is required by Traveling Salesman Problem.</para><para>See J. Grefenstette, R. Gopal, R. Rosmaita, and D. Gucht. <emphasis>Genetic algorithms for the traveling salesman problem</emphasis>. In Proceedings of the Second International Conference on Genetic Algorithms. Lawrence Eribaum Associates, Mahwah, NJ, 1985. and also <ulink url="http://ecsl.cs.unr.edu/docs/techreports/gong/node3.html">Sushil J. Louis &amp; Gong Li</ulink> }</para><para><simplesect kind="author"><para>Audrius Meskauskas </para><simplesectsep/><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18125">
        <label>org.jgap.impl.SwappingMutationOperator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator"/>
        <childnode refid="18126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18128">
        <label>org.jgap.GeneticOperator</label>
        <link refid="interfaceorg_1_1jgap_1_1_genetic_operator"/>
        <childnode refid="18129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18129">
        <label>Serializable</label>
      </node>
      <node id="18130">
        <label>Comparable</label>
      </node>
      <node id="18127">
        <label>org.jgap.BaseGeneticOperator</label>
        <link refid="classorg_1_1jgap_1_1_base_genetic_operator"/>
        <childnode refid="18128" relation="public-inheritance">
        </childnode>
        <childnode refid="18130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18126">
        <label>org.jgap.impl.MutationOperator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator"/>
        <childnode refid="18127" relation="public-inheritance">
        </childnode>
        <childnode refid="18131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18131">
        <label>Configurable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18147">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="18152">
        <label>List</label>
      </node>
      <node id="18151">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
        <childnode refid="18140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18132">
        <label>org.jgap.impl.SwappingMutationOperator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator"/>
        <childnode refid="18133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18148">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18135">
        <label>org.jgap.GeneticOperator</label>
        <link refid="interfaceorg_1_1jgap_1_1_genetic_operator"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18136">
        <label>Serializable</label>
      </node>
      <node id="18154">
        <label>org.jgap.IUniversalRateCalculator</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_universal_rate_calculator"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18137">
        <label>Comparable</label>
      </node>
      <node id="18140">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="18141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18134">
        <label>org.jgap.BaseGeneticOperator</label>
        <link refid="classorg_1_1jgap_1_1_base_genetic_operator"/>
        <childnode refid="18135" relation="public-inheritance">
        </childnode>
        <childnode refid="18137" relation="public-inheritance">
        </childnode>
        <childnode refid="18138" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
      </node>
      <node id="18145">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18149">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
        <childnode refid="18140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18141">
        <label>Cloneable</label>
      </node>
      <node id="18143">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18150">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18153">
        <label>org.jgap.impl.MutationOperator.MutationOperatorConfigurable</label>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18142">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="18140" relation="public-inheritance">
        </childnode>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
        <childnode refid="18137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18146">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="18137" relation="public-inheritance">
        </childnode>
        <childnode refid="18140" relation="public-inheritance">
        </childnode>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
        <childnode refid="18147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18133">
        <label>org.jgap.impl.MutationOperator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator"/>
        <childnode refid="18134" relation="public-inheritance">
        </childnode>
        <childnode refid="18139" relation="public-inheritance">
        </childnode>
        <childnode refid="18153" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="18154" relation="usage">
          <edgelabel>m_mutationRateCalc</edgelabel>
        </childnode>
      </node>
      <node id="18138">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="18139" relation="public-inheritance">
        </childnode>
        <childnode refid="18136" relation="public-inheritance">
        </childnode>
        <childnode refid="18140" relation="public-inheritance">
        </childnode>
        <childnode refid="18137" relation="public-inheritance">
        </childnode>
        <childnode refid="18142" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="18143" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="18144" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="18145" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="18146" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="18148" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="18149" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18150" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="18151" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18152" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="18144">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="18139">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/SwappingMutationOperator.java" bodystart="31" bodyend="257"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_base_genetic_operator_1a061b47c0f891c0041d5ece5bc6e052f8" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>BaseGeneticOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a0a45fadb8c98c2654220f42317286e43" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a0ffd35f7d9b1437b5cb2c4bbcd3687de" prot="private" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1abf3ab580f3f5755f8dfc0cdfabe18530" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_genetic_operator_1addbc6b98f572331d47397227b7a49f6a" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>getMutationRate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>getMutationRateCalc</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>getStartOffset</name></member>
      <member refid="classorg_1_1jgap_1_1_base_genetic_operator_1a516d89e8f56eb2e58768218c7f9cf3de" prot="protected" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>m_monitor</name></member>
      <member refid="classorg_1_1jgap_1_1_base_genetic_operator_1a5194e705ed206f99852bf158546646b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>m_monitorActive</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a542b0fe73976a2e9f45cf45402127b39" prot="private" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>m_startOffset</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a70ee0430f18e07c0cbdcdc3370da013a" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>MutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1ab7a875f7a9c62a2fa4ba3ace00bbe0ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>MutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1aefd976178a75cd5641929533c367d39c" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>MutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1abdacf3ee2ef8a6f544af2424f9682ec8" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>MutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a810eb9c5bd759b5e4a61f6a91963b7df" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>operate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a43cda60692e8d1a1fcecb6a0e4e00073" prot="protected" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>operate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a4fdd309d7274d97a6a4ecfa68910a381" prot="protected" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>operate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4a1c852770559bba4ffa3e9718f4a0d8" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::MutationOperator."><scope>org::jgap::impl::SwappingMutationOperator</scope><name>operate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a8aecc7650a9743a737dac2d5ed782f87" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>setMutationRate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a1ba32ba71ff16141bb7c9f6c3a0a8865" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>setMutationRateCalc</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1aceccb3775429c8efd2b45ad6e7f979d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>setStartOffset</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a99466fe42f99057ac58575f31c8ac0c9" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>SwappingMutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a63832201f7929c857ac8c08a36e8774d" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>SwappingMutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a5125bd9c3714d95f5c1097bf011d3c23" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>SwappingMutationOperator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1a615f713435327476dc65db3f0200157e" prot="public" virt="non-virtual"><scope>org::jgap::impl::SwappingMutationOperator</scope><name>SwappingMutationOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
