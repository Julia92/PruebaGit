<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1util_1_1random_x" kind="class" prot="public" abstract="yes">
    <compoundname>org::jgap::util::randomX</compoundname>
    <derivedcompoundref refid="classorg_1_1jgap_1_1util_1_1random_hot_bits" prot="public" virt="non-virtual">org.jgap.util.randomHotBits</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1util_1_1random_java" prot="public" virt="non-virtual">org.jgap.util.randomJava</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1util_1_1random_l_c_g" prot="public" virt="non-virtual">org.jgap.util.randomLCG</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1util_1_1random_l_ecuyer" prot="public" virt="non-virtual">org.jgap.util.randomLEcuyer</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1util_1_1random_m_c_g" prot="public" virt="non-virtual">org.jgap.util.randomMCG</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1random_x_1abc44223fc17ec257b1a4514b31ad3211" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.jgap.util.randomX.nbits</definition>
        <argsstring></argsstring>
        <name>nbits</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="27" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" compoundref="random_x_8java" startline="130" endline="141">org.jgap.util.randomX.nextBit</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1ab18450263842c7fde69a1d17579714dc" compoundref="random_x_8java" startline="49" endline="52">org.jgap.util.randomX.setSeed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1random_x_1af8cac8df13b9e25cb13d505e3d10ed8e" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.jgap.util.randomX.iset</definition>
        <argsstring></argsstring>
        <name>iset</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="28" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="28" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" compoundref="random_x_8java" startline="105" endline="122">org.jgap.util.randomX.nextGaussian</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1ab18450263842c7fde69a1d17579714dc" compoundref="random_x_8java" startline="49" endline="52">org.jgap.util.randomX.setSeed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1random_x_1a455672ae37ed072b4f820bfbb0741610" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.randomX.gset</definition>
        <argsstring></argsstring>
        <name>gset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="99" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="99" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" compoundref="random_x_8java" startline="105" endline="122">org.jgap.util.randomX.nextGaussian</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1random_x_1a150c6d8d0e49a38277c41352b000ce21" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte org.jgap.util.randomX.b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="126" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="126" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" compoundref="random_x_8java" startline="130" endline="141">org.jgap.util.randomX.nextBit</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1ab18450263842c7fde69a1d17579714dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.randomX.setSeed</definition>
        <argsstring>()</argsstring>
        <name>setSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset when seed changes. A generator which supports seed must call this method by <computeroutput>super.setSeed()</computeroutput> when its own <computeroutput>setSeed(</computeroutput><emphasis>long</emphasis><computeroutput>)</computeroutput> method is called. This allows <ref refid="classorg_1_1jgap_1_1util_1_1random_x" kindref="compound">randomX</ref> to discard any buffered data in the <computeroutput><ref refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" kindref="member">nextBit()</ref></computeroutput> and <computeroutput><ref refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" kindref="member">nextGaussian()</ref></computeroutput> methods so that subsequent calls will immediately reflect the new seed.</para><para>If a derived class does not permit specification of a seed (hardware-based generators, for example), it should declare:</para><para><blockquote><para><computeroutput>private void setSeed(long seed) { }</computeroutput> </para></blockquote></para><para>which will hide the setSeed method from its users and cause a compile-time error if a program attempts to specify a seed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="49" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="49" bodyend="52"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1af8cac8df13b9e25cb13d505e3d10ed8e" compoundref="random_x_8java" startline="28">org.jgap.util.randomX.iset</references>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1abc44223fc17ec257b1a4514b31ad3211" compoundref="random_x_8java" startline="27">org.jgap.util.randomX.nbits</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract byte</type>
        <definition>abstract byte org.jgap.util.randomX.nextByte</definition>
        <argsstring>()</argsstring>
        <name>nextByte</name>
        <reimplementedby refid="classorg_1_1jgap_1_1util_1_1random_hot_bits_1a4a58860751f086577a9b0f2866a9e647">nextByte</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1ab3b28701764c40bed7a00c9096612304">nextByte</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1util_1_1random_java_1a964a6603268d4d76c95c82e4a3b48955">nextByte</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1util_1_1random_m_c_g_1acb654143cff19333454f9be140a66092">nextByte</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1util_1_1random_l_ecuyer_1aea42f1e0206083a4b8943bd3ec50972d">nextByte</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return next [pseudo]random byte from low level generator. All generators derived from this class must implement <computeroutput><ref refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845" kindref="member">nextByte()</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="58" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" compoundref="random_x_8java" startline="130" endline="141">org.jgap.util.randomX.nextBit</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a2d85f4af5176e48b9463546f85b9f5e5" compoundref="random_x_8java" startline="150" endline="156">org.jgap.util.randomX.nextByte</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a70085735339aee1eb3be72dd292d29ec" compoundref="random_x_8java" startline="170" endline="172">org.jgap.util.randomX.nextShort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.util.randomX.nextInt</definition>
        <argsstring>()</argsstring>
        <name>nextInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random, uniformly distributed, <computeroutput>int</computeroutput> value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="73" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="73" bodyend="75"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a70085735339aee1eb3be72dd292d29ec" compoundref="random_x_8java" startline="170" endline="172">org.jgap.util.randomX.nextShort</references>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a8ce941e4b871d17c36586b89f915c47c" compoundref="random_x_8java" startline="87" endline="89">org.jgap.util.randomX.nextFloat</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a9a2981e95cb4e3f9acf59cbbaf383194" compoundref="random_x_8java" startline="80" endline="82">org.jgap.util.randomX.nextLong</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a9a2981e95cb4e3f9acf59cbbaf383194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.jgap.util.randomX.nextLong</definition>
        <argsstring>()</argsstring>
        <name>nextLong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random, uniformly distributed, <computeroutput>long</computeroutput> value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="80" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="80" bodyend="82"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" compoundref="random_x_8java" startline="73" endline="75">org.jgap.util.randomX.nextInt</references>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a61463f36f557007b65c688e91a5c5022" compoundref="random_x_8java" startline="94" endline="97">org.jgap.util.randomX.nextDouble</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a8ce941e4b871d17c36586b89f915c47c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float org.jgap.util.randomX.nextFloat</definition>
        <argsstring>()</argsstring>
        <name>nextFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random, uniformly distributed, <computeroutput>float</computeroutput> value, greater than or equal to 0 and less than 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="87" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="87" bodyend="89"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" compoundref="random_x_8java" startline="73" endline="75">org.jgap.util.randomX.nextInt</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a61463f36f557007b65c688e91a5c5022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.util.randomX.nextDouble</definition>
        <argsstring>()</argsstring>
        <name>nextDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random, uniformly distributed, <computeroutput>double</computeroutput> value, greater than or equal to 0 and less than 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="94" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="94" bodyend="97"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a9a2981e95cb4e3f9acf59cbbaf383194" compoundref="random_x_8java" startline="80" endline="82">org.jgap.util.randomX.nextLong</references>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" compoundref="random_x_8java" startline="105" endline="122">org.jgap.util.randomX.nextGaussian</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.util.randomX.nextGaussian</definition>
        <argsstring>()</argsstring>
        <name>nextGaussian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next Gaussian (normal, or bell-curve) distributed random value, with mean of 0.0 and standard deviation 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="105" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="105" bodyend="122"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a455672ae37ed072b4f820bfbb0741610" compoundref="random_x_8java" startline="99">org.jgap.util.randomX.gset</references>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1af8cac8df13b9e25cb13d505e3d10ed8e" compoundref="random_x_8java" startline="28">org.jgap.util.randomX.iset</references>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a61463f36f557007b65c688e91a5c5022" compoundref="random_x_8java" startline="94" endline="97">org.jgap.util.randomX.nextDouble</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.util.randomX.nextBit</definition>
        <argsstring>()</argsstring>
        <name>nextBit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random bit, as a <computeroutput>boolean</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="130" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="130" bodyend="141"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a150c6d8d0e49a38277c41352b000ce21" compoundref="random_x_8java" startline="126">org.jgap.util.randomX.b</references>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1abc44223fc17ec257b1a4514b31ad3211" compoundref="random_x_8java" startline="27">org.jgap.util.randomX.nbits</references>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845">org.jgap.util.randomX.nextByte</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a2d85f4af5176e48b9463546f85b9f5e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.randomX.nextByte</definition>
        <argsstring>(byte buf[], int buflen)</argsstring>
        <name>nextByte</name>
        <param>
          <type>byte</type>
          <declname>buf</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Fill a portion of an array of bytes with random data.
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>array of <computeroutput>byte</computeroutput> to fill.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to store. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="150" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="150" bodyend="156"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845">org.jgap.util.randomX.nextByte</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a2591a4836fa228447c5f508d6850c56c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.randomX.nextByte</definition>
        <argsstring>(byte buf[])</argsstring>
        <name>nextByte</name>
        <param>
          <type>byte</type>
          <declname>buf</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Fill an array of bytes with random data.
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>array of <computeroutput>byte</computeroutput>s to fill. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="163" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="163" bodyend="165"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845">org.jgap.util.randomX.nextByte</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_x_1a70085735339aee1eb3be72dd292d29ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>short org.jgap.util.randomX.nextShort</definition>
        <argsstring>()</argsstring>
        <name>nextShort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the next random, uniformly distributed, <computeroutput>short</computeroutput> value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="170" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="170" bodyend="172"/>
        <references refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845">org.jgap.util.randomX.nextByte</references>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" compoundref="random_x_8java" startline="73" endline="75">org.jgap.util.randomX.nextInt</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Abstract superclass for emulations of java.util.Random with
various underlying generators.  These generators provide a
superset of the methods of the built-in Java generator, and
allow easy replacement of the low-level byte-stream random
generator without the need to reimplement the higher-level
calls.
</verbatim> </para><para>The nature of the data returned by the functions in this class depends upon the generator provided by the class derived from it. If the generator is algorithmic, the data are pseudorandom; if a hardware generator is employed, genuine random data may be obtained. For brevity, in this document, we use <emphasis>random</emphasis> to refer to the data returned, whatever its actual source. </para><para>Designed and implemented in July 1996 by <ulink url="http://www.fourmilab.ch/">John Walker</ulink>, <ulink url="mailto:kelvin@fourmilab.ch">kelvin@fourmilab.ch</ulink>.</para><para><simplesect kind="see"><para>java.util.Random </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="17228">
        <label>org.jgap.util.randomX</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_x"/>
      </node>
      <node id="17231">
        <label>org.jgap.util.randomLCG</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_l_c_g"/>
        <childnode refid="17228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17229">
        <label>org.jgap.util.randomHotBits</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_hot_bits"/>
        <childnode refid="17228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17230">
        <label>org.jgap.util.randomJava</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_java"/>
        <childnode refid="17228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17232">
        <label>org.jgap.util.randomLEcuyer</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_l_ecuyer"/>
        <childnode refid="17228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17233">
        <label>org.jgap.util.randomMCG</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_m_c_g"/>
        <childnode refid="17228" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomX.java" bodystart="25" bodyend="173"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a150c6d8d0e49a38277c41352b000ce21" prot="private" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>b</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a455672ae37ed072b4f820bfbb0741610" prot="private" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>gset</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1af8cac8df13b9e25cb13d505e3d10ed8e" prot="private" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>iset</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1abc44223fc17ec257b1a4514b31ad3211" prot="private" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nbits</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextBit</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845" prot="public" virt="pure-virtual"><scope>org::jgap::util::randomX</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a2d85f4af5176e48b9463546f85b9f5e5" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a2591a4836fa228447c5f508d6850c56c" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a61463f36f557007b65c688e91a5c5022" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextDouble</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a8ce941e4b871d17c36586b89f915c47c" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextFloat</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextGaussian</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextInt</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a9a2981e95cb4e3f9acf59cbbaf383194" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextLong</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a70085735339aee1eb3be72dd292d29ec" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>nextShort</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1ab18450263842c7fde69a1d17579714dc" prot="public" virt="non-virtual"><scope>org::jgap::util::randomX</scope><name>setSeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
