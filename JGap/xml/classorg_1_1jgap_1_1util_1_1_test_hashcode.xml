<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1util_1_1_test_hashcode" kind="class" prot="public">
    <compoundname>org::jgap::util::TestHashcode</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a4888cc10337eb1d4c0225c7f0ff2d7ed" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.util.TestHashcode.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.8 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ad23c284a29777b3928ae126657bb0cb9" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.jgap.util.TestHashcode.m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines if object should output debug information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="28" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="28" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ae131c5551de0bf40b9225b14922743d7" compoundref="_test_hashcode_8java" startline="83" endline="85">org.jgap.util.TestHashcode.setVerbose</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" compoundref="_test_hashcode_8java" startline="239" endline="292">org.jgap.util.TestHashcode.testDispersion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1abfb003e9bfca7edd80c68823024178d5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_AverageMin</definition>
        <argsstring></argsstring>
        <name>m_AverageMin</name>
        <initializer>= 0.0d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum average value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">TestHashcode::testDispersion</ref>, <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a0d91cff36298abbb9761e0a864b79df9" kindref="member">m_AverageMax</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="36" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a22b485c1780827f6aac105ee0195a894" compoundref="_test_hashcode_8java" startline="105" endline="107">org.jgap.util.TestHashcode.setAverageMin</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" compoundref="_test_hashcode_8java" startline="239" endline="292">org.jgap.util.TestHashcode.testDispersion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a0d91cff36298abbb9761e0a864b79df9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_AverageMax</definition>
        <argsstring></argsstring>
        <name>m_AverageMax</name>
        <initializer>= 1.0d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum average value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">TestHashcode::testDispersion</ref>, <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1abfb003e9bfca7edd80c68823024178d5" kindref="member">m_AverageMin</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="44" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="44" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae8175c503c5865df1b053f1a069f0af" compoundref="_test_hashcode_8java" startline="94" endline="96">org.jgap.util.TestHashcode.setAverageMax</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" compoundref="_test_hashcode_8java" startline="239" endline="292">org.jgap.util.TestHashcode.testDispersion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a1601b935a90e3905a6107d9b88bbb47a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_StdDevMin</definition>
        <argsstring></argsstring>
        <name>m_StdDevMin</name>
        <initializer>= 1.0d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum Standard Deviation value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref>, <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8c500454e1a3728534cc3c0c5f848b52" kindref="member">m_StdDevMax</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="52" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a55f2e3c33a14b3d618fa4639f52532e5" compoundref="_test_hashcode_8java" startline="131" endline="133">org.jgap.util.TestHashcode.setStdDevMin</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" compoundref="_test_hashcode_8java" startline="239" endline="292">org.jgap.util.TestHashcode.testDispersion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8c500454e1a3728534cc3c0c5f848b52" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_StdDevMax</definition>
        <argsstring></argsstring>
        <name>m_StdDevMax</name>
        <initializer>= 2.0d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum Standard Deviation value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref>, <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a1601b935a90e3905a6107d9b88bbb47a" kindref="member">m_StdDevMin</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="60" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="60" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a9a8fc1bfe0d7798c1ec2bb2953d8dc61" compoundref="_test_hashcode_8java" startline="118" endline="120">org.jgap.util.TestHashcode.setStdDevMax</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" compoundref="_test_hashcode_8java" startline="239" endline="292">org.jgap.util.TestHashcode.testDispersion</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae2f2be35f516f8a9f75141267f43d49" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_fractionUnique</definition>
        <argsstring></argsstring>
        <name>m_fractionUnique</name>
        <initializer>= 0.9d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fraction of hashCodes that must be unique for the testHashCodeUniqueness method to succed.</para><para><simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" kindref="member">testHashCodeUniqueness</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="68" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="68" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a183ef9ad688b366f44bdc2c4d8fb4afe" compoundref="_test_hashcode_8java" startline="145" endline="151">org.jgap.util.TestHashcode.setFractionUnique</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" compoundref="_test_hashcode_8java" startline="169" endline="196">org.jgap.util.TestHashcode.testHashCodeUniqueness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a50fe2fcbfefbc22be87b0f486e00dd09" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.m_actualFractionUnique</definition>
        <argsstring></argsstring>
        <name>m_actualFractionUnique</name>
        <initializer>= 0.0d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Contains the real fraction of hashCodes that where found to be unique in testHashCodeUniqueness. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="74" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aba4717a5deb8ccff616483c261234097" compoundref="_test_hashcode_8java" startline="153" endline="155">org.jgap.util.TestHashcode.getActualFractionUnique</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" compoundref="_test_hashcode_8java" startline="169" endline="196">org.jgap.util.TestHashcode.testHashCodeUniqueness</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ae131c5551de0bf40b9225b14922743d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setVerbose</definition>
        <argsstring>(boolean a_verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type>boolean</type>
          <declname>a_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set whether the object will output debug information.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>true if you want debug information, else set to false</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="83" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="83" bodyend="85"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ad23c284a29777b3928ae126657bb0cb9" compoundref="_test_hashcode_8java" startline="28">org.jgap.util.TestHashcode.m_verbose</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae8175c503c5865df1b053f1a069f0af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setAverageMax</definition>
        <argsstring>(double a_averageMax)</argsstring>
        <name>setAverageMax</name>
        <param>
          <type>double</type>
          <declname>a_averageMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the maximum average value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test. Also see TestHascode::testDispersion.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_averageMax</parametername>
</parameternamelist>
<parameterdescription>
<para>New Maximum average </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="94" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="94" bodyend="96"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a0d91cff36298abbb9761e0a864b79df9" compoundref="_test_hashcode_8java" startline="44">org.jgap.util.TestHashcode.m_AverageMax</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a22b485c1780827f6aac105ee0195a894" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setAverageMin</definition>
        <argsstring>(double a_averageMin)</argsstring>
        <name>setAverageMin</name>
        <param>
          <type>double</type>
          <declname>a_averageMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the minimum average value of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_averageMin</parametername>
</parameternamelist>
<parameterdescription>
<para>new Minimum average </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">TestHashcode::testDispersion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="105" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="105" bodyend="107"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1abfb003e9bfca7edd80c68823024178d5" compoundref="_test_hashcode_8java" startline="36">org.jgap.util.TestHashcode.m_AverageMin</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a9a8fc1bfe0d7798c1ec2bb2953d8dc61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setStdDevMax</definition>
        <argsstring>(double a_stdDevMax)</argsstring>
        <name>setStdDevMax</name>
        <param>
          <type>double</type>
          <declname>a_stdDevMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the Maximum standard deviationvalue of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_stdDevMax</parametername>
</parameternamelist>
<parameterdescription>
<para>new Maximum standard deviation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">TestHashcode::testDispersion</ref></para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="118" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="118" bodyend="120"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8c500454e1a3728534cc3c0c5f848b52" compoundref="_test_hashcode_8java" startline="60">org.jgap.util.TestHashcode.m_StdDevMax</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a55f2e3c33a14b3d618fa4639f52532e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setStdDevMin</definition>
        <argsstring>(double a_stdDevMin)</argsstring>
        <name>setStdDevMin</name>
        <param>
          <type>double</type>
          <declname>a_stdDevMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the Minimum standard deviationvalue of hashCodes needed to pass the <ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">testDispersion()</ref> test</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_stdDevMin</parametername>
</parameternamelist>
<parameterdescription>
<para>new Minimum standard deviation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" kindref="member">TestHashcode::testDispersion</ref></para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="131" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="131" bodyend="133"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a1601b935a90e3905a6107d9b88bbb47a" compoundref="_test_hashcode_8java" startline="52">org.jgap.util.TestHashcode.m_StdDevMin</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a183ef9ad688b366f44bdc2c4d8fb4afe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.TestHashcode.setFractionUnique</definition>
        <argsstring>(double a_fractionUnique)</argsstring>
        <name>setFractionUnique</name>
        <param>
          <type>double</type>
          <declname>a_fractionUnique</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the fraction of hashCodes that must be unique for the testHashCodeUniqueness method to succed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_fractionUnique</parametername>
</parameternamelist>
<parameterdescription>
<para>new value, must be between 0.0 and 1.0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" kindref="member">TestHashcode::testHashCodeUniqueness</ref></para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="145" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="145" bodyend="151"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae2f2be35f516f8a9f75141267f43d49" compoundref="_test_hashcode_8java" startline="68">org.jgap.util.TestHashcode.m_fractionUnique</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aba4717a5deb8ccff616483c261234097" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.util.TestHashcode.getActualFractionUnique</definition>
        <argsstring>()</argsstring>
        <name>getActualFractionUnique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="153" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="153" bodyend="155"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a50fe2fcbfefbc22be87b0f486e00dd09" compoundref="_test_hashcode_8java" startline="74">org.jgap.util.TestHashcode.m_actualFractionUnique</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.util.TestHashcode.testHashCodeUniqueness</definition>
        <argsstring>(List a_ObjectList)</argsstring>
        <name>testHashCodeUniqueness</name>
        <param>
          <type>List</type>
          <declname>a_ObjectList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test that verifies that a the fraction of unique hashCodes is greater than the one specified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_ObjectList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of objects to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the fraction of unique hashCodes is greater than the one specified. Else false </para></simplesect>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a183ef9ad688b366f44bdc2c4d8fb4afe" kindref="member">TestHashcode::setFractionUnique</ref></para></simplesect>
<simplesect kind="author"><para>John Serri </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="169" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="169" bodyend="196"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a50fe2fcbfefbc22be87b0f486e00dd09" compoundref="_test_hashcode_8java" startline="74">org.jgap.util.TestHashcode.m_actualFractionUnique</references>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae2f2be35f516f8a9f75141267f43d49" compoundref="_test_hashcode_8java" startline="68">org.jgap.util.TestHashcode.m_fractionUnique</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a6b0812f682b3941831c04a842b05c4fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.util.TestHashcode.testHashCodeEquality</definition>
        <argsstring>(List a_ObjectList)</argsstring>
        <name>testHashCodeEquality</name>
        <param>
          <type>List</type>
          <declname>a_ObjectList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test to make sure that equal objects all have the same hashCode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_ObjectList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of objects to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all hashCodes in List are the same. Else false</para></simplesect>
<simplesect kind="author"><para>John Serri </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="207" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="207" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.util.TestHashcode.testDispersion</definition>
        <argsstring>(List a_ObjectList)</argsstring>
        <name>testDispersion</name>
        <param>
          <type>List</type>
          <declname>a_ObjectList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test that verifies if average and Standard deviation of hashCodes in list match criteria.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_ObjectList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of objects to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if average and Standard deviation of hashCodes in List match criterias. Else false </para></simplesect>
<simplesect kind="see"><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae8175c503c5865df1b053f1a069f0af" kindref="member">TestHashcode::setAverageMax</ref> </para><simplesectsep/><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a22b485c1780827f6aac105ee0195a894" kindref="member">TestHashcode::setAverageMin</ref> </para><simplesectsep/><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a9a8fc1bfe0d7798c1ec2bb2953d8dc61" kindref="member">TestHashcode::setStdDevMax</ref> </para><simplesectsep/><para><ref refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a55f2e3c33a14b3d618fa4639f52532e5" kindref="member">TestHashcode::setStdDevMin</ref></para></simplesect>
<simplesect kind="author"><para>John Serri </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="239" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="239" bodyend="292"/>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a0d91cff36298abbb9761e0a864b79df9" compoundref="_test_hashcode_8java" startline="44">org.jgap.util.TestHashcode.m_AverageMax</references>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1abfb003e9bfca7edd80c68823024178d5" compoundref="_test_hashcode_8java" startline="36">org.jgap.util.TestHashcode.m_AverageMin</references>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8c500454e1a3728534cc3c0c5f848b52" compoundref="_test_hashcode_8java" startline="60">org.jgap.util.TestHashcode.m_StdDevMax</references>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a1601b935a90e3905a6107d9b88bbb47a" compoundref="_test_hashcode_8java" startline="52">org.jgap.util.TestHashcode.m_StdDevMin</references>
        <references refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ad23c284a29777b3928ae126657bb0cb9" compoundref="_test_hashcode_8java" startline="28">org.jgap.util.TestHashcode.m_verbose</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ab61a6696c7db9342aab2b0edfb1d328e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.jgap.util.TestHashcode.main</definition>
        <argsstring>(String[] args)</argsstring>
        <name>main</name>
        <param>
          <type>String[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple main method to test the class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>John Serri </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="302" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="302" bodyend="313"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class used to help in the testing of the hashCode() method.</para><para><simplesect kind="author"><para>John Serri </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" line="21" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/util/TestHashcode.java" bodystart="21" bodyend="314"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a4888cc10337eb1d4c0225c7f0ff2d7ed" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aba4717a5deb8ccff616483c261234097" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>getActualFractionUnique</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a50fe2fcbfefbc22be87b0f486e00dd09" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_actualFractionUnique</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a0d91cff36298abbb9761e0a864b79df9" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_AverageMax</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1abfb003e9bfca7edd80c68823024178d5" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_AverageMin</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae2f2be35f516f8a9f75141267f43d49" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_fractionUnique</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8c500454e1a3728534cc3c0c5f848b52" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_StdDevMax</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a1601b935a90e3905a6107d9b88bbb47a" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_StdDevMin</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ad23c284a29777b3928ae126657bb0cb9" prot="private" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>m_verbose</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ab61a6696c7db9342aab2b0edfb1d328e" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>main</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1aae8175c503c5865df1b053f1a069f0af" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setAverageMax</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a22b485c1780827f6aac105ee0195a894" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setAverageMin</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a183ef9ad688b366f44bdc2c4d8fb4afe" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setFractionUnique</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a9a8fc1bfe0d7798c1ec2bb2953d8dc61" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setStdDevMax</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a55f2e3c33a14b3d618fa4639f52532e5" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setStdDevMin</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1ae131c5551de0bf40b9225b14922743d7" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>setVerbose</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a08e541143a78fdf8902cedac17e1f65d" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>testDispersion</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a6b0812f682b3941831c04a842b05c4fb" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>testHashCodeEquality</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1_test_hashcode_1a8b64668c1d3ab567efb816ac2ed597e9" prot="public" virt="non-virtual"><scope>org::jgap::util::TestHashcode</scope><name>testHashCodeUniqueness</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
