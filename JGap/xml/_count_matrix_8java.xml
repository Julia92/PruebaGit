<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_count_matrix_8java" kind="file">
    <compoundname>CountMatrix.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" prot="public">org::jgap::gp::function::CountMatrix</innerclass>
    <innerclass refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" prot="public">org::jgap::gp::function::CountMatrix::CountType</innerclass>
    <innerclass refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" prot="public">org::jgap::gp::function::CountMatrix::CountMode</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1gp_1_1function">org::jgap::gp::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.gp.function;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.apache.commons.lang.builder.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.impl.*;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.util.*;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref><sp/>implements<sp/><ref refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable" kindref="compound">ICloneable</ref>,<sp/><ref refid="interfaceorg_1_1jgap_1_1gp_1_1_i_mutateable" kindref="compound">IMutateable</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a072ffe6df38b2f245461b74a9be91852" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a072ffe6df38b2f245461b74a9be91852" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.5<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a8a4aaa596857d2e87306129251a9ff83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a8a4aaa596857d2e87306129251a9ff83" kindref="member">m_matrixName</ref>;</highlight></codeline>
<codeline lineno="37" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a887dc3a42b519552bb175f496628473c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a887dc3a42b519552bb175f496628473c" kindref="member">m_countType</ref>;</highlight></codeline>
<codeline lineno="38" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1aa6252cd1d406acde92bd1f20e09c7c03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" kindref="compound">CountMode</ref><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1aa6252cd1d406acde92bd1f20e09c7c03" kindref="member">m_countMode</ref>;</highlight></codeline>
<codeline lineno="39" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ad70645403e114b27037ef063589d18a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ad70645403e114b27037ef063589d18a9" kindref="member">m_emptyCharacter</ref>;</highlight></codeline>
<codeline lineno="40" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a2c021d2b7127e90eb2a091f3082915b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a2c021d2b7127e90eb2a091f3082915b8" kindref="member">m_specificCharacter</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a42a4316f077cdc038908b28ab3915732" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a42a4316f077cdc038908b28ab3915732" kindref="member">CountMatrix</ref>(</highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>GPConfiguration<sp/>a_conf,<sp/>String<sp/>a_matrixName,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref><sp/>a_countType,<sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" kindref="compound">CountMode</ref><sp/>a_countMode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_emptyCharacter,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_specificCharacter)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(a_conf,<sp/>a_matrixName,<sp/>a_countType,<sp/>a_countMode,<sp/>a_emptyCharacter,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_specificCharacter,<sp/>0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a2e7fe340d41ceb8c0dd4c4daaf47cae9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a2e7fe340d41ceb8c0dd4c4daaf47cae9" kindref="member">CountMatrix</ref>(</highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>GPConfiguration<sp/>a_conf,<sp/>String<sp/>a_matrixName,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref><sp/>a_countType,<sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" kindref="compound">CountMode</ref><sp/>a_countMode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_emptyCharacter,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_specificCharacter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_subChildType)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arity<sp/>1<sp/>=<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>super(a_conf,<sp/>1,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a8e354d57c541097dab355e145b048b22" kindref="member">IntegerClass</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]{a_subChildType});</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_matrixName<sp/>==<sp/>null<sp/>||<sp/>a_matrixName.length()<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;Matrix<sp/>name<sp/>must<sp/>not<sp/>be<sp/>empty!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a8a4aaa596857d2e87306129251a9ff83" kindref="member">m_matrixName</ref><sp/>=<sp/>a_matrixName;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a887dc3a42b519552bb175f496628473c" kindref="member">m_countType</ref><sp/>=<sp/>a_countType;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1aa6252cd1d406acde92bd1f20e09c7c03" kindref="member">m_countMode</ref><sp/>=<sp/>a_countMode;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ad70645403e114b27037ef063589d18a9" kindref="member">m_emptyCharacter</ref><sp/>=<sp/>a_emptyCharacter;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a2c021d2b7127e90eb2a091f3082915b8" kindref="member">m_specificCharacter</ref><sp/>=<sp/>a_specificCharacter;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a59216e2aea850a527c74c0dbce65467f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a59216e2aea850a527c74c0dbce65467f" kindref="member">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;countMatrix(&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_matrixName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&amp;1)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a4737c5a5dcee9763433e0ff05cb7872f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a4737c5a5dcee9763433e0ff05cb7872f" kindref="member">getName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CountMatrix(&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_matrixName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="92" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ab6a764268e5f5d404cc6605dd8cbb8e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ab6a764268e5f5d404cc6605dd8cbb8e4" kindref="member">execute_int</ref>(ProgramChromosome<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>Object[]<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Child<sp/>=<sp/>index<sp/>--&gt;<sp/>only<sp/>relevant<sp/>if<sp/>not<sp/>replacement<sp/>for<sp/>whole<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_countType<sp/>!=<sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref>.<ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1ab0c9b4428d0cad392e0f1216b757c0ac" kindref="member">MATRIX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>c.execute_int(n,<sp/>0,<sp/>args);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[][]<sp/>matrix<sp/>=<sp/>getGPConfiguration().getMatrix(m_matrixName);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matrix<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>matrix.length;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>matrix[index].length;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_countType)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ROW:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>cols;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>count(matrix[col][index]);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>COLUMN:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>count(matrix[index][row]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MATRIX:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>cols;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>count(matrix[col][row]);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DIAGONAL:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols<sp/>!=<sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>count<sp/>diagonal<sp/>of<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight><highlight class="stringliteral">&quot;<sp/>matrix,<sp/>as<sp/>the<sp/>matrix<sp/>is<sp/>not<sp/>square&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>less<sp/>than<sp/>half<sp/>the<sp/>number<sp/>of<sp/>columns/rows:<sp/>first<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Else:<sp/>second<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>cols<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>0;<sp/>cell<sp/>&lt;<sp/>cols;<sp/>cell++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>count(matrix[cell][cell]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>cols<sp/>-<sp/>1;<sp/>cell<sp/>&gt;<sp/>0;<sp/>cell--)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>count(matrix[cell][cell]);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1aa87ada9ecc0deac72a34c731ddd732c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1aa87ada9ecc0deac72a34c731ddd732c7" kindref="member">count</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_char)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_countMode)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NONEMPTY:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_char<sp/>!=<sp/>m_emptyCharacter)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EMPTY:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_char<sp/>==<sp/>m_emptyCharacter)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SPECIFIC:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_char<sp/>==<sp/>m_specificCharacter)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1af4b16fd7253029f765cda05dd67a8ebd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Class<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1af4b16fd7253029f765cda05dd67a8ebd" kindref="member">getChildType</ref>(<ref refid="interfaceorg_1_1jgap_1_1gp_1_1_i_g_p_program" kindref="compound">IGPProgram</ref><sp/>a_ind,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_chromNum)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a8e354d57c541097dab355e145b048b22" kindref="member">CommandGene.IntegerClass</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a85778824472100481691a3a9fad7f222" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a85778824472100481691a3a9fad7f222" kindref="member">compareTo</ref>(Object<sp/>a_other)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>super.compareTo(a_other);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref><sp/>other<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref>)<sp/>a_other;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompareToBuilder().append(m_matrixName,<sp/>other.m_matrixName).</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_countType,<sp/>other.<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a887dc3a42b519552bb175f496628473c" kindref="member">m_countType</ref>).</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_countMode,<sp/>other.m_countMode).</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_emptyCharacter,<sp/>other.<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ad70645403e114b27037ef063589d18a9" kindref="member">m_emptyCharacter</ref>).</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_specificCharacter,<sp/>other.m_specificCharacter).</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(getSubChildTypes(),<sp/>other.getSubChildTypes()).toComparison();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1acaf8f4431d7229034fa79a5a05384fe7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1acaf8f4431d7229034fa79a5a05384fe7" kindref="member">equals</ref>(Object<sp/>a_other)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref><sp/>other<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref>)<sp/>a_other;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>super.equals(a_other)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EqualsBuilder().append(m_matrixName,<sp/>other.m_matrixName).</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_countType,<sp/>other.<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a887dc3a42b519552bb175f496628473c" kindref="member">m_countType</ref>).</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_countMode,<sp/>other.m_countMode).</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_emptyCharacter,<sp/>other.<ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1ad70645403e114b27037ef063589d18a9" kindref="member">m_emptyCharacter</ref>).</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(m_specificCharacter,<sp/>other.m_specificCharacter).</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append(getSubChildTypes(),<sp/>other.getSubChildTypes()).isEquals();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(ClassCastException<sp/>cex)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1afa4320618fd8218993a108948eab66ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1afa4320618fd8218993a108948eab66ae" kindref="member">clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref>(getGPConfiguration(),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixName,<sp/>m_countType,<sp/>m_countMode,<sp/>m_emptyCharacter,<sp/>m_specificCharacter,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getSubChildType(0));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CloneException(ex);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a69007bff3648ff944611ff9dc2a0d84f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1a69007bff3648ff944611ff9dc2a0d84f" kindref="member">applyMutation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a_percentage)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_<sp/>=<sp/>getGPConfiguration().getRandomGenerator().nextInt(<ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref>.</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values().length);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>getGPConfiguration().getRandomGenerator().nextInt(<ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" kindref="compound">CountMode</ref>.</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values().length);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref><sp/>mutant<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix" kindref="compound">CountMatrix</ref>(getGPConfiguration(),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixName,<sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref>.values()[type_],<sp/>CountMode.values()[mode],</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_emptyCharacter,<sp/>m_specificCharacter,<sp/>getSubChildType(0));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mutant;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type" kindref="compound">CountType</ref><sp/>{</highlight></codeline>
<codeline lineno="282" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a7ab04ee65255adb71c8f6a47b727b775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a7ab04ee65255adb71c8f6a47b727b775" kindref="member">COLUMN</ref>(1),</highlight></codeline>
<codeline lineno="283" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a45fcb697f06e665534259c110f2c32ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a45fcb697f06e665534259c110f2c32ec" kindref="member">ROW</ref>(2),</highlight></codeline>
<codeline lineno="284" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a2d241774e0b56e6c7a7be79cecc7d1ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a2d241774e0b56e6c7a7be79cecc7d1ba" kindref="member">DIAGONAL</ref>(3),</highlight></codeline>
<codeline lineno="285" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1ab0c9b4428d0cad392e0f1216b757c0ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1ab0c9b4428d0cad392e0f1216b757c0ac" kindref="member">MATRIX</ref>(4);</highlight></codeline>
<codeline lineno="286" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a64b4c38ac118af50023dbeee1ae8c562" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a64b4c38ac118af50023dbeee1ae8c562" kindref="member">m_value</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a9a7fba283f75d4aca2024c72f04521e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1a9a7fba283f75d4aca2024c72f04521e9" kindref="member">intValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_value;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1af5558dc55ef0744f3e3836335b792b6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_type_1af5558dc55ef0744f3e3836335b792b6a" kindref="member">CountType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_value)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode" kindref="compound">CountMode</ref><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a92f9a66ce5d36d5d7011fc6678714b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a92f9a66ce5d36d5d7011fc6678714b7a" kindref="member">EMPTY</ref>(1),</highlight></codeline>
<codeline lineno="300" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a62fbc7b1b3e5481759b6841ab3ec0369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a62fbc7b1b3e5481759b6841ab3ec0369" kindref="member">NONEMPTY</ref>(2),</highlight></codeline>
<codeline lineno="301" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a0ba7a45ff144a42e337ecabdcb783a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a0ba7a45ff144a42e337ecabdcb783a01" kindref="member">SPECIFIC</ref>(3);</highlight></codeline>
<codeline lineno="302" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1ab24868b4fd32e75d5a6f0d2c4964ca03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1ab24868b4fd32e75d5a6f0d2c4964ca03" kindref="member">m_value</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a5155f712b175bae0355197281690ed73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a5155f712b175bae0355197281690ed73" kindref="member">intValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_value;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a274c01d42f074dc5b211201070e32331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enumorg_1_1jgap_1_1gp_1_1function_1_1_count_matrix_1_1_count_mode_1a274c01d42f074dc5b211201070e32331" kindref="member">CountMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_value)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/function/CountMatrix.java"/>
  </compounddef>
</doxygen>
