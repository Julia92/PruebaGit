<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kind="class" prot="public">
    <compoundname>org::jgap::impl::BooleanGene</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_base_gene" prot="public" virt="non-virtual">org.jgap.BaseGene</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_persistent_representation" prot="public" virt="non-virtual">org.jgap.IPersistentRepresentation</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aeef14a51d83d4580e4adb0218fc51387" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.BooleanGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.32 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a1ac51ccfad17bf032f212248ab27c4d8" prot="protected" static="yes" mutable="no">
        <type>final Boolean</type>
        <definition>final Boolean org.jgap.impl.BooleanGene.TRUE_BOOLEAN</definition>
        <argsstring></argsstring>
        <name>TRUE_BOOLEAN</name>
        <initializer>= Boolean.valueOf(true)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shared constant representing the &quot;true&quot; boolean value. Shared constants are used to save memory so that a new Boolean object doesn&apos;t have to be constructed each time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="39" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" compoundref="_boolean_gene_8java" startline="239" endline="246">org.jgap.impl.BooleanGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb" compoundref="_boolean_gene_8java" startline="189" endline="211">org.jgap.impl.BooleanGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad70a1308d2e7b7872660808d59ca3332" prot="protected" static="yes" mutable="no">
        <type>final Boolean</type>
        <definition>final Boolean org.jgap.impl.BooleanGene.FALSE_BOOLEAN</definition>
        <argsstring></argsstring>
        <name>FALSE_BOOLEAN</name>
        <initializer>= Boolean.valueOf(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shared constant representing the &quot;false&quot; boolean value. Shared constants are used to save memory so that a new Boolean object doesn&apos;t have to be constructed each time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="46" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="46" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" compoundref="_boolean_gene_8java" startline="239" endline="246">org.jgap.impl.BooleanGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb" compoundref="_boolean_gene_8java" startline="189" endline="211">org.jgap.impl.BooleanGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" prot="private" static="no" mutable="no">
        <type>Boolean</type>
        <definition>Boolean org.jgap.impl.BooleanGene.m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>References the internal boolean value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="51" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="51" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a70dea740df4046662f3c4d56205e9986" compoundref="_boolean_gene_8java" startline="353" endline="371">org.jgap.impl.BooleanGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acb769537ae976c488764a996aa53df6e" compoundref="_boolean_gene_8java" startline="87" endline="91">org.jgap.impl.BooleanGene.BooleanGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" compoundref="_boolean_gene_8java" startline="264" endline="341">org.jgap.impl.BooleanGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" compoundref="_boolean_gene_8java" startline="373" endline="375">org.jgap.impl.BooleanGene.getInternalValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1af8a4411701b8ebe94cc9e4ede4d392ef" compoundref="_boolean_gene_8java" startline="140" endline="142">org.jgap.impl.BooleanGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" compoundref="_boolean_gene_8java" startline="239" endline="246">org.jgap.impl.BooleanGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb" compoundref="_boolean_gene_8java" startline="189" endline="211">org.jgap.impl.BooleanGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aa3f2fb3fadb98124f1f98a84330fa6d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.BooleanGene.BooleanGene</definition>
        <argsstring>()</argsstring>
        <name>BooleanGene</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor.</para><para>Attention: The configuration used is the one set with the static method Genotype.setConfiguration. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="62" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="62" bodyend="65"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" compoundref="_boolean_gene_8java" startline="264" endline="341">org.jgap.impl.BooleanGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a57df173aaf3d927451500893e5cccaf3" compoundref="_boolean_gene_8java" startline="125" endline="132">org.jgap.impl.BooleanGene.newGeneInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a49dc542469f4b0306471491c11a69b77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.BooleanGene.BooleanGene</definition>
        <argsstring>(final Configuration a_config)</argsstring>
        <name>BooleanGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acb769537ae976c488764a996aa53df6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.BooleanGene.BooleanGene</definition>
        <argsstring>(final Configuration a_config, final boolean a_value)</argsstring>
        <name>BooleanGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final boolean</type>
          <declname>a_value</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_value</parametername>
</parameternamelist>
<parameterdescription>
<para>allele value to setup the gene with </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="87" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="87" bodyend="91"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a5837da5a107b86bf4f956339abd9780b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.BooleanGene.BooleanGene</definition>
        <argsstring>(final Configuration a_config, final Boolean a_value)</argsstring>
        <name>BooleanGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final Boolean</type>
          <declname>a_value</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_value</parametername>
</parameternamelist>
<parameterdescription>
<para>allele value to setup the gene with </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="101" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="101" bodyend="113"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1af8a4411701b8ebe94cc9e4ede4d392ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.BooleanGene.setAllele</definition>
        <argsstring>(final Object a_newValue)</argsstring>
        <name>setAllele</name>
        <param>
          <type>final Object</type>
          <declname>a_newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to the new given value. This class expects the value to be a Boolean instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="140" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="140" bodyend="142"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.BooleanGene.getPersistentRepresentation</definition>
        <argsstring>()</argsstring>
        <name>getPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a07bf7dbaa8de08e268c9357a46e79dac">getPersistentRepresentation</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> that includes any information required to reconstruct it at a later time, such as its value and internal state. This string will be used to represent this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in XML persistence. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><simplesect kind="return"><para>a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s current state</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="158" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="158" bodyend="167"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" compoundref="_boolean_gene_8java" startline="373" endline="375">org.jgap.impl.BooleanGene.getInternalValue</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.BooleanGene.setValueFromPersistentRepresentation</definition>
        <argsstring>(String a_representation)</argsstring>
        <name>setValueFromPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a94a345f1919c4840dd0b9eecf7afc6a3">setValueFromPersistentRepresentation</reimplements>
        <param>
          <type>String</type>
          <declname>a_representation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value and internal state of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from the string representation returned by a previous invocation of the <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1" kindref="member">getPersistentRepresentation()</ref> method. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_representation</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representation retrieved from a prior call to the <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1" kindref="member">getPersistentRepresentation()</ref> method</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation does not support the given string representation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="189" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="189" bodyend="211"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad70a1308d2e7b7872660808d59ca3332" compoundref="_boolean_gene_8java" startline="46">org.jgap.impl.BooleanGene.FALSE_BOOLEAN</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a1ac51ccfad17bf032f212248ab27c4d8" compoundref="_boolean_gene_8java" startline="39">org.jgap.impl.BooleanGene.TRUE_BOOLEAN</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aca61d17f9e53c1840bd7d08f4a6ac101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.impl.BooleanGene.booleanValue</definition>
        <argsstring>()</argsstring>
        <name>booleanValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the boolean value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. This may be more convenient in some cases than the more general <ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele()</ref> method.</para><para><simplesect kind="return"><para>the boolean value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="219" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="219" bodyend="221"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1job_1_1_max_function_1a6b0344c8642af9170743d9be9a6509b8" compoundref="src_2org_2jgap_2impl_2job_2_max_function_8java" startline="33" endline="45">org.jgap.impl.job.MaxFunction.evaluate</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a5d15629734e0d3ea53e1b1aaae723454" compoundref="_boolean_gene_test_8java" startline="408" endline="414">org.jgap.impl.BooleanGeneTest.testApplyMutation_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1aceac01532c3254bb2537591a28127c58" compoundref="_boolean_gene_test_8java" startline="421" endline="427">org.jgap.impl.BooleanGeneTest.testApplyMutation_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1af76b630f1a08bf5e6a85cd2f834c6346" compoundref="_set_gene_test_8java" startline="390" endline="395">org.jgap.impl.SetGeneTest.testApplyMutation_10</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a9b26fa9b346a57530e71ba499755d185" compoundref="_boolean_gene_test_8java" startline="539" endline="544">org.jgap.impl.BooleanGeneTest.testApplyMutation_10</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a39c14919d3647fc335522c1dc19e6dd3" compoundref="_boolean_gene_test_8java" startline="434" endline="440">org.jgap.impl.BooleanGeneTest.testApplyMutation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a41e2d57a098dcfc8358e50f7117efbcf" compoundref="_set_gene_test_8java" startline="298" endline="304">org.jgap.impl.SetGeneTest.testApplyMutation_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1ae894d6f2e3e540c0049d68c1bf5cabc7" compoundref="_boolean_gene_test_8java" startline="447" endline="453">org.jgap.impl.BooleanGeneTest.testApplyMutation_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a61299deee4443306b6bb70a38d06421e" compoundref="_set_gene_test_8java" startline="311" endline="317">org.jgap.impl.SetGeneTest.testApplyMutation_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a8f1c8b12e8dbbf3c2c212beac5cbd61b" compoundref="_boolean_gene_test_8java" startline="460" endline="466">org.jgap.impl.BooleanGeneTest.testApplyMutation_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a66e69e56ea6f1c1487ca3e8e6d3afe57" compoundref="_set_gene_test_8java" startline="324" endline="330">org.jgap.impl.SetGeneTest.testApplyMutation_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1ae067e5eaf68fb5e0345cc890ad089987" compoundref="_boolean_gene_test_8java" startline="473" endline="479">org.jgap.impl.BooleanGeneTest.testApplyMutation_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a4c9fa1872ee88ff716c69fcf6918d9a3" compoundref="_set_gene_test_8java" startline="337" endline="343">org.jgap.impl.SetGeneTest.testApplyMutation_6</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1aa83d5a63c465c5045663146a576ea507" compoundref="_boolean_gene_test_8java" startline="486" endline="492">org.jgap.impl.BooleanGeneTest.testApplyMutation_6</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1adf9d51d24135126907d5fccacd6ce334" compoundref="_set_gene_test_8java" startline="350" endline="356">org.jgap.impl.SetGeneTest.testApplyMutation_7</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a8c25ad3196113f337a82c7258d5d9a12" compoundref="_boolean_gene_test_8java" startline="499" endline="505">org.jgap.impl.BooleanGeneTest.testApplyMutation_7</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1ab98e5519db6de37dddd24cc855e9ea37" compoundref="_set_gene_test_8java" startline="363" endline="369">org.jgap.impl.SetGeneTest.testApplyMutation_8</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a88a259c13278d12557a365fa28b6592e" compoundref="_boolean_gene_test_8java" startline="512" endline="518">org.jgap.impl.BooleanGeneTest.testApplyMutation_8</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a8a656b48f9e117b4e76fa60e56d61514" compoundref="_set_gene_test_8java" startline="376" endline="382">org.jgap.impl.SetGeneTest.testApplyMutation_9</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a07c5ee01f343aa281e83ff402392ad91" compoundref="_boolean_gene_test_8java" startline="525" endline="531">org.jgap.impl.BooleanGeneTest.testApplyMutation_9</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1ad7ae6783919eec2b4d34d13ef837daf2" compoundref="_boolean_gene_test_8java" startline="193" endline="198">org.jgap.impl.BooleanGeneTest.testBooleanValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a3f2c025085453fe93228b1143c734cd2" compoundref="_boolean_gene_test_8java" startline="200" endline="205">org.jgap.impl.BooleanGeneTest.testBooleanValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a739d7ae711471785509432c021837a1c" compoundref="_boolean_gene_test_8java" startline="207" endline="217">org.jgap.impl.BooleanGeneTest.testBooleanValue_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a627656b864f7943cd3d88e41a391b7bf" compoundref="_boolean_gene_test_8java" startline="46" endline="52">org.jgap.impl.BooleanGeneTest.testConstruct_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1ab1feba7162434b8a9e36b007930cf207" compoundref="_boolean_gene_test_8java" startline="60" endline="66">org.jgap.impl.BooleanGeneTest.testConstruct_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.BooleanGene.setToRandomValue</definition>
        <argsstring>(RandomGenerator a_numberGenerator)</argsstring>
        <name>setToRandomValue</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a">setToRandomValue</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_numberGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to a random legal value. This method exists for the benefit of mutation and other operations that simply desire to randomize the value of a gene. </para><para>NOTE: Since this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation only supports two different values (true and false), there&apos;s only a 50% chance that invocation of this method will actually change the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> (if it has a value). As a result, it may be desirable to use a higher overall mutation rate when this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation is in use.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_numberGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>The random number generator that should be used to create any random values. It&apos;s important to use this generator to maintain the user&apos;s flexibility to configure the genetic engine to use the random number generator of their choice </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="239" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="239" bodyend="246"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad70a1308d2e7b7872660808d59ca3332" compoundref="_boolean_gene_8java" startline="46">org.jgap.impl.BooleanGene.FALSE_BOOLEAN</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1ae1e8373d795fa8269c2f51f2e5525150">org.jgap.RandomGenerator.nextBoolean</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a1ac51ccfad17bf032f212248ab27c4d8" compoundref="_boolean_gene_8java" startline="39">org.jgap.impl.BooleanGene.TRUE_BOOLEAN</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.BooleanGene.compareTo</definition>
        <argsstring>(Object a_other)</argsstring>
        <name>compareTo</name>
        <param>
          <type>Object</type>
          <declname>a_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref> with the specified object for order. A false value is considered to be less than a true value. A null value is considered to be less than any non-null value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref> to be compared </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ClassCastException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the specified object&apos;s type prevents it from being compared to this <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="264" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="264" bodyend="341"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aa3f2fb3fadb98124f1f98a84330fa6d2" compoundref="_boolean_gene_8java" startline="62" endline="65">org.jgap.impl.BooleanGene.BooleanGene</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" compoundref="_base_gene_8java" startline="306" endline="339">org.jgap.BaseGene.compareApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" compoundref="_base_gene_8java" startline="302" endline="304">org.jgap.BaseGene.isCompareApplicationData</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a70dea740df4046662f3c4d56205e9986" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.BooleanGene.applyMutation</definition>
        <argsstring>(int a_index, double a_percentage)</argsstring>
        <name>applyMutation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4">applyMutation</reimplements>
        <param>
          <type>int</type>
          <declname>a_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies a mutation of a given intensity (percentage) onto the atomic element at given index <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_index</parametername>
</parameternamelist>
<parameterdescription>
<para>not used here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>percentage of mutation (greater than -1 and smaller than 1).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="353" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="353" bodyend="371"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a9875df72d7bb5c7b1bc03fdbe0719955" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.BooleanGene.hashCode</definition>
        <argsstring>()</argsstring>
        <name>hashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modified <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a9875df72d7bb5c7b1bc03fdbe0719955" kindref="member">hashCode()</ref> function to return different hashcodes for differently ordered genes in a chromosome <simplesect kind="return"><para>-2 if no allele set, otherwise value return by <ref refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" kindref="member">BaseGene.hashCode()</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="385" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="385" bodyend="392"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" compoundref="_boolean_gene_8java" startline="373" endline="375">org.jgap.impl.BooleanGene.getInternalValue</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a624f32a594c9dafb7590324ce3e0cd50" compoundref="_set_gene_test_8java" startline="546" endline="550">org.jgap.impl.SetGeneTest.testHashCode_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a2423abc483c18ba0f9069c2dc4540c3f" compoundref="_boolean_gene_test_8java" startline="697" endline="701">org.jgap.impl.BooleanGeneTest.testHashCode_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1abf9d0e79fbf043ff7eca2d9eaee04a64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.BooleanGene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value that may be useful for display purposes.</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="401" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="401" bodyend="411"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" compoundref="_boolean_gene_8java" startline="373" endline="375">org.jgap.impl.BooleanGene.getInternalValue</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a57df173aaf3d927451500893e5cccaf3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.impl.BooleanGene.newGeneInternal</definition>
        <argsstring>()</argsstring>
        <name>newGeneInternal</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c">newGeneInternal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides an implementation-independent means for creating new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instances.</para><para><simplesect kind="return"><para>a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance of the same type and with the same setup as this concrete <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="125" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="125" bodyend="132"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aa3f2fb3fadb98124f1f98a84330fa6d2" compoundref="_boolean_gene_8java" startline="62" endline="65">org.jgap.impl.BooleanGene.BooleanGene</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Object</type>
        <definition>Object org.jgap.impl.BooleanGene.getInternalValue</definition>
        <argsstring>()</argsstring>
        <name>getInternalValue</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">getInternalValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation holds its own m_value object keeping the allele value. In your <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation, just return it with this method (see <ref refid="" kindref="compound">org.jgap.impl.BooleanGene</ref> for example) <simplesect kind="return"><para>the m_value object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="373" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="373" bodyend="375"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" compoundref="_boolean_gene_8java" startline="51">org.jgap.impl.BooleanGene.m_value</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1" compoundref="_boolean_gene_8java" startline="158" endline="167">org.jgap.impl.BooleanGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a9875df72d7bb5c7b1bc03fdbe0719955" compoundref="_boolean_gene_8java" startline="385" endline="392">org.jgap.impl.BooleanGene.hashCode</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1abf9d0e79fbf043ff7eca2d9eaee04a64" compoundref="_boolean_gene_8java" startline="401" endline="411">org.jgap.impl.BooleanGene.toString</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation that supports two possible values (alleles) for each gene: true and false. </para><para>NOTE: Since this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation only supports two different values (true and false), there&apos;s only a 50% chance that invocation of the <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" kindref="member">setToRandomValue()</ref> method will actually change the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> (if it has a value). As a result, it may be desirable to use a higher overall mutation rate when this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation is in use.</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10103">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="10102">
        <label>Serializable</label>
      </node>
      <node id="10101">
        <label>Comparable</label>
      </node>
      <node id="10104">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="10099">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="10100" relation="public-inheritance">
        </childnode>
        <childnode refid="10104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10098">
        <label>org.jgap.impl.BooleanGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene"/>
        <childnode refid="10099" relation="public-inheritance">
        </childnode>
        <childnode refid="10105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10100">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="10101" relation="public-inheritance">
        </childnode>
        <childnode refid="10102" relation="public-inheritance">
        </childnode>
        <childnode refid="10103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10105">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10111">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="10126">
        <label>List</label>
      </node>
      <node id="10125">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10122">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10110">
        <label>Serializable</label>
      </node>
      <node id="10109">
        <label>Comparable</label>
      </node>
      <node id="10112">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="10107">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="10108" relation="public-inheritance">
        </childnode>
        <childnode refid="10112" relation="public-inheritance">
        </childnode>
        <childnode refid="10113" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="10127" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="10115">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10106">
        <label>org.jgap.impl.BooleanGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene"/>
        <childnode refid="10107" relation="public-inheritance">
        </childnode>
        <childnode refid="10128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10120">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10127">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10123">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10116">
        <label>Cloneable</label>
      </node>
      <node id="10108">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="10109" relation="public-inheritance">
        </childnode>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10128">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="10118">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10124">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10117">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="10115" relation="public-inheritance">
        </childnode>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10121">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="10109" relation="public-inheritance">
        </childnode>
        <childnode refid="10115" relation="public-inheritance">
        </childnode>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10113">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="10114" relation="public-inheritance">
        </childnode>
        <childnode refid="10110" relation="public-inheritance">
        </childnode>
        <childnode refid="10115" relation="public-inheritance">
        </childnode>
        <childnode refid="10109" relation="public-inheritance">
        </childnode>
        <childnode refid="10117" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="10118" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="10119" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="10120" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="10121" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="10122" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="10123" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10124" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="10125" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10126" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="10119">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="10114">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" line="30" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/BooleanGene.java" bodystart="29" bodyend="412"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a70dea740df4046662f3c4d56205e9986" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aa3f2fb3fadb98124f1f98a84330fa6d2" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>BooleanGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a49dc542469f4b0306471491c11a69b77" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>BooleanGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acb769537ae976c488764a996aa53df6e" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>BooleanGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a5837da5a107b86bf4f956339abd9780b" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>BooleanGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aca61d17f9e53c1840bd7d08f4a6ac101" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>booleanValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1aeef14a51d83d4580e4adb0218fc51387" prot="private" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad70a1308d2e7b7872660808d59ca3332" prot="protected" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>FALSE_BOOLEAN</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8" prot="protected" virt="virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getInternalValue</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a9875df72d7bb5c7b1bc03fdbe0719955" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1acd3b6512c17c7acf81b8d96a913d83cc" prot="private" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>m_value</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a57df173aaf3d927451500893e5cccaf3" prot="protected" virt="virtual"><scope>org::jgap::impl::BooleanGene</scope><name>newGeneInternal</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1af8a4411701b8ebe94cc9e4ede4d392ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::BooleanGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::BooleanGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::BooleanGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::BooleanGene</scope><name>setEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1abf9d0e79fbf043ff7eca2d9eaee04a64" prot="public" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>toString</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a1ac51ccfad17bf032f212248ab27c4d8" prot="protected" virt="non-virtual"><scope>org::jgap::impl::BooleanGene</scope><name>TRUE_BOOLEAN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
