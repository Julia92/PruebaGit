<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_cauchy_random_generator_test_8java" kind="file">
    <compoundname>CauchyRandomGeneratorTest.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test" prot="public">org::jgap::impl::CauchyRandomGeneratorTest</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1impl">org::jgap::impl</innernamespace>
    <innernamespace refid="namespacejava_1_1util_1_1concurrent_1_1atomic_1_1">java::util::concurrent::atomic::</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.impl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.atomic.*;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test" kindref="compound">CauchyRandomGeneratorTest</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">JGAPTestCase</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a22237fc504630f8b03232d9775e60169" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a22237fc504630f8b03232d9775e60169" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.11<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite(<ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test" kindref="compound">CauchyRandomGeneratorTest</ref>.class);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1abbee59e7277ce668b7765d4fcd68c902" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1abbee59e7277ce668b7765d4fcd68c902" kindref="member">testGeneral</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref><sp/>calc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextInt();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextBoolean();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextDouble();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextFloat();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextInt();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextLong();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aa1d18ef9636a7adf1d57582ed2f66ce8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aa1d18ef9636a7adf1d57582ed2f66ce8" kindref="member">testNextCauchy_0</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdDev<sp/>=<sp/>0.04d;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref><sp/>calc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>(0.0d,<sp/>stdDev);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>calc.nextCauchy();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1ab4c709e82a32f56e87ada1947a8bd21a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1ab4c709e82a32f56e87ada1947a8bd21a" kindref="member">testGetCauchyStdDeviation_0</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdDev<sp/>=<sp/>0.04d;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref><sp/>calc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>(0.0d,<sp/>stdDev);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(stdDev,<sp/>calc.<ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_1ac137983fc618059f79e3c22cf18948c0" kindref="member">getCauchyStandardDeviation</ref>(),<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" kindref="member">DELTA</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aeecddbf9c0574d1d322cce47eb6124f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aeecddbf9c0574d1d322cce47eb6124f5" kindref="member">testNextInt_0</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdDev<sp/>=<sp/>0.04d;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref><sp/>calc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>(0.0d,<sp/>stdDev);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>calc.nextInt(2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(i<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>i<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>calc.nextInt(1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>i);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a157a2f8e2d9d45bfd8dc63fc63cc4867" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a157a2f8e2d9d45bfd8dc63fc63cc4867" kindref="member">testSerialize_0</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref><sp/>srg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Random<sp/>r1<sp/>=<sp/>(Random)<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(srg,</highlight><highlight class="stringliteral">&quot;m_rn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>AtomicLong<sp/>seed1<sp/>=<sp/>(AtomicLong)<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(r1,</highlight><highlight class="stringliteral">&quot;seed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>curr<sp/>=<sp/>System.currentTimeMillis();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(curr<sp/>==<sp/>System.currentTimeMillis());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref><sp/>srg2<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref>)<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" kindref="member">doSerialize</ref>(srg);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Random<sp/>r2<sp/>=<sp/>(Random)<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(srg2,</highlight><highlight class="stringliteral">&quot;m_rn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>AtomicLong<sp/>seed2<sp/>=<sp/>(AtomicLong)<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" kindref="member">privateAccessor</ref>.getField(r2,</highlight><highlight class="stringliteral">&quot;seed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(seed1.get()<sp/>==<sp/>seed2.get());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java"/>
  </compounddef>
</doxygen>
