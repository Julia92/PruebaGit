<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1util_1_1random_l_c_g" kind="class" prot="public">
    <compoundname>org::jgap::util::randomLCG</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1util_1_1random_x" prot="public" virt="non-virtual">org.jgap.util.randomX</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a7938e87a210bcdd3ff496ca579ec6727" prot="package" static="no" mutable="no">
        <type>long</type>
        <definition>long org.jgap.util.randomLCG.state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a3ef0a715da855114368f5909ebd0e372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.util.randomLCG.randomLCG</definition>
        <argsstring>()</argsstring>
        <name>randomLCG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new pseudorandom number generator, seeded from the current time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_l_c_g_1ab748f2cbb502efd8f193eef73d53cc33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.util.randomLCG.randomLCG</definition>
        <argsstring>(long seed)</argsstring>
        <name>randomLCG</name>
        <param>
          <type>long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Creates a new pseudorandom number generator with a
    specified seed.
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>initial seed for the generator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a533d1138a91fb5d9384c26dc0d20762b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.util.randomLCG.setSeed</definition>
        <argsstring>(long seed)</argsstring>
        <name>setSeed</name>
        <param>
          <type>long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Set seed for generator.  Subsequent values will be based
    on the given seed.
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>seed for the generator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1util_1_1random_l_c_g_1ab3b28701764c40bed7a00c9096612304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>byte</type>
        <definition>byte org.jgap.util.randomLCG.nextByte</definition>
        <argsstring>()</argsstring>
        <name>nextByte</name>
        <reimplements refid="classorg_1_1jgap_1_1util_1_1random_x_1a3ef715392cb00b38bba43e5abc5ab845">nextByte</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Get next byte from generator.  Given how poor this generator
    is, it&apos;s wise to make a separate call for each byte rather than
    extract fields from a single call, which may be correlated.
    Also, the higher-order bits of this generator are more
    random than the low, so we extract the byte after discarding
    the low-order 11 bits.
</verbatim></para><para><simplesect kind="return"><para>the next byte from the generator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="68" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of a <bold><ref refid="classorg_1_1jgap_1_1util_1_1random_x" kindref="compound">randomX</ref></bold>-compliant class using the simple (and not very good) <computeroutput>rand()</computeroutput> linear congruential generator given as an example in the ANSI C specification. This is intended not for serious use, merely as an illustration of a simple software-based <bold><ref refid="classorg_1_1jgap_1_1util_1_1random_x" kindref="compound">randomX</ref></bold> generator.</para><para>The generation algorithm is:</para><para><center> <emphasis>I<subscript>j+1</subscript></emphasis> = (<emphasis>I<subscript>j</subscript></emphasis> × 1103515245 + 12345) &amp; 0x7FFFFFFF </center></para><para>Designed and implemented in July 1996 by <ulink url="http://www.fourmilab.ch/">John Walker</ulink>, <ulink url="mailto:kelvin@fourmilab.ch">kelvin@fourmilab.ch</ulink>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="17217">
        <label>org.jgap.util.randomX</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_x"/>
      </node>
      <node id="17216">
        <label>org.jgap.util.randomLCG</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_l_c_g"/>
        <childnode refid="17217" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17219">
        <label>org.jgap.util.randomX</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_x"/>
      </node>
      <node id="17218">
        <label>org.jgap.util.randomLCG</label>
        <link refid="classorg_1_1jgap_1_1util_1_1random_l_c_g"/>
        <childnode refid="17219" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/util/randomLCG.java" bodystart="23" bodyend="72"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1ab8a07cb9d83f3eccca8f58c3a18e02fd" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextBit</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1ab3b28701764c40bed7a00c9096612304" prot="public" virt="virtual"><scope>org::jgap::util::randomLCG</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a2d85f4af5176e48b9463546f85b9f5e5" prot="public" virt="non-virtual" ambiguityscope="org::jgap::util::randomX."><scope>org::jgap::util::randomLCG</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a2591a4836fa228447c5f508d6850c56c" prot="public" virt="non-virtual" ambiguityscope="org::jgap::util::randomX."><scope>org::jgap::util::randomLCG</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a61463f36f557007b65c688e91a5c5022" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextDouble</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a8ce941e4b871d17c36586b89f915c47c" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextFloat</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1aaa39ce24a15f1a77a5e3bd7866e2793e" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextGaussian</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a5748a6cb455da130bd937ea5c90a01fa" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextInt</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a9a2981e95cb4e3f9acf59cbbaf383194" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextLong</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1a70085735339aee1eb3be72dd292d29ec" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>nextShort</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a3ef0a715da855114368f5909ebd0e372" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>randomLCG</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1ab748f2cbb502efd8f193eef73d53cc33" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>randomLCG</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a533d1138a91fb5d9384c26dc0d20762b" prot="public" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>setSeed</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_x_1ab18450263842c7fde69a1d17579714dc" prot="public" virt="non-virtual" ambiguityscope="org::jgap::util::randomX."><scope>org::jgap::util::randomLCG</scope><name>setSeed</name></member>
      <member refid="classorg_1_1jgap_1_1util_1_1random_l_c_g_1a7938e87a210bcdd3ff496ca579ec6727" prot="package" virt="non-virtual"><scope>org::jgap::util::randomLCG</scope><name>state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
