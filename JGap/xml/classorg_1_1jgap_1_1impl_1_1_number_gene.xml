<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_number_gene" kind="class" prot="public" abstract="yes">
    <compoundname>org::jgap::impl::NumberGene</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_base_gene" prot="public" virt="non-virtual">org.jgap.BaseGene</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" prot="public" virt="non-virtual">org.jgap.impl.DoubleGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" prot="public" virt="non-virtual">org.jgap.impl.IntegerGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene" prot="public" virt="non-virtual">org.jgap.impl.MutipleIntegerGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl" prot="public" virt="non-virtual">org.jgap.impl.NumberGeneTest.NumberGeneImpl</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1a02c4c0f2278e7fc5119beef02806271f" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.NumberGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.23 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1aa8ff97bc401fc5729f2164d91c8c080f" prot="private" static="no" mutable="no">
        <type>Object</type>
        <definition>Object org.jgap.impl.NumberGene.m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>References the internal value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> E.g., for <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref> this is of type Double </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="29" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.NumberGene.NumberGene</definition>
        <argsstring>(Configuration a_config)</argsstring>
        <name>NumberGene</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="31" bodyend="33"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.NumberGene.compareTo</definition>
        <argsstring>(final Object a_other)</argsstring>
        <name>compareTo</name>
        <param>
          <type>final Object</type>
          <declname>a_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> with the specified object (which must also be a <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref>) for order, which is determined by the number value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> compared to the one provided for comparison.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> to be compared to this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the object provided for comparison</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ClassCastException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the specified object&apos;s type prevents it from being compared to this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="50" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="50" bodyend="110"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" compoundref="_base_gene_8java" startline="306" endline="339">org.jgap.BaseGene.compareApplicationData</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e">org.jgap.impl.NumberGene.compareToNative</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" compoundref="_base_gene_8java" startline="302" endline="304">org.jgap.BaseGene.isCompareApplicationData</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1aa8ff97bc401fc5729f2164d91c8c080f" compoundref="_number_gene_8java" startline="29">org.jgap.impl.NumberGene.m_value</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" compoundref="_number_gene_8java" startline="31" endline="33">org.jgap.impl.NumberGene.NumberGene</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a12d28d768d39ab04fa01a7c0b2dab8b0" compoundref="_number_gene_test_8java" startline="553" endline="560">org.jgap.impl.NumberGeneTest.NumberGeneImpl.equals</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.NumberGene.setAllele</definition>
        <argsstring>(final Object a_newValue)</argsstring>
        <name>setAllele</name>
        <param>
          <type>final Object</type>
          <declname>a_newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to the new given value. This class expects the value to be an instance of current type (e.g. Integer). If the value is above or below the upper or lower bounds, it will be mappped to within the allowable range.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="138" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="138" bodyend="149"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" compoundref="_base_gene_8java" startline="370" endline="372">org.jgap.BaseGene.getConstraintChecker</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1aa8ff97bc401fc5729f2164d91c8c080f" compoundref="_number_gene_8java" startline="29">org.jgap.impl.NumberGene.m_value</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1abecc7e11d15220180de70184adbca1dd">org.jgap.impl.NumberGene.mapValueToWithinBounds</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" compoundref="_double_gene_8java" startline="328" endline="332">org.jgap.impl.DoubleGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" compoundref="_integer_gene_8java" startline="331" endline="340">org.jgap.impl.IntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1ac3266677e324ec24bab4676d3cf9a08a" compoundref="_mutiple_integer_gene_8java" startline="352" endline="364">org.jgap.impl.MutipleIntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" compoundref="_double_gene_8java" startline="288" endline="317">org.jgap.impl.DoubleGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a40e4284a0f01a3847ea8a639e568f0c5" compoundref="_mutiple_integer_gene_8java" startline="315" endline="341">org.jgap.impl.MutipleIntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a2a4600159ee917898b7781df844c8b63" compoundref="_number_gene_test_8java" startline="529" endline="547">org.jgap.impl.NumberGeneTest.NumberGeneImpl.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7" compoundref="_double_gene_8java" startline="252" endline="257">org.jgap.impl.DoubleGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" compoundref="_integer_gene_8java" startline="257" endline="262">org.jgap.impl.IntegerGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a1e42e49869c7ae94d138a59e6c3600b6" compoundref="_mutiple_integer_gene_8java" startline="259" endline="261">org.jgap.impl.MutipleIntegerGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" compoundref="_double_gene_8java" startline="167" endline="227">org.jgap.impl.DoubleGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" compoundref="_integer_gene_8java" startline="171" endline="228">org.jgap.impl.IntegerGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a2cf38361dd0f05d2bf89031796caa0ec" compoundref="_mutiple_integer_gene_8java" startline="178" endline="245">org.jgap.impl.MutipleIntegerGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract int</type>
        <definition>abstract int org.jgap.impl.NumberGene.compareToNative</definition>
        <argsstring>(Object a_o1, Object a_o2)</argsstring>
        <name>compareToNative</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac51a53a77b67a6ab2a220ac750be84a8">compareToNative</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4c4c1ff0b5e3f3521119ae0b5e374cd6">compareToNative</reimplementedby>
        <param>
          <type>Object</type>
          <declname>a_o1</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>a_o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares to objects by first casting them into their expected type (e.g. Integer for <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>) and then calling the compareTo-method of the casted type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_o1</parametername>
</parameternamelist>
<parameterdescription>
<para>first object to be compared, always is not null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_o2</parametername>
</parameternamelist>
<parameterdescription>
<para>second object to be compared, always is not null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the object provided for comparison</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="125" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1abecc7e11d15220180de70184adbca1dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void org.jgap.impl.NumberGene.mapValueToWithinBounds</definition>
        <argsstring>()</argsstring>
        <name>mapValueToWithinBounds</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24">mapValueToWithinBounds</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a">mapValueToWithinBounds</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a40e4284a0f01a3847ea8a639e568f0c5">mapValueToWithinBounds</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a2a4600159ee917898b7781df844c8b63">mapValueToWithinBounds</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps the value of this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> to within the bounds specified by the m_upperBounds and m_lowerBounds instance variables. The value&apos;s relative position within the integer range will be preserved within the bounds range (in other words, if the value is about halfway between the integer max and min, then the resulting value will be about halfway between the upper bounds and lower bounds). If the value is null or is already within the bounds, it will be left unchanged.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="163" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Object</type>
        <definition>Object org.jgap.impl.NumberGene.getInternalValue</definition>
        <argsstring>()</argsstring>
        <name>getInternalValue</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">getInternalValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation holds its own m_value object keeping the allele value. In your <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation, just return it with this method (see <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">org.jgap.impl.BooleanGene</ref> for example) <simplesect kind="return"><para>the m_value object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="165" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="165" bodyend="167"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1aa8ff97bc401fc5729f2164d91c8c080f" compoundref="_number_gene_8java" startline="29">org.jgap.impl.NumberGene.m_value</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" compoundref="_double_gene_8java" startline="133" endline="146">org.jgap.impl.DoubleGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" compoundref="_integer_gene_8java" startline="137" endline="150">org.jgap.impl.IntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a2ee1d1c02b875f75243d7b510961990f" compoundref="_mutiple_integer_gene_8java" startline="143" endline="157">org.jgap.impl.MutipleIntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac1e682ba44a3708cc505d78415ee5b6d" compoundref="_double_gene_8java" startline="342" endline="349">org.jgap.impl.DoubleGene.hashCode</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a5a2ddbdf4b8deab10c3c7c7c6ee0a4b7" compoundref="_integer_gene_8java" startline="350" endline="357">org.jgap.impl.IntegerGene.hashCode</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a4aa6d3e8c165272e0fb2cc890e64d62e" compoundref="_mutiple_integer_gene_8java" startline="374" endline="381">org.jgap.impl.MutipleIntegerGene.hashCode</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e" compoundref="_double_gene_8java" startline="358" endline="368">org.jgap.impl.DoubleGene.toString</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" compoundref="_integer_gene_8java" startline="366" endline="376">org.jgap.impl.IntegerGene.toString</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1af833c58712332cc2c981066f6e27bc63" compoundref="_mutiple_integer_gene_8java" startline="390" endline="400">org.jgap.impl.MutipleIntegerGene.toString</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for all Genes based on numbers.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 (most code moved and adapted from <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="16588">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="16587">
        <label>Serializable</label>
      </node>
      <node id="16586">
        <label>Comparable</label>
      </node>
      <node id="16589">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="16584">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="16585" relation="public-inheritance">
        </childnode>
        <childnode refid="16589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16591">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="16583" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16593">
        <label>org.jgap.impl.MutipleIntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene"/>
        <childnode refid="16583" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16594">
        <label>org.jgap.impl.NumberGeneTest.NumberGeneImpl</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl"/>
        <childnode refid="16583" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16585">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="16586" relation="public-inheritance">
        </childnode>
        <childnode refid="16587" relation="public-inheritance">
        </childnode>
        <childnode refid="16588" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16583">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="16584" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16592">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="16591" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16590">
        <label>org.jgap.impl.DoubleGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_double_gene"/>
        <childnode refid="16583" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16600">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="16615">
        <label>List</label>
      </node>
      <node id="16614">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16611">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16599">
        <label>Serializable</label>
      </node>
      <node id="16598">
        <label>Comparable</label>
      </node>
      <node id="16601">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="16596">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="16597" relation="public-inheritance">
        </childnode>
        <childnode refid="16601" relation="public-inheritance">
        </childnode>
        <childnode refid="16602" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="16616" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="16604">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="16605" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16609">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16616">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16612">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16605">
        <label>Cloneable</label>
      </node>
      <node id="16597">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="16598" relation="public-inheritance">
        </childnode>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16600" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16595">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="16596" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16607">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16613">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16606">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="16604" relation="public-inheritance">
        </childnode>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16610">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="16598" relation="public-inheritance">
        </childnode>
        <childnode refid="16604" relation="public-inheritance">
        </childnode>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16600" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16602">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="16603" relation="public-inheritance">
        </childnode>
        <childnode refid="16599" relation="public-inheritance">
        </childnode>
        <childnode refid="16604" relation="public-inheritance">
        </childnode>
        <childnode refid="16598" relation="public-inheritance">
        </childnode>
        <childnode refid="16606" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="16607" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="16608" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="16609" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="16610" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="16611" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="16612" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="16613" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="16614" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="16615" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="16608">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="16603">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" line="21" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/NumberGene.java" bodystart="20" bodyend="168"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e" prot="protected" virt="pure-virtual"><scope>org::jgap::impl::NumberGene</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a02c4c0f2278e7fc5119beef02806271f" prot="private" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" prot="protected" virt="virtual"><scope>org::jgap::impl::NumberGene</scope><name>getInternalValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1aa8ff97bc401fc5729f2164d91c8c080f" prot="private" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>m_value</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1abecc7e11d15220180de70184adbca1dd" prot="protected" virt="pure-virtual"><scope>org::jgap::impl::NumberGene</scope><name>mapValueToWithinBounds</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c" prot="protected" virt="pure-virtual"><scope>org::jgap::impl::NumberGene</scope><name>newGeneInternal</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>NumberGene</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::NumberGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::NumberGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::NumberGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::NumberGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::NumberGene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
