<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test" kind="class" prot="public">
    <compoundname>org::jgap::impl::MutationOperatorTest</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" prot="public" virt="non-virtual">org.jgap.JGAPTestCase</basecompoundref>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1_1_genetic_operator_constraint_for_testing" prot="public">org::jgap::impl::MutationOperatorTest::GeneticOperatorConstraintForTesting</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aaba6b52460304a4709055285d083403a" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.MutationOperatorTest.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.39 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a7f95d67a58557d80839d32b0d90da67c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Test</type>
        <definition>static Test org.jgap.impl.MutationOperatorTest.suite</definition>
        <argsstring>()</argsstring>
        <name>suite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="29" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a145e4d335c30a98e2a4defa2f2d671f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.setUp</definition>
        <argsstring>()</argsstring>
        <name>setUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a89343855ff3e8551f8c6e7d8e5188f61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testConstruct_0</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="44" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="44" bodyend="49"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" compoundref="_mutation_operator_8java" startline="372" endline="374">org.jgap.impl.MutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" compoundref="_mutation_operator_8java" startline="276" endline="278">org.jgap.impl.MutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1abb1385a3b221e523f24a0248338ff6ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testConstruct_1</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="56" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="56" bodyend="61"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" compoundref="_mutation_operator_8java" startline="372" endline="374">org.jgap.impl.MutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" compoundref="_mutation_operator_8java" startline="276" endline="278">org.jgap.impl.MutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a5a765f7c4640bd4e9ddb7a2603659755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testConstruct_2</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="68" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="68" bodyend="73"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" compoundref="_mutation_operator_8java" startline="372" endline="374">org.jgap.impl.MutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" compoundref="_mutation_operator_8java" startline="276" endline="278">org.jgap.impl.MutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a4df357edd3c12138a9313ae89e13fad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testConstruct_3</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_3</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="80" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="80" bodyend="86"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" compoundref="_mutation_operator_8java" startline="372" endline="374">org.jgap.impl.MutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" compoundref="_mutation_operator_8java" startline="276" endline="278">org.jgap.impl.MutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a75ad69b96c38a60df331d44f078aa349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_0</definition>
        <argsstring>()</argsstring>
        <name>testOperate_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that size of mutated set of chromosomes equals the size of original chromosomes. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="95" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="95" bodyend="104"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a0e7839c7b250cbc8cde95942b617a825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_0_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_0_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that size of mutated set of chromosomes equals the size of original chromosomes.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="114" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="114" bodyend="141"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1af9002f5f4f3c535f831a336a8c9b7283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_1</definition>
        <argsstring>()</argsstring>
        <name>testOperate_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutating with different types of genes contained in the population should be possible without exception.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="151" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="151" bodyend="165"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ae766b72f99d4943182866cd61820fd23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NullpointerException because of null <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref>. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="173" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="173" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aef98b4c2a05ec38611ed3ee027655ebe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_3</definition>
        <argsstring>()</argsstring>
        <name>testOperate_3</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests if population size grows expectedly after two consecutive calls.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="196" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="196" bodyend="242"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a34bd219fb0f70e65c3de98f214c8e279" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_3_1</definition>
        <argsstring>()</argsstring>
        <name>testOperate_3_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Dan Clark </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="250" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="250" bodyend="298"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_base_chromosome_1aef0e40ec9b5956389365f5c3144ab207" compoundref="_base_chromosome_8java" startline="283" endline="285">org.jgap.BaseChromosome.getGene</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1af36ffa441c4645ddb757d0611f3cdc6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_4</definition>
        <argsstring>()</argsstring>
        <name>testOperate_4</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that nothing is done. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="307" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="307" bodyend="325"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a95102b25c80ea45e5cad854b2a28eeda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_5</definition>
        <argsstring>()</argsstring>
        <name>testOperate_5</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutation, especially tested for an <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="335" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="335" bodyend="372"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ae607d822ca8c46834e8c3292310fe200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_5_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_5_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutation, especially tested for an <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>. Uses a <ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref>.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="382" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="382" bodyend="428"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a7f540e7af379c31b488899740c9c4ecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_6</definition>
        <argsstring>()</argsstring>
        <name>testOperate_6</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following should be possible without exception. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="437" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="437" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ab2ea7a8d8439a42120bee2605af92d53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_6_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_6_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="451" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="451" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a5aaf5d8acf4eb020ca676d1103af5286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testOperate_8</definition>
        <argsstring>()</argsstring>
        <name>testOperate_8</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Considers <ref refid="interfaceorg_1_1jgap_1_1_i_genetic_operator_constraint" kindref="compound">IGeneticOperatorConstraint</ref>. Here, the mutation of a <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref> is forbidden by that constraint.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="468" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="468" bodyend="505"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aa0c33aac08ee8962e817015fa92b64f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testIsSerializable_0</definition>
        <argsstring>()</argsstring>
        <name>testIsSerializable_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures operator is implementing Serializable <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="514" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="514" bodyend="518"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" compoundref="_j_g_a_p_test_case_8java" startline="140" endline="142">org.jgap.JGAPTestCase.isSerializable</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a6ede204d5814d503bf146ab032b942e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testDoSerialize_0</definition>
        <argsstring>()</argsstring>
        <name>testDoSerialize_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures that operator and all objects contained implement Serializable. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="527" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="527" bodyend="534"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" compoundref="_j_g_a_p_test_case_8java" startline="153" endline="168">org.jgap.JGAPTestCase.doSerialize</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a765478b6a080889a2893c2f9e6935e8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testEquals_0</definition>
        <argsstring>()</argsstring>
        <name>testEquals_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test equals with classcast object.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="552" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="552" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a246ff145aa18b78f2ec32e71d3fc9b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MutationOperatorTest.testCompareTo_0</definition>
        <argsstring>()</argsstring>
        <name>testCompareTo_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="564" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="564" bodyend="579"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a0a45fadb8c98c2654220f42317286e43" compoundref="_mutation_operator_8java" startline="342" endline="370">org.jgap.impl.MutationOperator.compareTo</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests the <ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator" kindref="compound">MutationOperator</ref> class.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="16144">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="16145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16145">
        <label>TestCase</label>
      </node>
      <node id="16143">
        <label>org.jgap.impl.MutationOperatorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test"/>
        <childnode refid="16144" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16160">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="16165">
        <label>List</label>
      </node>
      <node id="16164">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
        <childnode refid="16152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16161">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16151">
        <label>Serializable</label>
      </node>
      <node id="16154">
        <label>Comparable</label>
      </node>
      <node id="16166">
        <label>PrivateAccessor</label>
      </node>
      <node id="16147">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="16148" relation="public-inheritance">
        </childnode>
        <childnode refid="16149" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
        <childnode refid="16166" relation="usage">
          <edgelabel>privateAccessor</edgelabel>
        </childnode>
      </node>
      <node id="16148">
        <label>TestCase</label>
      </node>
      <node id="16152">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="16153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16158">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16162">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
        <childnode refid="16152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16153">
        <label>Cloneable</label>
      </node>
      <node id="16156">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16163">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16146">
        <label>org.jgap.impl.MutationOperatorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test"/>
        <childnode refid="16147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16155">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="16152" relation="public-inheritance">
        </childnode>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
        <childnode refid="16154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16159">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="16154" relation="public-inheritance">
        </childnode>
        <childnode refid="16152" relation="public-inheritance">
        </childnode>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
        <childnode refid="16160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16149">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="16150" relation="public-inheritance">
        </childnode>
        <childnode refid="16151" relation="public-inheritance">
        </childnode>
        <childnode refid="16152" relation="public-inheritance">
        </childnode>
        <childnode refid="16154" relation="public-inheritance">
        </childnode>
        <childnode refid="16155" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="16156" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="16157" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="16158" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="16159" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="16161" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="16162" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="16163" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="16164" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="16165" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="16157">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="16150">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/MutationOperatorTest.java" bodystart="24" bodyend="580"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>assertEquals</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a3ccc244fd7637efacc27641a3b4bac99" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>assertEqualsMap</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a0f7793db6d254be9753ed623ae09653b" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2b9df927cb9282d81abfd7daf6407416" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>conf</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aaba6b52460304a4709055285d083403a" prot="private" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>doSerialize</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a1068930066ebd33ed69ccfe34a7f78ed" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>getNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a4f484987731cdc5276ee2575a165fcf3" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>isChromosomesEqual</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>isSerializable</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1adf378e0444b264c507f8cc459d8a26ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a472f2e2903439a8a484ba5ff0639fa02" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>privateAccessor</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a77399f44cc0bd6e5ac3832e0ad2b2f7e" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>setNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a145e4d335c30a98e2a4defa2f2d671f5" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>setUp</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a7f95d67a58557d80839d32b0d90da67c" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>suite</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a246ff145aa18b78f2ec32e71d3fc9b14" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testCompareTo_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a89343855ff3e8551f8c6e7d8e5188f61" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testConstruct_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1abb1385a3b221e523f24a0248338ff6ca" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testConstruct_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a5a765f7c4640bd4e9ddb7a2603659755" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testConstruct_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a4df357edd3c12138a9313ae89e13fad5" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testConstruct_3</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a6ede204d5814d503bf146ab032b942e1" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testDoSerialize_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a765478b6a080889a2893c2f9e6935e8c" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testEquals_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aa0c33aac08ee8962e817015fa92b64f4" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testIsSerializable_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a75ad69b96c38a60df331d44f078aa349" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a0e7839c7b250cbc8cde95942b617a825" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_0_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1af9002f5f4f3c535f831a336a8c9b7283" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ae766b72f99d4943182866cd61820fd23" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1aef98b4c2a05ec38611ed3ee027655ebe" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_3</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a34bd219fb0f70e65c3de98f214c8e279" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_3_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1af36ffa441c4645ddb757d0611f3cdc6d" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_4</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a95102b25c80ea45e5cad854b2a28eeda" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_5</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ae607d822ca8c46834e8c3292310fe200" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_5_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a7f540e7af379c31b488899740c9c4ecb" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_6</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1ab2ea7a8d8439a42120bee2605af92d53" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_6_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_test_1a5aaf5d8acf4eb020ca676d1103af5286" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>testOperate_8</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a653121052ecd3600acbcabf78dc1e193" prot="public" virt="non-virtual"><scope>org::jgap::impl::MutationOperatorTest</scope><name>uniqueChromosomes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
