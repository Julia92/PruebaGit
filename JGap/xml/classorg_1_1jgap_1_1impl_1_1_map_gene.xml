<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_map_gene" kind="class" prot="public">
    <compoundname>org::jgap::impl::MapGene</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_base_gene" prot="public" virt="non-virtual">org.jgap.BaseGene</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_persistent_representation" prot="public" virt="non-virtual">org.jgap.IPersistentRepresentation</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa65a07ab87910fd23ef486d0bd4340d6" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.MapGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.26 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" prot="private" static="no" mutable="no">
        <type>THashMap</type>
        <definition>THashMap org.jgap.impl.MapGene.m_geneMap</definition>
        <argsstring></argsstring>
        <name>m_geneMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for valid alleles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="42" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" compoundref="_map_gene_8java" startline="420" endline="531">org.jgap.impl.MapGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" compoundref="_map_gene_8java" startline="180" endline="182">org.jgap.impl.MapGene.getAlleles</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4ec0685191f0ca38e2ddc05e237b9577" compoundref="_map_gene_8java" startline="76" endline="80">org.jgap.impl.MapGene.MapGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" compoundref="_map_gene_8java" startline="99" endline="110">org.jgap.impl.MapGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1af102ddb4e963fc1355ea193ce414ca54" compoundref="_map_gene_8java" startline="383" endline="402">org.jgap.impl.MapGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a537cd33d9eedd9ad384219ef0379bc62" compoundref="_map_gene_8java" startline="196" endline="204">org.jgap.impl.MapGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" compoundref="_map_gene_8java" startline="567" endline="605">org.jgap.impl.MapGene.toString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" prot="private" static="no" mutable="no">
        <type>Object</type>
        <definition>Object org.jgap.impl.MapGene.m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the constant range of values supported by integers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="47" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="47" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" compoundref="_map_gene_8java" startline="420" endline="531">org.jgap.impl.MapGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a20a2cdecf740152ac3454df33e0d8449" compoundref="_map_gene_8java" startline="537" endline="539">org.jgap.impl.MapGene.getInternalValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1af102ddb4e963fc1355ea193ce414ca54" compoundref="_map_gene_8java" startline="383" endline="402">org.jgap.impl.MapGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a537cd33d9eedd9ad384219ef0379bc62" compoundref="_map_gene_8java" startline="196" endline="204">org.jgap.impl.MapGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa26832d5aefa69e44d2efd58e333e230" compoundref="_map_gene_8java" startline="248" endline="333">org.jgap.impl.MapGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1add920662c13a49987e2200e9e9b49737" prot="package" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.MapGene.ALLELEMAP_BEGIN_DELIMITER</definition>
        <argsstring></argsstring>
        <name>ALLELEMAP_BEGIN_DELIMITER</name>
        <initializer>= &quot;[&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the delimiter that is used to mark the allele map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae51f3484ba9b56614d74cd7b42e725f5" prot="package" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.MapGene.ALLELEMAP_END_DELIMITER</definition>
        <argsstring></argsstring>
        <name>ALLELEMAP_END_DELIMITER</name>
        <initializer>= &quot;]&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4c9c61edff0ee53c964347eb745e1a3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.MapGene.MapGene</definition>
        <argsstring>()</argsstring>
        <name>MapGene</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor.</para><para>Attention: The configuration used is the one set with the static method Genotype.setConfiguration. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="64" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="64" bodyend="67"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" compoundref="_map_gene_8java" startline="420" endline="531">org.jgap.impl.MapGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" compoundref="_map_gene_8java" startline="99" endline="110">org.jgap.impl.MapGene.newGeneInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4ec0685191f0ca38e2ddc05e237b9577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.MapGene.MapGene</definition>
        <argsstring>(final Configuration a_config)</argsstring>
        <name>MapGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="76" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="76" bodyend="80"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a66c96770b517a1582d6f771d4a35b134" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.MapGene.MapGene</definition>
        <argsstring>(final Configuration a_config, final Map a_alleles)</argsstring>
        <name>MapGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final Map</type>
          <declname>a_alleles</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor setting up valid alleles directly.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_alleles</parametername>
</parameternamelist>
<parameterdescription>
<para>the valid alleles of the gene </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="92" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="92" bodyend="97"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1acaf2b285f329ddf8a6d37f6fe9c01a3f" compoundref="_map_gene_8java" startline="154" endline="161">org.jgap.impl.MapGene.addAlleles</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a82dfbb6bc328e48d9ed1725baf75eb67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.addAllele</definition>
        <argsstring>(final Object a_key, final Object a_value)</argsstring>
        <name>addAllele</name>
        <param>
          <type>final Object</type>
          <declname>a_key</declname>
        </param>
        <param>
          <type>final Object</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a potential allele value to the collection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to be added, e.g. a descriptive string value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_value</parametername>
</parameternamelist>
<parameterdescription>
<para>the Integer value to be added </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="119" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="119" bodyend="121"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa26832d5aefa69e44d2efd58e333e230" compoundref="_map_gene_8java" startline="248" endline="333">org.jgap.impl.MapGene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a04696095e30cf06edf25a4ea3d2c2546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.addAllele</definition>
        <argsstring>(final Object a_value)</argsstring>
        <name>addAllele</name>
        <param>
          <type>final Object</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a potential allele value to the collection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be added, also used as key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="131" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a40f4ea96d222b87c688b400bef1fbb91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.addAllele</definition>
        <argsstring>(final int a_value)</argsstring>
        <name>addAllele</name>
        <param>
          <type>final int</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method for addAllele (Object&apos;s that are Integer&apos;s)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_value</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value to be added, also used as key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="143" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1acaf2b285f329ddf8a6d37f6fe9c01a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.addAlleles</definition>
        <argsstring>(final Map a_alleles)</argsstring>
        <name>addAlleles</name>
        <param>
          <type>final Map</type>
          <declname>a_alleles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a set of potential allele values to the collection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_alleles</parametername>
</parameternamelist>
<parameterdescription>
<para>the set of alleles to be added</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="154" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="154" bodyend="161"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a66c96770b517a1582d6f771d4a35b134" compoundref="_map_gene_8java" startline="92" endline="97">org.jgap.impl.MapGene.MapGene</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1aaa6f3a3a80baadf6a3216a1ef0167f24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.removeAlleles</definition>
        <argsstring>(final Object a_key)</argsstring>
        <name>removeAlleles</name>
        <param>
          <type>final Object</type>
          <declname>a_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes a potential allele or set of alleles from the collection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_key</parametername>
</parameternamelist>
<parameterdescription>
<para>the unique value(s) of the object(s) to be removed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="170" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map</type>
        <definition>Map org.jgap.impl.MapGene.getAlleles</definition>
        <argsstring>()</argsstring>
        <name>getAlleles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the map of alleles</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="180" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="180" bodyend="182"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab6c0cd54eb035dd82a007917bfe389b9" compoundref="_map_gene_test_8java" startline="532" endline="540">org.jgap.impl.MapGeneTest.testRemoveAlleles_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a6fa09c14b5b028c8106aba235e91ae65" compoundref="_map_gene_test_8java" startline="548" endline="556">org.jgap.impl.MapGeneTest.testRemoveAlleles_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c54e74d3962fa7877e32a8682ef0ef3" compoundref="_map_gene_test_8java" startline="580" endline="587">org.jgap.impl.MapGeneTest.testSetToRandomValue_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a537cd33d9eedd9ad384219ef0379bc62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.setToRandomValue</definition>
        <argsstring>(final RandomGenerator a_numberGenerator)</argsstring>
        <name>setToRandomValue</name>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_numberGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the allele value to be a random value using a defined random number generator. If no valid alleles are defined, any allele is allowed. Then, a new Integer with random value is set as random value. Override this method if you want a different behaviour, such as a Double instead of the Integer type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_numberGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>the random generator to use</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="196" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="196" bodyend="204"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" compoundref="_map_gene_8java" startline="47">org.jgap.impl.MapGene.m_value</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1a993f3b23cfbc3f8001405544580eda2e">org.jgap.RandomGenerator.nextInt</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ac9095e249f597d47c9c54aa9108afb77" compoundref="_map_gene_8java" startline="222" endline="226">org.jgap.impl.MapGene.applyMutation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1ac9095e249f597d47c9c54aa9108afb77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.applyMutation</definition>
        <argsstring>(final int a_index, final double a_percentage)</argsstring>
        <name>applyMutation</name>
        <param>
          <type>final int</type>
          <declname>a_index</declname>
        </param>
        <param>
          <type>final double</type>
          <declname>a_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>See interface <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> for description of applyMutation.</para><para>For this kind of gene, providing an index and a percentage of mutation would have no significance because the individual allele forms are independent of one another. In mutating, they can only change from one form to another. It may be possible to weight the likelihood of mutation to different forms, but that is not implemented currently.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_index</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored here</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para><simplesectsep/><para>Johnathan Kool </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="222" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="222" bodyend="226"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a537cd33d9eedd9ad384219ef0379bc62" compoundref="_map_gene_8java" startline="196" endline="204">org.jgap.impl.MapGene.setToRandomValue</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa26832d5aefa69e44d2efd58e333e230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.setValueFromPersistentRepresentation</definition>
        <argsstring>(final String a_representation)</argsstring>
        <name>setValueFromPersistentRepresentation</name>
        <param>
          <type>final String</type>
          <declname>a_representation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value and internal state of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from the string representation returned by a previous invocation of the <ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845" kindref="member">getPersistentRepresentation()</ref> method. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_representation</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representation retrieved from a prior call to the <ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845" kindref="member">getPersistentRepresentation()</ref> method.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation does not support the given string representation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="248" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="248" bodyend="333"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a82dfbb6bc328e48d9ed1725baf75eb67" compoundref="_map_gene_8java" startline="119" endline="121">org.jgap.impl.MapGene.addAllele</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" compoundref="_map_gene_8java" startline="47">org.jgap.impl.MapGene.m_value</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.MapGene.getPersistentRepresentation</definition>
        <argsstring>()</argsstring>
        <name>getPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a07bf7dbaa8de08e268c9357a46e79dac">getPersistentRepresentation</reimplements>
        <exceptions> throws UnsupportedOperationException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> that includes any information required to reconstruct it at a later time, such as its value and internal state. This string will be used to represent this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in XML persistence. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s current state </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="352" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="352" bodyend="372"/>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1af102ddb4e963fc1355ea193ce414ca54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.MapGene.setAllele</definition>
        <argsstring>(Object a_newValue)</argsstring>
        <name>setAllele</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127">setAllele</reimplements>
        <param>
          <type>Object</type>
          <declname>a_newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to the new given value. This class expects the value to be an instance of current type (e.g. Integer).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Johnathan Kool, Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="383" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="383" bodyend="402"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" compoundref="_map_gene_8java" startline="47">org.jgap.impl.MapGene.m_value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.MapGene.compareTo</definition>
        <argsstring>(Object a_other)</argsstring>
        <name>compareTo</name>
        <param>
          <type>Object</type>
          <declname>a_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> with the specified object (which must also be a <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref>) for order, which is determined by the number value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> compared to the one provided for comparison.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> to be compared to this <ref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" kindref="compound">NumberGene</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the object provided for comparison</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ClassCastException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the specified object&apos;s type prevents it from being compared to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para><simplesectsep/><para>Johnathan Kool </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="420" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="420" bodyend="531"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" compoundref="_map_gene_8java" startline="47">org.jgap.impl.MapGene.m_value</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4c9c61edff0ee53c964347eb745e1a3e" compoundref="_map_gene_8java" startline="64" endline="67">org.jgap.impl.MapGene.MapGene</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ad13b264f3cef66c9cb223e97d71b044c" compoundref="_map_gene_test_8java" startline="466" endline="474">org.jgap.impl.MapGeneTest.testCompareTo_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a548bb5b895f35bac3492e7d8a521b7bf" compoundref="_map_gene_test_8java" startline="482" endline="489">org.jgap.impl.MapGeneTest.testCompareTo_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2ac65ef5715e77180f2aa53862c3a9d1" compoundref="_map_gene_test_8java" startline="497" endline="505">org.jgap.impl.MapGeneTest.testCompareTo_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab241ff461c072cd476021ea965180c59" compoundref="_map_gene_test_8java" startline="513" endline="524">org.jgap.impl.MapGeneTest.testCompareTo_3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae79496d829629130032c7ba5b25af355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.MapGene.hashCode</definition>
        <argsstring>()</argsstring>
        <name>hashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modified <ref refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae79496d829629130032c7ba5b25af355" kindref="member">hashCode()</ref> function to return different hashcodes for differently ordered genes in a chromosome <simplesect kind="return"><para>-1 if no allele set, otherwise value return by <ref refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" kindref="member">BaseGene.hashCode()</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="549" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="549" bodyend="556"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a20a2cdecf740152ac3454df33e0d8449" compoundref="_map_gene_8java" startline="537" endline="539">org.jgap.impl.MapGene.getInternalValue</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.MapGene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value that may be useful for display purposes.</para><para><simplesect kind="return"><para>a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="567" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="567" bodyend="605"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a4dc696cec07451418218f1406c4ae333" compoundref="_map_gene_test_8java" startline="75" endline="79">org.jgap.impl.MapGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a353c565478e1693eba3d1422ed365b19" compoundref="_map_gene_test_8java" startline="81" endline="86">org.jgap.impl.MapGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a69dbbc7956d50b247d6cfae19a93f4ef" compoundref="_map_gene_test_8java" startline="88" endline="94">org.jgap.impl.MapGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a2c921a35595e6aaa94fa199e6e1d6c49" compoundref="_map_gene_test_8java" startline="96" endline="102">org.jgap.impl.MapGeneTest.testToString_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a0affe0ce7427ea6b4926eb0ff1fd92b7" compoundref="_map_gene_test_8java" startline="111" endline="117">org.jgap.impl.MapGeneTest.testToString_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a65be7596c2df1901886d5b698deafd03" compoundref="_map_gene_test_8java" startline="126" endline="132">org.jgap.impl.MapGeneTest.testToString_5</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.impl.MapGene.newGeneInternal</definition>
        <argsstring>()</argsstring>
        <name>newGeneInternal</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c">newGeneInternal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="99" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="99" bodyend="110"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" compoundref="_map_gene_8java" startline="42">org.jgap.impl.MapGene.m_geneMap</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4c9c61edff0ee53c964347eb745e1a3e" compoundref="_map_gene_8java" startline="64" endline="67">org.jgap.impl.MapGene.MapGene</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_map_gene_1a20a2cdecf740152ac3454df33e0d8449" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Object</type>
        <definition>Object org.jgap.impl.MapGene.getInternalValue</definition>
        <argsstring>()</argsstring>
        <name>getInternalValue</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">getInternalValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the internal value of the gene </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="537" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="537" bodyend="539"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" compoundref="_map_gene_8java" startline="47">org.jgap.impl.MapGene.m_value</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae79496d829629130032c7ba5b25af355" compoundref="_map_gene_8java" startline="549" endline="556">org.jgap.impl.MapGene.hashCode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Creates a gene instance in which individual alleles have both a label (key) and a value with a distinct meaning. This allows to realize a gene with a set of valid values instead of a range of values. For example, <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> only allows for values having a continuous range, and does not have a function where it is possible to specify setValue... </para><para>This implementation does not support specifying a range of valid integer values. Instead it is planned to provide a constraint checker plugin later on. With this, the current implementation will stay unchanged and can be as performant as possible without losing flexibility.</para><para><simplesect kind="see"><para>class <ref refid="classexamples_1_1_map_gene_example" kindref="compound">examples.MapGeneExample</ref></para></simplesect>
<simplesect kind="author"><para>Johnathan Kool, Organisation: RSMAS, University of Miami </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="15684">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="15679">
        <label>org.jgap.impl.MapGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_map_gene"/>
        <childnode refid="15680" relation="public-inheritance">
        </childnode>
        <childnode refid="15686" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15683">
        <label>Serializable</label>
      </node>
      <node id="15682">
        <label>Comparable</label>
      </node>
      <node id="15685">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="15680">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="15681" relation="public-inheritance">
        </childnode>
        <childnode refid="15685" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15681">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="15682" relation="public-inheritance">
        </childnode>
        <childnode refid="15683" relation="public-inheritance">
        </childnode>
        <childnode refid="15684" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15686">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15692">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="15707">
        <label>List</label>
      </node>
      <node id="15706">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15687">
        <label>org.jgap.impl.MapGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_map_gene"/>
        <childnode refid="15688" relation="public-inheritance">
        </childnode>
        <childnode refid="15709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15703">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15691">
        <label>Serializable</label>
      </node>
      <node id="15690">
        <label>Comparable</label>
      </node>
      <node id="15693">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="15688">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="15689" relation="public-inheritance">
        </childnode>
        <childnode refid="15693" relation="public-inheritance">
        </childnode>
        <childnode refid="15694" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="15708" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="15696">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="15697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15701">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15708">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15704">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15697">
        <label>Cloneable</label>
      </node>
      <node id="15689">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="15690" relation="public-inheritance">
        </childnode>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15709">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="15699">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15705">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15698">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="15696" relation="public-inheritance">
        </childnode>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15690" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15702">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="15690" relation="public-inheritance">
        </childnode>
        <childnode refid="15696" relation="public-inheritance">
        </childnode>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15694">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="15695" relation="public-inheritance">
        </childnode>
        <childnode refid="15691" relation="public-inheritance">
        </childnode>
        <childnode refid="15696" relation="public-inheritance">
        </childnode>
        <childnode refid="15690" relation="public-inheritance">
        </childnode>
        <childnode refid="15698" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="15699" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="15700" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="15701" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="15702" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="15703" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="15704" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="15705" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="15706" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="15707" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="15700">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="15695">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" line="35" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/MapGene.java" bodystart="34" bodyend="606"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a82dfbb6bc328e48d9ed1725baf75eb67" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>addAllele</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a04696095e30cf06edf25a4ea3d2c2546" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>addAllele</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a40f4ea96d222b87c688b400bef1fbb91" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>addAllele</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1acaf2b285f329ddf8a6d37f6fe9c01a3f" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>addAlleles</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1add920662c13a49987e2200e9e9b49737" prot="package" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>ALLELEMAP_BEGIN_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae51f3484ba9b56614d74cd7b42e725f5" prot="package" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>ALLELEMAP_END_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ac9095e249f597d47c9c54aa9108afb77" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>applyMutation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::MapGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a32fbf53138c5ea70f07490684f9fc659" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa65a07ab87910fd23ef486d0bd4340d6" prot="private" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a05606dffa0ab3246b6a865a83680dd14" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getAlleles</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a20a2cdecf740152ac3454df33e0d8449" prot="protected" virt="virtual"><scope>org::jgap::impl::MapGene</scope><name>getInternalValue</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ae79496d829629130032c7ba5b25af355" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a01e13b3562f441aa9be32547a0d462c8" prot="private" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>m_geneMap</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a22a2a9132722ecd9188dffc593722df0" prot="private" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>m_value</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4c9c61edff0ee53c964347eb745e1a3e" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>MapGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4ec0685191f0ca38e2ddc05e237b9577" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>MapGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a66c96770b517a1582d6f771d4a35b134" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>MapGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" prot="protected" virt="virtual"><scope>org::jgap::impl::MapGene</scope><name>newGeneInternal</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aaa6f3a3a80baadf6a3216a1ef0167f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>removeAlleles</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1af102ddb4e963fc1355ea193ce414ca54" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::MapGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::MapGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::MapGene</scope><name>setEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a537cd33d9eedd9ad384219ef0379bc62" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setToRandomValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::MapGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa26832d5aefa69e44d2efd58e333e230" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::MapGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a94a345f1919c4840dd0b9eecf7afc6a3" prot="public" virt="non-virtual" ambiguityscope="org::jgap::IPersistentRepresentation."><scope>org::jgap::impl::MapGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f" prot="public" virt="non-virtual"><scope>org::jgap::impl::MapGene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
