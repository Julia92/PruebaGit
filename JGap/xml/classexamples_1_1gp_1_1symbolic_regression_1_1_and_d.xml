<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d" kind="class" prot="public">
    <compoundname>examples::gp::symbolicRegression::AndD</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MathCommand</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IMutateable</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ICloneable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a61e634e6f7c270f29a94374572e35e70" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.gp.symbolicRegression.AndD.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.1 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1af4cf82cb1c3ec38f1fb358be9f6c8a3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.gp.symbolicRegression.AndD.AndD</definition>
        <argsstring>(final GPConfiguration a_conf)</argsstring>
        <name>AndD</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="28" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="28" bodyend="31"/>
        <references refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a085d36818c24978468c002c57d982363" compoundref="_command_gene_8java" startline="57">org.jgap.gp.CommandGene.DoubleClass</references>
        <referencedby refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a37a1d782d62692b545df3b76994b4ea0" compoundref="_and_d_8java" startline="58" endline="65">examples.gp.symbolicRegression.AndD.clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a543a918891473f525aac3e6ba2c5ce9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.gp.symbolicRegression.AndD.AndD</definition>
        <argsstring>(final GPConfiguration a_conf, Class a_returnType)</argsstring>
        <name>AndD</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_returnType</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1abc123ebb5a86ea3479c39b254727a0cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref></type>
        <definition>CommandGene examples.gp.symbolicRegression.AndD.applyMutation</definition>
        <argsstring>(int index, double a_percentage)</argsstring>
        <name>applyMutation</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_percentage</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a37a1d782d62692b545df3b76994b4ea0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object examples.gp.symbolicRegression.AndD.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clones the object. Simple and straight forward implementation here.</para><para><simplesect kind="return"><para>cloned instance of this object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="58" bodyend="65"/>
        <references refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1af4cf82cb1c3ec38f1fb358be9f6c8a3c" compoundref="_and_d_8java" startline="28" endline="31">examples.gp.symbolicRegression.AndD.AndD</references>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1acccc0f44ff35846d116b383af0f9dd35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.AndD.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="67" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1adb607dda6e339988cf39fee9ee7810aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String examples.gp.symbolicRegression.AndD.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>textual name of this command</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="77" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1aa0ef8797f4453c6fd356b12582a37b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.gp.symbolicRegression.AndD.execute_double</definition>
        <argsstring>(ProgramChromosome c, int n, Object[] args)</argsstring>
        <name>execute_double</name>
        <param>
          <type>ProgramChromosome</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Object[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="81" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="81" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The boolean and operation.</para><para><simplesect kind="author"><para>Klaus Meffert, Hakan Kjellerstrand </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9539">
        <label>IMutateable</label>
      </node>
      <node id="9538">
        <label>MathCommand</label>
      </node>
      <node id="9537">
        <label>examples.gp.symbolicRegression.AndD</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d"/>
        <childnode refid="9538" relation="public-inheritance">
        </childnode>
        <childnode refid="9539" relation="public-inheritance">
        </childnode>
        <childnode refid="9540" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9540">
        <label>ICloneable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9543">
        <label>IMutateable</label>
      </node>
      <node id="9542">
        <label>MathCommand</label>
      </node>
      <node id="9541">
        <label>examples.gp.symbolicRegression.AndD</label>
        <link refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d"/>
        <childnode refid="9542" relation="public-inheritance">
        </childnode>
        <childnode refid="9543" relation="public-inheritance">
        </childnode>
        <childnode refid="9544" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9544">
        <label>ICloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/gp/symbolicRegression/AndD.java" bodystart="23" bodyend="99"/>
    <listofallmembers>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1af4cf82cb1c3ec38f1fb358be9f6c8a3c" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>AndD</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a543a918891473f525aac3e6ba2c5ce9f" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>AndD</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1abc123ebb5a86ea3479c39b254727a0cf" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>applyMutation</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a37a1d782d62692b545df3b76994b4ea0" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>clone</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1a61e634e6f7c270f29a94374572e35e70" prot="private" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1aa0ef8797f4453c6fd356b12582a37b32" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>execute_double</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1adb607dda6e339988cf39fee9ee7810aa" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>getName</name></member>
      <member refid="classexamples_1_1gp_1_1symbolic_regression_1_1_and_d_1acccc0f44ff35846d116b383af0f9dd35" prot="public" virt="non-virtual"><scope>examples::gp::symbolicRegression::AndD</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
