<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator" kind="class" prot="public">
    <compoundname>org::jgap::impl::HotBitsRandomGenerator</compoundname>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_random_generator" prot="public" virt="non-virtual">org.jgap.RandomGenerator</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a902b9dbe4496da72c6c3807a0c266523" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.HotBitsRandomGenerator.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.3 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1afb3d4f751eec2635618aee7d91323a63" prot="private" static="no" mutable="no">
        <type>randomX</type>
        <definition>randomX org.jgap.impl.HotBitsRandomGenerator.m_randomGenerator</definition>
        <argsstring></argsstring>
        <name>m_randomGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="27" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a84bbb39c921d46f5cff77c8e6a5baabc" compoundref="_hot_bits_random_generator_8java" startline="33" endline="35">org.jgap.impl.HotBitsRandomGenerator.getRandomGenerator</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a9e55f5cd47a861f70b051f86278a378c" compoundref="_hot_bits_random_generator_8java" startline="29" endline="31">org.jgap.impl.HotBitsRandomGenerator.HotBitsRandomGenerator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a9e55f5cd47a861f70b051f86278a378c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.HotBitsRandomGenerator.HotBitsRandomGenerator</definition>
        <argsstring>(randomX a_randomGenerator)</argsstring>
        <name>HotBitsRandomGenerator</name>
        <param>
          <type>randomX</type>
          <declname>a_randomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="29" bodyend="31"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1afb3d4f751eec2635618aee7d91323a63" compoundref="_hot_bits_random_generator_8java" startline="27">org.jgap.impl.HotBitsRandomGenerator.m_randomGenerator</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a84bbb39c921d46f5cff77c8e6a5baabc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>randomX</type>
        <definition>randomX org.jgap.impl.HotBitsRandomGenerator.getRandomGenerator</definition>
        <argsstring>()</argsstring>
        <name>getRandomGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="33" bodyend="35"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1afb3d4f751eec2635618aee7d91323a63" compoundref="_hot_bits_random_generator_8java" startline="27">org.jgap.impl.HotBitsRandomGenerator.m_randomGenerator</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a5460b602a8d1fd5bf2c71ab972a973ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte org.jgap.impl.HotBitsRandomGenerator.nextByte</definition>
        <argsstring>()</argsstring>
        <name>nextByte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a212886b62617d156a8dfaa8753ab1ae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.HotBitsRandomGenerator.nextInt</definition>
        <argsstring>()</argsstring>
        <name>nextInt</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1a993f3b23cfbc3f8001405544580eda2e">nextInt</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the next pseudorandom, uniformly distributed int value from this random number generator&apos;s sequence. The general contract of nextInt is that one int value is pseudorandomly generated and returned. All 2^32 possible int values are produced with (approximately) equal probability.</para><para><simplesect kind="return"><para>a pseudorandom integer value</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1ad532bb61610054a88c7a46633937f62f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.HotBitsRandomGenerator.nextInt</definition>
        <argsstring>(int ceiling)</argsstring>
        <name>nextInt</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1a29411be7a476ab217372b7f046536be6">nextInt</reimplements>
        <param>
          <type>int</type>
          <declname>a_ceiling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator&apos;s sequence. The general contract of nextInt is that one int value in the specified range is pseudorandomly generated and returned. All n possible int values are produced with (approximately) equal probability. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_ceiling</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper boundary excluded</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pseudorandom integer value between 0 and the given ceiling - 1, inclusive</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="45" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a084ac095168363d42c9b581475b314b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.jgap.impl.HotBitsRandomGenerator.nextLong</definition>
        <argsstring>()</argsstring>
        <name>nextLong</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1a09b1ace0d1020d186b726bb725557ad2">nextLong</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the next pseudorandom, uniformly distributed long value from this random number generator&apos;s sequence. The general contract of <ref refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a084ac095168363d42c9b581475b314b4" kindref="member">nextLong()</ref> is that one long value is pseudorandomly generated and returned. All 2^64 possible long values are produced with (approximately) equal probability.</para><para><simplesect kind="return"><para>a psuedorandom long value</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="49" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a21342093908fb90520d7506d0bec49f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.impl.HotBitsRandomGenerator.nextDouble</definition>
        <argsstring>()</argsstring>
        <name>nextDouble</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1a708f273cc71846c2ae973172f20f2c01">nextDouble</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the next pseudorandom, uniformly distributed double value between 0.0 and 1.0 from this random number generator&apos;s sequence.</para><para><simplesect kind="return"><para>a psuedorandom double value GREATER/EQUAL 0 AND LESS THAN 1</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a4d60bfea27c1cf66d355c2608091cc30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float org.jgap.impl.HotBitsRandomGenerator.nextFloat</definition>
        <argsstring>()</argsstring>
        <name>nextFloat</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1a0c5ff6cb7faf2d5385405f56f463a070">nextFloat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the next pseudorandom, uniformly distributed float value between 0.0 and 1.0 from this random number generator&apos;s sequence.</para><para><simplesect kind="return"><para>a psuedorandom float value</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="57" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1aa660e3a60dca1802dbc28c564f2a9428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.impl.HotBitsRandomGenerator.nextBoolean</definition>
        <argsstring>()</argsstring>
        <name>nextBoolean</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_random_generator_1ae1e8373d795fa8269c2f51f2e5525150">nextBoolean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the next pseudorandom, uniformly distributed boolean value from this random number generator&apos;s sequence. The general contract of nextBoolean is that one boolean value is pseudorandomly generated and returned. The values true and false are produced with (approximately) equal probability.</para><para><simplesect kind="return"><para>a pseudorandom boolean value</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="61" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Random generator using the HotBits random generators (they are pluggable here) and adapts the interface to <ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">org.jgap.RandomGenerator</ref></para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.3 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="13927">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="13928" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13928">
        <label>Serializable</label>
      </node>
      <node id="13926">
        <label>org.jgap.impl.HotBitsRandomGenerator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator"/>
        <childnode refid="13927" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13930">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="13931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13931">
        <label>Serializable</label>
      </node>
      <node id="13929">
        <label>org.jgap.impl.HotBitsRandomGenerator</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator"/>
        <childnode refid="13930" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/HotBitsRandomGenerator.java" bodystart="22" bodyend="64"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a902b9dbe4496da72c6c3807a0c266523" prot="private" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a84bbb39c921d46f5cff77c8e6a5baabc" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>getRandomGenerator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a9e55f5cd47a861f70b051f86278a378c" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>HotBitsRandomGenerator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1afb3d4f751eec2635618aee7d91323a63" prot="private" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>m_randomGenerator</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1aa660e3a60dca1802dbc28c564f2a9428" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextBoolean</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a5460b602a8d1fd5bf2c71ab972a973ab" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextByte</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a21342093908fb90520d7506d0bec49f0" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextDouble</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a4d60bfea27c1cf66d355c2608091cc30" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextFloat</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a212886b62617d156a8dfaa8753ab1ae9" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextInt</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1ad532bb61610054a88c7a46633937f62f" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextInt</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_hot_bits_random_generator_1a084ac095168363d42c9b581475b314b4" prot="public" virt="non-virtual"><scope>org::jgap::impl::HotBitsRandomGenerator</scope><name>nextLong</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
