<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1_chromosome_for_testing" kind="class" prot="public">
    <compoundname>org::jgap::ChromosomeForTesting</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_chromosome" prot="public" virt="non-virtual">org.jgap.Chromosome</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1_genotype_test_1_1_chromosome_for_test2" prot="public" virt="non-virtual">org.jgap.GenotypeTest.ChromosomeForTest2</derivedcompoundref>
    <innerclass refid="classorg_1_1jgap_1_1_chromosome_for_testing_1_1_test_result_holder" prot="public">org::jgap::ChromosomeForTesting::TestResultHolder</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_chromosome_for_testing_1abdcdd40ec54fed0a8fcd0cb1437cfc0e" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.jgap.ChromosomeForTesting.m_isCloned</definition>
        <argsstring></argsstring>
        <name>m_isCloned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="20" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="20" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_for_testing_1af25dacbcb89fed18007d55f1fde951b4" compoundref="_chromosome_for_testing_8java" startline="46" endline="52">org.jgap.ChromosomeForTesting.getFitnessValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a7442bca45bb55a07fa7bc9a0dab795c9" compoundref="_chromosome_for_testing_8java" startline="54" endline="56">org.jgap.ChromosomeForTesting.resetIsCloned</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1aa30c6d1e2e69ce1978d97c2540aa9ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.ChromosomeForTesting.ChromosomeForTesting</definition>
        <argsstring>()</argsstring>
        <name>ChromosomeForTesting</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="23" bodyend="26"/>
        <references refid="classorg_1_1jgap_1_1_genotype_1aaf3d4bf0b470aa4655e85262289443eb" compoundref="_genotype_8java" startline="520" endline="522">org.jgap.Genotype.getStaticConfiguration</references>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_for_testing_1acfcef639c3443fde7d324164050e3e19" compoundref="_chromosome_for_testing_8java" startline="114" endline="124">org.jgap.ChromosomeForTesting.clone</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa186eea2900ad70d989ae91f334a4c9c" compoundref="_chromosome_for_testing_8java" startline="58" endline="112">org.jgap.ChromosomeForTesting.randomInitialChromosome2</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a505b60c5fe34d7540a878c67d7a221f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.ChromosomeForTesting.ChromosomeForTesting</definition>
        <argsstring>(Configuration a_config)</argsstring>
        <name>ChromosomeForTesting</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="28" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a3c91e8c54303339456cb83662d7c1c44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.ChromosomeForTesting.ChromosomeForTesting</definition>
        <argsstring>(Configuration a_config, final Gene[] a_initialGenes)</argsstring>
        <name>ChromosomeForTesting</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]</type>
          <declname>a_initialGenes</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a09badc9a3c7e94041057df27c3e4c5c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.ChromosomeForTesting.getComputedTimes</definition>
        <argsstring>()</argsstring>
        <name>getComputedTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1ad62fc0d30ee4773a96b91fb1a7c5e4cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.ChromosomeForTesting.resetComputedTimes</definition>
        <argsstring>()</argsstring>
        <name>resetComputedTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1af25dacbcb89fed18007d55f1fde951b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.ChromosomeForTesting.getFitnessValue</definition>
        <argsstring>()</argsstring>
        <name>getFitnessValue</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_chromosome_1a9b68991c832a2054176d522e49a19ebd">getFitnessValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the fitness value of this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>, as determined by the active fitness function. If a bulk fitness function is in use and has not yet assigned a fitness value to this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>, then -1 is returned.</para><para>Attention: should not be called from <ref refid="classorg_1_1jgap_1_1_chromosome_1a9cedcb4abe7b9e5f5cfd6cfea0cd949d" kindref="member">toString()</ref> as the fitness value would be computed if it was initial!</para><para><simplesect kind="return"><para>a positive double value representing the fitness of this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>, or -1 if a bulk fitness function is in use and has not yet assigned a fitness value to this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref></para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="46" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="46" bodyend="52"/>
        <references refid="classorg_1_1jgap_1_1_chromosome_1a905236819a9904ca3d096fa1c325aa1b" compoundref="_chromosome_8java" startline="102">org.jgap.Chromosome.m_fitnessValue</references>
        <references refid="classorg_1_1jgap_1_1_chromosome_for_testing_1abdcdd40ec54fed0a8fcd0cb1437cfc0e" compoundref="_chromosome_for_testing_8java" startline="20">org.jgap.ChromosomeForTesting.m_isCloned</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a7442bca45bb55a07fa7bc9a0dab795c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.ChromosomeForTesting.resetIsCloned</definition>
        <argsstring>()</argsstring>
        <name>resetIsCloned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="54" bodyend="56"/>
        <references refid="classorg_1_1jgap_1_1_chromosome_for_testing_1abdcdd40ec54fed0a8fcd0cb1437cfc0e" compoundref="_chromosome_for_testing_8java" startline="20">org.jgap.ChromosomeForTesting.m_isCloned</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1aa186eea2900ad70d989ae91f334a4c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_i_chromosome" kindref="compound">IChromosome</ref></type>
        <definition>IChromosome org.jgap.ChromosomeForTesting.randomInitialChromosome2</definition>
        <argsstring>()</argsstring>
        <name>randomInitialChromosome2</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="58" bodyend="112"/>
        <references refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa30c6d1e2e69ce1978d97c2540aa9ed4" compoundref="_chromosome_for_testing_8java" startline="23" endline="26">org.jgap.ChromosomeForTesting.ChromosomeForTesting</references>
        <references refid="classorg_1_1jgap_1_1_base_chromosome_1a104b33f29941ba6ba405889964fc2bf5" compoundref="_base_chromosome_8java" startline="150" endline="152">org.jgap.BaseChromosome.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1_fitness_function_1a5f1f23e6f8a0f9606aee5d52fac6a06b" compoundref="_fitness_function_8java" startline="40">org.jgap.FitnessFunction.NO_FITNESS_VALUE</references>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a89f5971800a63faa175bed4d141aa932" compoundref="_chromosome_for_testing_8java" startline="138" endline="141">org.jgap.ChromosomeForTesting.perform</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_genotype_test_1_1_chromosome_for_test2_1a1bdbbfe0c132aa8096c909a7bfd7f7b8" compoundref="_genotype_test_8java" startline="1350" endline="1353">org.jgap.GenotypeTest.ChromosomeForTest2.perform</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1acfcef639c3443fde7d324164050e3e19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>synchronized Object</type>
        <definition>synchronized Object org.jgap.ChromosomeForTesting.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="classorg_1_1jgap_1_1_chromosome_1a9f590d55a34d8b99c2a9a1b4aedd568b">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>. The returned instance can evolve independently of this instance. Note that, if possible, this method will first attempt to acquire a <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> instance from the active ChromosomePool (if any) and set its value appropriately before returning it. If that is not possible, then a new <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> instance will be constructed and its value set appropriately before returning.</para><para><simplesect kind="return"><para>copy of this <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>instead of CloneNotSupportedException</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000049"><xreftitle>Todo</xreftitle><xrefdescription><para>once output a warning: allele should be cloneable! </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="114" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="114" bodyend="124"/>
        <references refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa30c6d1e2e69ce1978d97c2540aa9ed4" compoundref="_chromosome_for_testing_8java" startline="23" endline="26">org.jgap.ChromosomeForTesting.ChromosomeForTesting</references>
        <references refid="classorg_1_1jgap_1_1_base_chromosome_1a104b33f29941ba6ba405889964fc2bf5" compoundref="_base_chromosome_8java" startline="150" endline="152">org.jgap.BaseChromosome.getConfiguration</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a05fb9ea1e9bcdb28eef5ab4ee7f22f94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.ChromosomeForTesting.isHandlerFor</definition>
        <argsstring>(Object a_obj, Class a_class)</argsstring>
        <name>isHandlerFor</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_handler_1a026d7a41944049a4f812ee0d1151d40e">isHandlerFor</reimplements>
        <param>
          <type>Object</type>
          <declname>a_obj</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines whether the handler is suitable for the given object instance or class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the object instance to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_class</parametername>
</parameternamelist>
<parameterdescription>
<para>the class to check, alternatively if no object instance is available (some handlers could need to get an object and would always return false if only a class is provided) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: handler suitable for given object or class</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="129" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_chromosome_for_testing_1a89f5971800a63faa175bed4d141aa932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.ChromosomeForTesting.perform</definition>
        <argsstring>(Object a_obj, Class a_class, Object a_params)</argsstring>
        <name>perform</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_handler_1a60199862000df04a4b2491d6d08f2f2c">perform</reimplements>
        <param>
          <type>Object</type>
          <declname>a_obj</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_class</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>a_params</declname>
        </param>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs a task for the given object or class. For some handlers, additional parameters are necessary, which could be provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the object instance to perform the handler task for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_class</parametername>
</parameternamelist>
<parameterdescription>
<para>the class to perform the handler task for, in case no object instance is available (some handlers could need to get an object and would always throw an exception if only a class is provided) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_params</parametername>
</parameternamelist>
<parameterdescription>
<para>optional parameters needed for the handler to perform its task </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>in case of any error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="138" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="138" bodyend="141"/>
        <references refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa186eea2900ad70d989ae91f334a4c9c" compoundref="_chromosome_for_testing_8java" startline="58" endline="112">org.jgap.ChromosomeForTesting.randomInitialChromosome2</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> class for testing purposes only.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10505">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="10504">
        <label>Serializable</label>
      </node>
      <node id="10501">
        <label>Comparable</label>
      </node>
      <node id="10498">
        <label>org.jgap.Chromosome</label>
        <link refid="classorg_1_1jgap_1_1_chromosome"/>
        <childnode refid="10499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10507">
        <label>org.jgap.IHandler</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_handler"/>
      </node>
      <node id="10497">
        <label>org.jgap.ChromosomeForTesting</label>
        <link refid="classorg_1_1jgap_1_1_chromosome_for_testing"/>
        <childnode refid="10498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10509">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="10502">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10503" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10499">
        <label>org.jgap.BaseChromosome</label>
        <link refid="classorg_1_1jgap_1_1_base_chromosome"/>
        <childnode refid="10500" relation="public-inheritance">
        </childnode>
        <childnode refid="10506" relation="public-inheritance">
        </childnode>
        <childnode refid="10508" relation="public-inheritance">
        </childnode>
        <childnode refid="10509" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10503">
        <label>Cloneable</label>
      </node>
      <node id="10508">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="10506">
        <label>org.jgap.IInitializer</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_initializer"/>
        <childnode refid="10507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10500">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="10501" relation="public-inheritance">
        </childnode>
        <childnode refid="10502" relation="public-inheritance">
        </childnode>
        <childnode refid="10504" relation="public-inheritance">
        </childnode>
        <childnode refid="10505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10510">
        <label>org.jgap.GenotypeTest.ChromosomeForTest2</label>
        <link refid="classorg_1_1jgap_1_1_genotype_test_1_1_chromosome_for_test2"/>
        <childnode refid="10497" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10519">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="10534">
        <label>List</label>
      </node>
      <node id="10533">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10530">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10518">
        <label>Serializable</label>
      </node>
      <node id="10515">
        <label>Comparable</label>
      </node>
      <node id="10512">
        <label>org.jgap.Chromosome</label>
        <link refid="classorg_1_1jgap_1_1_chromosome"/>
        <childnode refid="10513" relation="public-inheritance">
        </childnode>
        <childnode refid="10536" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
        <childnode refid="10534" relation="usage">
          <edgelabel>m_multiObjective</edgelabel>
        </childnode>
      </node>
      <node id="10521">
        <label>org.jgap.IHandler</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_handler"/>
      </node>
      <node id="10511">
        <label>org.jgap.ChromosomeForTesting</label>
        <link refid="classorg_1_1jgap_1_1_chromosome_for_testing"/>
        <childnode refid="10512" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10523">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="10516">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10517" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10529">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10513">
        <label>org.jgap.BaseChromosome</label>
        <link refid="classorg_1_1jgap_1_1_base_chromosome"/>
        <childnode refid="10514" relation="public-inheritance">
        </childnode>
        <childnode refid="10520" relation="public-inheritance">
        </childnode>
        <childnode refid="10522" relation="public-inheritance">
        </childnode>
        <childnode refid="10523" relation="public-inheritance">
        </childnode>
        <childnode refid="10524" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="10535" relation="usage">
          <edgelabel>m_genes</edgelabel>
        </childnode>
      </node>
      <node id="10536">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10531">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10517">
        <label>Cloneable</label>
      </node>
      <node id="10535">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="10515" relation="public-inheritance">
        </childnode>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10522">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="10527">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10532">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10520">
        <label>org.jgap.IInitializer</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_initializer"/>
        <childnode refid="10521" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10526">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10514">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="10515" relation="public-inheritance">
        </childnode>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10524">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="10525" relation="public-inheritance">
        </childnode>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
        <childnode refid="10515" relation="public-inheritance">
        </childnode>
        <childnode refid="10526" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="10527" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="10528" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="10529" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="10514" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="10530" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="10531" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10532" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="10533" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10534" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="10528">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="10525">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" line="19" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/ChromosomeForTesting.java" bodystart="18" bodyend="142"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a94e1af5ba804061833ed3883d42f9441" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>BaseChromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1aea063618aebe23aa8579baf20063db24" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>calcFitnessValue</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a74df7a8e7986a3ed2a18c9715fae7b90" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>checkGenes</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a4efa73cb7ff2c5dcd0e16f1d7287dc78" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>CHROM_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a14c96eb2e38fe28b05526633e4677ec6" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a62510703fe45c4a8c453801eaa148bb7" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a7290755db8269b79ebdb00b0cd0a9935" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a6e5e72f40a4e2f2b7b72ce6678235f40" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a2872ac725d9182b66352057850f89176" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a4f6e9e1bf122719fe420c3bc034fb4b3" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a9156d92adcdf9c918bb37c771805b497" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ab836c132fb64477cad4d0a2e3b997d6f" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>Chromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa30c6d1e2e69ce1978d97c2540aa9ed4" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>ChromosomeForTesting</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a505b60c5fe34d7540a878c67d7a221f1" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>ChromosomeForTesting</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a3c91e8c54303339456cb83662d7c1c44" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>ChromosomeForTesting</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ab608acb21ff95b3fe2ff9667a207fd72" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1acfcef639c3443fde7d324164050e3e19" prot="public" virt="virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>clone</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1adf4d7c5113d0c70283ffb2323b7e0cda" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>cloneObject</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ab77c73b07816a5f3b99a3459fbe0208c" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>cloneObject</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a2be0507944e2ca98bef8372402b33e13" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a61d504512312fdc761af87fe0f3ca36d" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>createGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a0ccfa10730437df1a23322886a6949e7" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a2c339c9c70184d1a911878e1be39dc82" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ac75a21fd23483ff275422e0791289ac8" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a5cb3ac5d20e1fccb7eacdd0bb38bd650" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>GENE_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a05f3c0c0caa0e1676345b2303c842be0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>GENE_DELIMITER_CLOSING</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a52428dfc927129c8960a9d9ca3864346" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>GENE_DELIMITER_HEADING</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1af987f6a74486145a139985297c18ae80" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getAge</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1aae49bf34668621de1d691cd759ff50b9" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1aa35172e2b9535ace3b8fa31c1b2ef2fe" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a09badc9a3c7e94041057df27c3e4c5c6" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getComputedTimes</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a104b33f29941ba6ba405889964fc2bf5" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a6c56caed7a052c678daa6af668cad388" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1af25dacbcb89fed18007d55f1fde951b4" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getFitnessValue</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ad0c53486ddb583ddbee2bede065ae068" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getFitnessValueDirectly</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1aef0e40ec9b5956389365f5c3144ab207" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a1f9e4971a34546a0d77fa24061e753a0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getGenes</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a124394f7e5c4651e59dd1475e0d2c3b0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getGenesPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a2bef76845dd6e92c09037dae72e7ca15" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getGenesPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a6129d035292cd1d271b5ef5dbc3e3161" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getMultiObjectives</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1ab4a4ad55945458548488f87940aa852e" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a8cf998c46fddd9ee2f8bfcd2a7b6bffa" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a2d23cfd243723be4d5eb775532e36a6e" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a9f3e1fc14f84b25f09386a2dd1fc69d9" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a6dcae8b12cad267f6f91431281869e02" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>increaseAge</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a89c0c0959ca4af0152520a2d6c512edd" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>increaseOperatedOn</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1aa6b7f021f64700b1926d5819f5fde5aa" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>initFromGene</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a284d75bb2919718325b376e2c91870d0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a05fb9ea1e9bcdb28eef5ab4ee7f22f94" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>isHandlerFor</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a61d28f792a1389214f06a88dba42260d" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>isSelectedForNextGeneration</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a905236819a9904ca3d096fa1c325aa1b" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>m_fitnessValue</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1abdcdd40ec54fed0a8fcd0cb1437cfc0e" prot="private" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>m_isCloned</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a86349c8e5dbe93c54580a283f70ea2d0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>operatedOn</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a89f5971800a63faa175bed4d141aa932" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>perform</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a6b6fb5c7c5b532813a4661de5dbd9ab3" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>randomInitialChromosome</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1aa186eea2900ad70d989ae91f334a4c9c" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>randomInitialChromosome2</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a7d4483ef679d0e1eb335256b72ab0731" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>resetAge</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1ad62fc0d30ee4773a96b91fb1a7c5e4cc" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>resetComputedTimes</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_for_testing_1a7442bca45bb55a07fa7bc9a0dab795c9" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>resetIsCloned</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a93a541bdb76c316543a201e8718dd29c" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>resetOperatedOn</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_chromosome_1ae93666d5923e449f45656ad5fed52f84" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>S_ALLELES</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_chromosome_1a03218ba49e2c53108005cd6290252284" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_chromosome_1a34c8c0933688a10837692d1c0024f663" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>S_FITNESS_VALUE</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_chromosome_1a50371491243a21f494112bf66d2e1a26" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>S_SIZE</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1aaf9e8ca50d99c27775ce186613320624" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setAge</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a03e0d17b0df1765a442f76645aa4e5b8" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1aa82fc94cbbfeb5b6b5b89a97f9089e9e" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1ae99251567d68bd079e8c4dfaf15dc513" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a3715ce380f59756a954566a315514ed0" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setFitnessValue</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a4fb0934f7919084f0b5e9ca132e6aaa6" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setFitnessValueDirectly</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a8177b71d092d3ce87909d827ec91492a" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setGene</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a96692e7942a035e9b661360ca758c7cb" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setGenes</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a1249d045c9830c9dc76e14e4dbe20f5f" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setIsSelectedForNextGeneration</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1aaeae2078063f38074853b06d5c913fa6" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setMultiObjectives</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a06156bb0f2c8512ca6a7f7f0fee305b9" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a30276dc8afb0bd632c288bf7d2e18b55" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a78c8ae0471973855e19a9b79496f2bec" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1_base_chromosome_1a9237b2c8d40b9d466d5f68792ba04036" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>split</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1a9cedcb4abe7b9e5f5cfd6cfea0cd949d" prot="public" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>toString</name></member>
      <member refid="classorg_1_1jgap_1_1_chromosome_1af472c1bacfaf6e5e5c1d5ac3af75ddef" prot="protected" virt="non-virtual"><scope>org::jgap::ChromosomeForTesting</scope><name>verify</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
