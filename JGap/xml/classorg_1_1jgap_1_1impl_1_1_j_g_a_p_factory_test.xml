<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test" kind="class" prot="public">
    <compoundname>org::jgap::impl::JGAPFactoryTest</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" prot="public" virt="non-virtual">org.jgap.JGAPTestCase</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1af0690b96d231254944716670742b2148" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.JGAPFactoryTest.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.5 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a26cc663e6d4492916fcf04545f1ffadf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Test</type>
        <definition>static Test org.jgap.impl.JGAPFactoryTest.suite</definition>
        <argsstring>()</argsstring>
        <name>suite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="27" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a0b43110a98894a8a114fb7a321b9d7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testConstruct_0</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="36" bodyend="39"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1ab608008d02aeafd3421c3ccc0c760717" compoundref="_j_g_a_p_factory_8java" startline="335" endline="337">org.jgap.impl.JGAPFactory.isUseCaching</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ad94877b28040b0e3e8279df48c85b700" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testConstruct_1</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="45" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="45" bodyend="48"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1ab608008d02aeafd3421c3ccc0c760717" compoundref="_j_g_a_p_factory_8java" startline="335" endline="337">org.jgap.impl.JGAPFactory.isUseCaching</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a42a5fd254d31f0d5e6ba1e31aec5895b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testSetParameters_0</definition>
        <argsstring>()</argsstring>
        <name>testSetParameters_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="54" bodyend="61"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a148436410282e80441a93b5d4a5ece03" compoundref="_j_g_a_p_factory_8java" startline="90" endline="92">org.jgap.impl.JGAPFactory.getParameters</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ab8e459d44d6361e750815ffc733fdde2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testRegisterCloneHandler_0</definition>
        <argsstring>()</argsstring>
        <name>testRegisterCloneHandler_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="67" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="67" bodyend="79"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a279e020de99aaa211b21b17b271df845" compoundref="_j_g_a_p_factory_8java" startline="124" endline="126">org.jgap.impl.JGAPFactory.removeCloneHandler</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ac4823bf378c8e5c92fe253530aa39b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testRegisterCompareToHandler_0</definition>
        <argsstring>()</argsstring>
        <name>testRegisterCompareToHandler_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="85" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="85" bodyend="97"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a27ca41d599ab25e4fb233388f60f829c" compoundref="_j_g_a_p_factory_8java" startline="250" endline="252">org.jgap.impl.JGAPFactory.removeCompareToHandler</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a31aa563babb4ed4730818ac7c0bb4037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testRegisterInitializer_0</definition>
        <argsstring>()</argsstring>
        <name>testRegisterInitializer_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="103" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="103" bodyend="115"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a9eb22c3e67b7f1e9b19e045833097850" compoundref="_j_g_a_p_factory_8java" startline="173" endline="175">org.jgap.impl.JGAPFactory.removeInitializer</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a0bccdce9e67d1ed2dc9b2c0d9617ed35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testCreateRandomGenerator_0</definition>
        <argsstring>()</argsstring>
        <name>testCreateRandomGenerator_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="121" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="121" bodyend="125"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1aa19abf4aa447b599442aff5205ea54fb" compoundref="_j_g_a_p_factory_8java" startline="94" endline="96">org.jgap.impl.JGAPFactory.createRandomGenerator</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a8c33e30ee79bdce2af3de544aebfe9bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_0</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Without caching.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="133" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="133" bodyend="138"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a1f8e8401efb492f80a816f1ab38e974a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_1</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>With caching.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="146" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="146" bodyend="154"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1acef22cf9e2443831bc794df1f4fdc5a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_2</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type with no handler registered, caching active.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="162" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="162" bodyend="168"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a9b50283dd90dd15de547d69308136e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_3</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type with no handler registered, no caching</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="176" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="176" bodyend="182"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a052f36173ac9900b50cdc6e892541318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_4</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Null type, no caching.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="190" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="190" bodyend="195"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ad6df7fd2d5c8cc2f0ca297c2a89c4396" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_5</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Null type, with caching.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="203" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="203" bodyend="208"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a16f86a2f6bec85e54fc7f410fb352d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_6</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_6</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request for an unsupported object instance.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="218" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="218" bodyend="225"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a9d0bd03cb5160f3ad8d1c1c0eaa2473a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testGetCloneHandlerFor_7</definition>
        <argsstring>()</argsstring>
        <name>testGetCloneHandlerFor_7</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request for a supported object instance.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="235" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="235" bodyend="242"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_1a17928994201f3445564d95de57455eb4" compoundref="_j_g_a_p_factory_8java" startline="139" endline="145">org.jgap.impl.JGAPFactory.getCloneHandlerFor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1add9663f08a1cd8a8536dc1044668fbfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testIsSerializable_0</definition>
        <argsstring>()</argsstring>
        <name>testIsSerializable_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures <ref refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory" kindref="compound">JGAPFactory</ref> is implementing Serializable.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="252" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="252" bodyend="256"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" compoundref="_j_g_a_p_test_case_8java" startline="140" endline="142">org.jgap.JGAPTestCase.isSerializable</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1af98823f52d9291772561040d57f35853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.JGAPFactoryTest.testDoSerialize_0</definition>
        <argsstring>()</argsstring>
        <name>testDoSerialize_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures that <ref refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory" kindref="compound">JGAPFactory</ref> and all objects contained implement Serializable correctly.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="267" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="267" bodyend="272"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" compoundref="_j_g_a_p_test_case_8java" startline="153" endline="168">org.jgap.JGAPTestCase.doSerialize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests the <ref refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory" kindref="compound">JGAPFactory</ref> class.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="15042">
        <label>org.jgap.impl.JGAPFactoryTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test"/>
        <childnode refid="15043" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15043">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="15044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15044">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15059">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="15064">
        <label>List</label>
      </node>
      <node id="15063">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
        <childnode refid="15051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15045">
        <label>org.jgap.impl.JGAPFactoryTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test"/>
        <childnode refid="15046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15060">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15050">
        <label>Serializable</label>
      </node>
      <node id="15053">
        <label>Comparable</label>
      </node>
      <node id="15065">
        <label>PrivateAccessor</label>
      </node>
      <node id="15046">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="15047" relation="public-inheritance">
        </childnode>
        <childnode refid="15048" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
        <childnode refid="15065" relation="usage">
          <edgelabel>privateAccessor</edgelabel>
        </childnode>
      </node>
      <node id="15047">
        <label>TestCase</label>
      </node>
      <node id="15051">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="15052" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15057">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15061">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
        <childnode refid="15051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15052">
        <label>Cloneable</label>
      </node>
      <node id="15055">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15062">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15054">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="15051" relation="public-inheritance">
        </childnode>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
        <childnode refid="15053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15058">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="15053" relation="public-inheritance">
        </childnode>
        <childnode refid="15051" relation="public-inheritance">
        </childnode>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
        <childnode refid="15059" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15048">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="15049" relation="public-inheritance">
        </childnode>
        <childnode refid="15050" relation="public-inheritance">
        </childnode>
        <childnode refid="15051" relation="public-inheritance">
        </childnode>
        <childnode refid="15053" relation="public-inheritance">
        </childnode>
        <childnode refid="15054" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="15055" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="15056" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="15057" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="15058" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="15060" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="15061" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="15062" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="15063" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="15064" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="15056">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="15049">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/JGAPFactoryTest.java" bodystart="22" bodyend="274"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>assertEquals</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a3ccc244fd7637efacc27641a3b4bac99" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>assertEqualsMap</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a0f7793db6d254be9753ed623ae09653b" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2b9df927cb9282d81abfd7daf6407416" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>conf</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1af0690b96d231254944716670742b2148" prot="private" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>doSerialize</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a1068930066ebd33ed69ccfe34a7f78ed" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>getNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a4f484987731cdc5276ee2575a165fcf3" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>isChromosomesEqual</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>isSerializable</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1adf378e0444b264c507f8cc459d8a26ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a472f2e2903439a8a484ba5ff0639fa02" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>privateAccessor</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a77399f44cc0bd6e5ac3832e0ad2b2f7e" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>setNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a7278f46bafa651d39a1d301f6edacece" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>setUp</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a26cc663e6d4492916fcf04545f1ffadf" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>suite</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a0b43110a98894a8a114fb7a321b9d7d2" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testConstruct_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ad94877b28040b0e3e8279df48c85b700" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testConstruct_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a0bccdce9e67d1ed2dc9b2c0d9617ed35" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testCreateRandomGenerator_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1af98823f52d9291772561040d57f35853" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testDoSerialize_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a8c33e30ee79bdce2af3de544aebfe9bf" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a1f8e8401efb492f80a816f1ab38e974a" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1acef22cf9e2443831bc794df1f4fdc5a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a9b50283dd90dd15de547d69308136e37" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_3</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a052f36173ac9900b50cdc6e892541318" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_4</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ad6df7fd2d5c8cc2f0ca297c2a89c4396" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_5</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a16f86a2f6bec85e54fc7f410fb352d26" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_6</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a9d0bd03cb5160f3ad8d1c1c0eaa2473a" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testGetCloneHandlerFor_7</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1add9663f08a1cd8a8536dc1044668fbfd" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testIsSerializable_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ab8e459d44d6361e750815ffc733fdde2" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testRegisterCloneHandler_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1ac4823bf378c8e5c92fe253530aa39b8c" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testRegisterCompareToHandler_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a31aa563babb4ed4730818ac7c0bb4037" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testRegisterInitializer_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_j_g_a_p_factory_test_1a42a5fd254d31f0d5e6ba1e31aec5895b" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>testSetParameters_0</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a653121052ecd3600acbcabf78dc1e193" prot="public" virt="non-virtual"><scope>org::jgap::impl::JGAPFactoryTest</scope><name>uniqueChromosomes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
