<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1math_1_1cmd_1_1_add_operator" kind="class" prot="public">
    <compoundname>examples::math::cmd::AddOperator</compoundname>
    <basecompoundref refid="classexamples_1_1math_1_1cmd_1_1_math_operator" prot="public" virt="non-virtual">examples.math.cmd.MathOperator</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ICloneable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1a99850a210d2150a17fe5fd32e4bbc286" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.math.cmd.AddOperator.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.1 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1ae395d20680a564b727ec445affd1a5a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.math.cmd.AddOperator.AddOperator</definition>
        <argsstring>()</argsstring>
        <name>AddOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="26" bodyend="28"/>
        <referencedby refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1ad929bb2675ec30f20015f51c82f92569" compoundref="_add_operator_8java" startline="42" endline="46">examples.math.cmd.AddOperator.clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1a4b61ad1ecfe81d39c6bf6205bacd9e21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>examples.math.cmd.AddOperator.AddOperator</definition>
        <argsstring>(Operand theLeft, Operand theRight)</argsstring>
        <name>AddOperator</name>
        <param>
          <type><ref refid="interfaceexamples_1_1math_1_1cmd_1_1_operand" kindref="compound">Operand</ref></type>
          <declname>theLeft</declname>
        </param>
        <param>
          <type><ref refid="interfaceexamples_1_1math_1_1cmd_1_1_operand" kindref="compound">Operand</ref></type>
          <declname>theRight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="30" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1a2f5f91fe8ca269a76e26554ffb4795ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.math.cmd.AddOperator.calcuate</definition>
        <argsstring>()</argsstring>
        <name>calcuate</name>
        <reimplements refid="interfaceexamples_1_1math_1_1cmd_1_1_operator_1a2498fd5b2a244bf2e63bc2613dc49e96">calcuate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="34" bodyend="36"/>
        <references refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a82444ae785a3f0ac0097130acd7d432c" compoundref="_math_operator_8java" startline="43" endline="45">examples.math.cmd.MathOperator.getLeftOperand</references>
        <references refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1af9f13db06baf29ab594a4fd6df0efea9" compoundref="_math_operator_8java" startline="47" endline="49">examples.math.cmd.MathOperator.getRightOperand</references>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1a1b760c381dd1a76188bbb61e0a92b0bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void examples.math.cmd.AddOperator.accept</definition>
        <argsstring>(MathVisitor theVisitor)</argsstring>
        <name>accept</name>
        <reimplements refid="interfaceexamples_1_1math_1_1cmd_1_1_operand_1aaadf6877856130d245dbb5a3a6993ef6">accept</reimplements>
        <param>
          <type><ref refid="interfaceexamples_1_1math_1_1_math_visitor" kindref="compound">MathVisitor</ref></type>
          <declname>theVisitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1math_1_1cmd_1_1_add_operator_1ad929bb2675ec30f20015f51c82f92569" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Object</type>
        <definition>Object examples.math.cmd.AddOperator.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a06b476ba62c4b892c2689943a8beed81">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="42" bodyend="46"/>
        <references refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1ae395d20680a564b727ec445affd1a5a9" compoundref="_add_operator_8java" startline="26" endline="28">examples.math.cmd.AddOperator.AddOperator</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The add operation.</para><para><simplesect kind="author"><para>Michael Grove </para></simplesect>
<simplesect kind="since"><para>3.4.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9402">
        <label>examples.math.cmd.MathOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_math_operator"/>
        <childnode refid="9403" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9404">
        <label>examples.math.cmd.Operand</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operand"/>
        <childnode refid="9405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9401">
        <label>examples.math.cmd.AddOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_add_operator"/>
        <childnode refid="9402" relation="public-inheritance">
        </childnode>
        <childnode refid="9405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9403">
        <label>examples.math.cmd.Operator</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operator"/>
        <childnode refid="9404" relation="public-inheritance">
        </childnode>
        <childnode refid="9405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9405">
        <label>ICloneable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9407">
        <label>examples.math.cmd.MathOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_math_operator"/>
        <childnode refid="9408" relation="public-inheritance">
        </childnode>
        <childnode refid="9409" relation="usage">
          <edgelabel>mLeftOperand</edgelabel>
          <edgelabel>mRightOperand</edgelabel>
        </childnode>
      </node>
      <node id="9409">
        <label>examples.math.cmd.Operand</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operand"/>
        <childnode refid="9410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9406">
        <label>examples.math.cmd.AddOperator</label>
        <link refid="classexamples_1_1math_1_1cmd_1_1_add_operator"/>
        <childnode refid="9407" relation="public-inheritance">
        </childnode>
        <childnode refid="9410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9408">
        <label>examples.math.cmd.Operator</label>
        <link refid="interfaceexamples_1_1math_1_1cmd_1_1_operator"/>
        <childnode refid="9409" relation="public-inheritance">
        </childnode>
        <childnode refid="9410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9410">
        <label>ICloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" line="22" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/math/cmd/AddOperator.java" bodystart="21" bodyend="47"/>
    <listofallmembers>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1a1b760c381dd1a76188bbb61e0a92b0bc" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>accept</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1ae395d20680a564b727ec445affd1a5a9" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>AddOperator</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1a4b61ad1ecfe81d39c6bf6205bacd9e21" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>AddOperator</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1a2f5f91fe8ca269a76e26554ffb4795ae" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>calcuate</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1ad929bb2675ec30f20015f51c82f92569" prot="public" virt="virtual"><scope>examples::math::cmd::AddOperator</scope><name>clone</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_add_operator_1a99850a210d2150a17fe5fd32e4bbc286" prot="private" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a82444ae785a3f0ac0097130acd7d432c" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>getLeftOperand</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1af9f13db06baf29ab594a4fd6df0efea9" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>getRightOperand</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a907ee142e11f8eea9c0d57b91c1fb92a" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>MathOperator</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a9ee6ed8525fbb89310d53012fadad1a3" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>MathOperator</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a4f04b5ed11a6bb29ca51609c2b2f2f8a" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>setLeftOperand</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a54cee6904f650c9e6fde5fc8aa20daad" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>setRightOperand</name></member>
      <member refid="classexamples_1_1math_1_1cmd_1_1_math_operator_1a94d1b7d6b6d29c8cad4518a44011a493" prot="public" virt="non-virtual"><scope>examples::math::cmd::AddOperator</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
