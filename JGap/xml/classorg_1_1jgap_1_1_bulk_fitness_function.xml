<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1_bulk_fitness_function" kind="class" prot="public" abstract="yes">
    <compoundname>org::jgap::BulkFitnessFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable" prot="public" virt="non-virtual">org.jgap.util.ICloneable</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_bulk_fitness_offset_remover" prot="public" virt="non-virtual">org.jgap.impl.BulkFitnessOffsetRemover</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1fitness_1_1_rosenbrocks_bulk_negative_function" prot="public" virt="non-virtual">org.jgap.impl.fitness.RosenbrocksBulkNegativeFunction</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1_test_bulk_fitness_function" prot="public" virt="non-virtual">org.jgap.TestBulkFitnessFunction</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1_test_bulk_fitness_function2" prot="public" virt="non-virtual">org.jgap.TestBulkFitnessFunction2</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_bulk_fitness_function_1a2cf877b42f4607be78def1b50cb0008f" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.BulkFitnessFunction.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.9 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1_bulk_fitness_function_1a2685b837c809586e7a029e670bc1cd42" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void org.jgap.BulkFitnessFunction.evaluate</definition>
        <argsstring>(Population a_chromosomes)</argsstring>
        <name>evaluate</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1fitness_1_1_rosenbrocks_bulk_negative_function_1ad5b5b0c55e81266cf47abbed3069f470">evaluate</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref></type>
          <declname>a_chromosomes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates and sets the fitness values on each of the given Chromosomes via their setFitnessValue() method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_chromosomes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of Chromosomes for which the fitness values must be computed and set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 (prior versions used other input type) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_bulk_fitness_function_1a3789d9f9a8c4245f3f970c172241b1da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.BulkFitnessFunction.clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable_1aa7e7d62077e6428ad7904932b1b4f7d5">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override in your implementation if necessary.</para><para><simplesect kind="return"><para>deep clone of the current instance</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" line="56" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" bodystart="56" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Bulk fitness functions are used to determine how optimal a group of solutions are relative to each other. Bulk fitness functions can be useful (vs. normal fitness functions) when fitness of a particular solution cannot be easily computed in isolation, but instead is dependent upon the fitness of its fellow solutions that are also under consideration. This abstract class should be extended and the evaluateChromosomes() method implemented to evaluate each of the Chromosomes given in an array and set their fitness values prior to returning.</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10236">
        <label>org.jgap.TestBulkFitnessFunction2</label>
        <childnode refid="10229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10230">
        <label>Serializable</label>
      </node>
      <node id="10234">
        <label>org.jgap.impl.fitness.RosenbrocksBulkNegativeFunction</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1fitness_1_1_rosenbrocks_bulk_negative_function"/>
        <childnode refid="10229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10231">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10229">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="10230" relation="public-inheritance">
        </childnode>
        <childnode refid="10231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10232">
        <label>Cloneable</label>
      </node>
      <node id="10233">
        <label>org.jgap.impl.BulkFitnessOffsetRemover</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_bulk_fitness_offset_remover"/>
        <childnode refid="10229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10235">
        <label>org.jgap.TestBulkFitnessFunction</label>
        <childnode refid="10229" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10238">
        <label>Serializable</label>
      </node>
      <node id="10239">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10237">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="10238" relation="public-inheritance">
        </childnode>
        <childnode refid="10239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10240">
        <label>Cloneable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BulkFitnessFunction.java" bodystart="30" bodyend="63"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_bulk_fitness_function_1a3789d9f9a8c4245f3f970c172241b1da" prot="public" virt="non-virtual"><scope>org::jgap::BulkFitnessFunction</scope><name>clone</name></member>
      <member refid="classorg_1_1jgap_1_1_bulk_fitness_function_1a2cf877b42f4607be78def1b50cb0008f" prot="private" virt="non-virtual"><scope>org::jgap::BulkFitnessFunction</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_bulk_fitness_function_1a2685b837c809586e7a029e670bc1cd42" prot="public" virt="pure-virtual"><scope>org::jgap::BulkFitnessFunction</scope><name>evaluate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
