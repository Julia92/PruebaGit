<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator" kind="interface" prot="public">
    <compoundname>org::jgap::supergenes::SupergeneValidator</compoundname>
    <derivedcompoundref refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene" prot="public" virt="non-virtual">org.jgap.supergenes.AbstractSupergene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1supergenes_1_1_validator" prot="public" virt="non-virtual">org.jgap.supergenes.Validator</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a5b799d0019e7300bd56fe1a2125384ad" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.supergenes.SupergeneValidator.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.3 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1ac05f4997c7b03d61a3c5365baeccef91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.supergenes.SupergeneValidator.isValid</definition>
        <argsstring>(Gene[] a_genes, Supergene a_for_supergene)</argsstring>
        <name>isValid</name>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_validator_1a8f5b2697943140ed0647bbcda7911939">isValid</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]</type>
          <declname>a_genes</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene" kindref="compound">Supergene</ref></type>
          <declname>a_for_supergene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this gene combination is valid for the given supergene </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a9ef86d28cc29f90d7c451460a4a818fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.supergenes.SupergeneValidator.getPersistent</definition>
        <argsstring>()</argsstring>
        <name>getPersistent</name>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_validator_1af65e5cad1eef911e6a5b97e4fbeaf130">getPersistent</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1aa7990463e784192581d7d7918cd0f1b1">getPersistent</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>persistent string representation (if needed) of this validator. The method name is different allowing the same class to implement both <ref refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene" kindref="compound">Supergene</ref> and supergeneValidator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a8718b55ab8474e3b5df097ef152a93f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.supergenes.SupergeneValidator.setFromPersistent</definition>
        <argsstring>(String a_string)</argsstring>
        <name>setFromPersistent</name>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a70a5435dbf92b886ab7d5bbcd2d79d09">setFromPersistent</reimplementedby>
        <param>
          <type>String</type>
          <declname>a_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a persistend string representation (if needed) for this validator. The method name is different allowing the same class to implement both <ref refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene" kindref="compound">Supergene</ref> and supergeneValidator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class, deciding, if the supergene allele combination is valid. Some classes Supergenes (like abstractSupergene) also implement supergeneValidator, deciding themselfs about the gene validity. In request to returs a validator, they return <emphasis>this</emphasis>. Other classes may require always to set the external validator.</para><para><simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18120">
        <label>org.jgap.supergenes.SupergeneInternalParserTest.TestClass</label>
        <childnode refid="18118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18119">
        <label>org.jgap.supergenes.InstantiableSupergeneForTesting</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_instantiable_supergene_for_testing"/>
        <childnode refid="18118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18117">
        <label>org.jgap.supergenes.SupergeneValidator</label>
        <link refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator"/>
      </node>
      <node id="18121">
        <label>org.jgap.supergenes.SupergenePersistentRepresentationTest.TestClass</label>
        <childnode refid="18118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18123">
        <label>org.jgap.supergenes.TestValidator</label>
        <childnode refid="18122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18122">
        <label>org.jgap.supergenes.Validator</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_validator"/>
        <childnode refid="18117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18118">
        <label>org.jgap.supergenes.AbstractSupergene</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene"/>
        <childnode refid="18117" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/supergenes/SupergeneValidator.java" bodystart="24" bodyend="47"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a5b799d0019e7300bd56fe1a2125384ad" prot="public" virt="non-virtual"><scope>org::jgap::supergenes::SupergeneValidator</scope><name>CVS_REVISION</name></member>
      <member refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a9ef86d28cc29f90d7c451460a4a818fe" prot="public" virt="non-virtual"><scope>org::jgap::supergenes::SupergeneValidator</scope><name>getPersistent</name></member>
      <member refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1ac05f4997c7b03d61a3c5365baeccef91" prot="public" virt="non-virtual"><scope>org::jgap::supergenes::SupergeneValidator</scope><name>isValid</name></member>
      <member refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene_validator_1a8718b55ab8474e3b5df097ef152a93f0" prot="public" virt="non-virtual"><scope>org::jgap::supergenes::SupergeneValidator</scope><name>setFromPersistent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
