<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1simple_boolean_1_1_max_function" kind="class" prot="public">
    <compoundname>examples::simpleBoolean::MaxFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">FitnessFunction</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1simple_boolean_1_1_max_function_1a648bd5b1591f4a6fbf1dea0577de220d" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.simpleBoolean.MaxFunction.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.6 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1simple_boolean_1_1_max_function_1a9645cc778cdec51bfb1e872a9dd7401b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.simpleBoolean.MaxFunction.evaluate</definition>
        <argsstring>(IChromosome a_subject)</argsstring>
        <name>evaluate</name>
        <param>
          <type>IChromosome</type>
          <declname>a_subject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This example implementation calculates the fitness value of Chromosomes using BooleanAllele implementations. It simply returns a fitness value equal to the numeric binary value of the bits. In other words, it optimizes the numeric value of the genes interpreted as bits. It should be noted that, for clarity, this function literally returns the binary value of the Chromosome&apos;s genes interpreted as bits. However, it would be better to return the value raised to a fixed power to exaggerate the difference between the higher values. For example, the difference between 254 and 255 is only about .04%, which isn&apos;t much incentive for the selector to choose 255 over 254. However, if you square the values, you then get 64516 and 65025, which is a difference of 0.8% <ndash/> twice as much and, therefore, twice the incentive to select the higher value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_subject</parametername>
</parameternamelist>
<parameterdescription>
<para>the Chromosome to be evaluated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>defect rate of our problem</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" line="49" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" bodystart="49" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Fitness function for our example. See evaluate(...) method for details.</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="15875">
        <label>FitnessFunction</label>
      </node>
      <node id="15874">
        <label>examples.simpleBoolean.MaxFunction</label>
        <link refid="classexamples_1_1simple_boolean_1_1_max_function"/>
        <childnode refid="15875" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15877">
        <label>FitnessFunction</label>
      </node>
      <node id="15876">
        <label>examples.simpleBoolean.MaxFunction</label>
        <link refid="classexamples_1_1simple_boolean_1_1_max_function"/>
        <childnode refid="15877" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/simpleBoolean/MaxFunction.java" bodystart="22" bodyend="62"/>
    <listofallmembers>
      <member refid="classexamples_1_1simple_boolean_1_1_max_function_1a648bd5b1591f4a6fbf1dea0577de220d" prot="private" virt="non-virtual"><scope>examples::simpleBoolean::MaxFunction</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1simple_boolean_1_1_max_function_1a9645cc778cdec51bfb1e872a9dd7401b" prot="public" virt="non-virtual"><scope>examples::simpleBoolean::MaxFunction</scope><name>evaluate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
