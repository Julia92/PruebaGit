<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_swapping_mutation_operator_test_8java" kind="file">
    <compoundname>SwappingMutationOperatorTest.java</compoundname>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test" prot="public">org::jgap::impl::SwappingMutationOperatorTest</innerclass>
    <innernamespace refid="namespaceorg_1_1jgap_1_1impl">org::jgap::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.jgap.impl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">org.jgap.JGAPTestCase</ref>.*;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.*;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test" kindref="compound">SwappingMutationOperatorTest</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" kindref="compound">JGAPTestCase</ref><sp/>{</highlight></codeline>
<codeline lineno="28" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a9872aab6676e6549c1325276b748949a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a9872aab6676e6549c1325276b748949a" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.19<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adc70fe2374c6f34f3999d82d54381163" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adc70fe2374c6f34f3999d82d54381163" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adc70fe2374c6f34f3999d82d54381163" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite(<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test" kindref="compound">SwappingMutationOperatorTest</ref>.class);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adc70fe2374c6f34f3999d82d54381163" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ae8e965c964835adea93e874336ab7b0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ae8e965c964835adea93e874336ab7b0e" kindref="member">setUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>super.setUp();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Configuration.reset();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1afb9b6187d59991a85e0a69b6140ffa98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1afb9b6187d59991a85e0a69b6140ffa98" kindref="member">testConstruct_0</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>234);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(234,<sp/>mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" kindref="member">getMutationRate</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNull(mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" kindref="member">getMutationRateCalc</ref>());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ab3d78dde7bca843fe6a9fd98aae50c03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ab3d78dde7bca843fe6a9fd98aae50c03" kindref="member">testConstruct_1</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" kindref="member">getMutationRate</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNotNull(mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" kindref="member">getMutationRateCalc</ref>());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ae273099634232cdbebc176638506f454" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ae273099634232cdbebc176638506f454" kindref="member">testConstruct_2</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>null);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" kindref="member">getMutationRate</ref>());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>assertNull(mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" kindref="member">getMutationRateCalc</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a7b6896b11e97d2e2fb3f62d590bdd2c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a7b6896b11e97d2e2fb3f62d590bdd2c2" kindref="member">testConstruct_3</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_i_universal_rate_calculator" kindref="compound">IUniversalRateCalculator</ref><sp/>calc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_mutation_rate_calculator" kindref="compound">DefaultMutationRateCalculator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>calc);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4c2e6670fc376734386d37e918071410" kindref="member">getMutationRate</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(calc,<sp/>mutOp.<ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator_1a4e61256bfd2fd9db20cb7839970ce2b1" kindref="member">getMutationRateCalc</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a8c2e1d7bda80f00ced99f505343244cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a8c2e1d7bda80f00ced99f505343244cc" kindref="member">testConstruct_4</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Genotype.setStaticConfiguration(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assertSame(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref>,<sp/>op.getConfiguration());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a6a078850197b8d061375dfac791394ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a6a078850197b8d061375dfac791394ef" kindref="member">testOperate_0</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_mutation_rate_calculator" kindref="compound">DefaultMutationRateCalculator</ref>(conf));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>candChroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>candChroms);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(candChroms.size(),<sp/>population.length);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>candChroms.clear();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>gen<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>gen.setNextInt(9);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(gen);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>c1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref>(conf),<sp/>9);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(c1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.addNaturalSelector(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_best_chromosomes_selector" kindref="compound">BestChromosomesSelector</ref>(conf),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(5);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c1.getGenes().length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c1.getGene(i).setAllele(Boolean.TRUE);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>c2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf),<sp/>4);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c2.getGenes().length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2.getGene(i).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(27));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1,<sp/>c2};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>candChroms);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(candChroms.size(),<sp/>population.length);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(c1,<sp/>candChroms.get(0));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(candChroms.get(0)<sp/>==<sp/>c1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(c2,<sp/>candChroms.get(1));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(candChroms.get(1)<sp/>==<sp/>c2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a92fbca72f89b7df34a3bb3d2047f10ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a92fbca72f89b7df34a3bb3d2047f10ee" kindref="member">testOperate_1</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>candChroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" kindref="member">conf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_stock_random_generator" kindref="compound">StockRandomGenerator</ref>());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf,<sp/>null);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref>(conf),<sp/>9),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf),<sp/>4))};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population),<sp/>candChroms);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a606d6abc71afa7877799aae21d9a9fa7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a606d6abc71afa7877799aae21d9a9fa7" kindref="member">testOperate_2</ref>()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>candChroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref>(conf),<sp/>9),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf),<sp/>4))};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutOp.operate(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(null,<sp/>population),<sp/>candChroms);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fail();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>nex)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a5b515c3baa3ad241fd89646060bc293f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a5b515c3baa3ad241fd89646060bc293f" kindref="member">testOperate_3</ref>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref><sp/>conf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_mutation_rate_calculator" kindref="compound">DefaultMutationRateCalculator</ref>(conf));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>op.setStartOffset(0);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.addGeneticOperator(op);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref><sp/>rand<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_random_generator_for_testing" kindref="compound">RandomGeneratorForTesting</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextDouble(0.45d);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>rand.setNextInt(0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setRandomGenerator(rand);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>sampleGene<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>sampleGene,<sp/>3);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setSampleChromosome(chrom);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setPopulationSize(6);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(6));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene1};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>cgene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>cgene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(9));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgene2};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>genes2);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>population<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>[]<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrom1,<sp/>chrom2};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>chroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>gene1.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(5));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>gene2.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(7));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref><sp/>gene3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>gene3.setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(4));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>chroms.add(gene3);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref><sp/>pop<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_population" kindref="compound">Population</ref>(conf,<sp/>population);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(pop,<sp/>chroms);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2,<sp/>pop.size());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>op.operate(pop,<sp/>chroms);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2,<sp/>pop.size());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(3<sp/>+<sp/>2<sp/>+<sp/>2,<sp/>chroms.size());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a09be23267e56fcdb9da67794a156cc84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a09be23267e56fcdb9da67794a156cc84" kindref="member">testOperate_4</ref>()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/>conf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFitnessFunction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1_1_test_fitness_function" kindref="compound">TestFitnessFunction</ref>());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_iterations<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref><sp/>generator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_stock_random_generator" kindref="compound">StockRandomGenerator</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.setStartOffset(0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_genes<sp/>=<sp/>0;<sp/>n_genes<sp/>&lt;<sp/>20;<sp/>n_genes++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>genes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>[n_genes];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>genes.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genes[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>-1000,<sp/>1000);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genes[i].setToRandomValue(generator);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ac3f6deab8eec334f8bcc1a40ecf8f70e" kindref="member">checksum</ref><sp/>=<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ac3f6deab8eec334f8bcc1a40ecf8f70e" kindref="member">checksum</ref>(genes);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>prev<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[genes.length];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_iterations;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gene<sp/>=<sp/>0;<sp/>gene<sp/>&lt;<sp/>genes.length;<sp/>gene++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.arraycopy(genes,<sp/>0,<sp/>prev,<sp/>0,<sp/>genes.length);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genes<sp/>=<sp/>mutOp.operate(generator,<sp/>gene,<sp/>genes);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checksum<sp/>constant:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(checksum,<sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ac3f6deab8eec334f8bcc1a40ecf8f70e" kindref="member">checksum</ref>(genes));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ab8dc00c62c73caa6b70758afe0e766b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ab8dc00c62c73caa6b70758afe0e766b0" kindref="member">testOperate_5</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref><sp/>conf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_configuration" kindref="compound">DefaultConfiguration</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>mutOp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf,<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.setMutationRateCalc(null);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>List<sp/>candChroms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref><sp/>gene1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref>(conf);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>gene1,<sp/>1);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom1.getGene(0).setAllele(Boolean.valueOf(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref><sp/>gene2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>(conf,<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref><sp/>chrom2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf,<sp/>gene2,<sp/>1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>chrom2.getGene(0).setAllele(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Integer(3));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>candChroms.add(chrom1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>candChroms.add(chrom2);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>mutOp.operate(null,<sp/>candChroms);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2,<sp/>candChroms.size());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(chrom1,<sp/>candChroms.get(0));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(chrom2,<sp/>candChroms.get(1));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ac3f6deab8eec334f8bcc1a40ecf8f70e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ac3f6deab8eec334f8bcc1a40ecf8f70e" kindref="member">checksum</ref>(<ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>[]<sp/>a_genes)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a_genes.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>(<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>)<sp/>a_genes[i]).intValue();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ad21ac2ce7a69b2efd0b54e0eb38c0f6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1ad21ac2ce7a69b2efd0b54e0eb38c0f6e" kindref="member">testStartoffset_0</ref>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" kindref="member">getStartOffset</ref>());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>op.setStartOffset(2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(2,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" kindref="member">getStartOffset</ref>());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>op.setStartOffset(1);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(1,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" kindref="member">getStartOffset</ref>());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>op.setStartOffset(0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(0,<sp/>op.<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_1ad580708adf59332d0519ec5cd71d1626" kindref="member">getStartOffset</ref>());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1aef462662041ee1a81ebf4ba7993eb8f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1aef462662041ee1a81ebf4ba7993eb8f4" kindref="member">testIsSerializable_0</ref>()</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>assertTrue(<ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" kindref="member">isSerializable</ref>(op));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a0c428c55e35ce090f55d9ec0cae50dca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1a0c428c55e35ce090f55d9ec0cae50dca" kindref="member">testDoSerialize_0</ref>()</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>object<sp/>to<sp/>be<sp/>serialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_default_crossover_rate_calculator" kindref="compound">DefaultCrossoverRateCalculator</ref>(conf));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref><sp/>o<sp/>=<sp/>(<ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>)<sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" kindref="member">doSerialize</ref>(op);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" kindref="member">assertEquals</ref>(o,<sp/>op);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adb10c5fae3d4bce63859850e000fdf46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator_test_1adb10c5fae3d4bce63859850e000fdf46" kindref="member">testEquals_0</ref>()</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1jgap_1_1_genetic_operator" kindref="compound">GeneticOperator</ref><sp/>op<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1impl_1_1_swapping_mutation_operator" kindref="compound">SwappingMutationOperator</ref>(conf);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(op.equals(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>(conf)));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/SwappingMutationOperatorTest.java"/>
  </compounddef>
</doxygen>
