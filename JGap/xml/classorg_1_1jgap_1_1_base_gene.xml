<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1_base_gene" kind="class" prot="public" abstract="yes">
    <compoundname>org::jgap::BaseGene</compoundname>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_gene" prot="public" virt="non-virtual">org.jgap.Gene</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_business_key" prot="public" virt="non-virtual">org.jgap.IBusinessKey</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1_base_gene_test_1_1_base_gene_impl" prot="public" virt="non-virtual">org.jgap.BaseGeneTest.BaseGeneImpl</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" prot="public" virt="non-virtual">org.jgap.impl.BooleanGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" prot="public" virt="non-virtual">org.jgap.impl.CompositeGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene" prot="public" virt="non-virtual">org.jgap.impl.FixedBinaryGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_map_gene" prot="public" virt="non-virtual">org.jgap.impl.MapGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" prot="public" virt="non-virtual">org.jgap.impl.NumberGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_set_gene" prot="public" virt="non-virtual">org.jgap.impl.SetGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1impl_1_1_string_gene" prot="public" virt="non-virtual">org.jgap.impl.StringGene</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene" prot="public" virt="non-virtual">org.jgap.supergenes.AbstractSupergene</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a7e83775c4b2b9391ec833869808d0154" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.BaseGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.28 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.BaseGene.S_APPLICATION_DATA</definition>
        <argsstring></argsstring>
        <name>S_APPLICATION_DATA</name>
        <initializer>= &quot;Application data&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constants for <ref refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" kindref="member">toString()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="31" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1a0f40cae2a08a312d2a151cce68b9b6b9" compoundref="_base_gene_test_8java" startline="49" endline="54">org.jgap.BaseGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1aec44cec61d4623c92ea309cd4ae581f3" compoundref="_number_gene_test_8java" startline="53" endline="59">org.jgap.impl.NumberGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1aead7ff4df4c451b9651c71d5511448fb" compoundref="_base_gene_test_8java" startline="62" endline="68">org.jgap.BaseGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1adc93f7f406a22a00b578002e99a22fcb" compoundref="_base_gene_test_8java" startline="76" endline="83">org.jgap.BaseGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" compoundref="_base_gene_8java" startline="152" endline="169">org.jgap.BaseGene.toString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" static="yes" mutable="no">
        <type>final double</type>
        <definition>final double org.jgap.BaseGene.DELTA</definition>
        <argsstring></argsstring>
        <name>DELTA</name>
        <initializer>= 0.0000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delta, useful for comparing doubles and floats. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a8553da900cf30fc4b0f5463404b86a8e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.BaseGene.m_energy</definition>
        <argsstring></argsstring>
        <name>m_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Energy of a gene, see RFE 1102206 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="39" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" compoundref="_base_gene_8java" startline="235" endline="237">org.jgap.BaseGene.getEnergy</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" compoundref="_base_gene_8java" startline="246" endline="248">org.jgap.BaseGene.setEnergy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1ab2e121e812be7a4dead5ca7e300ac3d7" prot="private" static="no" mutable="no">
        <type>Object</type>
        <definition>Object org.jgap.BaseGene.m_applicationData</definition>
        <argsstring></argsstring>
        <name>m_applicationData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application-specific data that is attached to the <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. This data may assist the application in labelling this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. JGAP ignores the data, aside from allowing it to be set and retrieved and considering it in clone() and compareTo().</para><para><simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="49" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="49" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" compoundref="_base_gene_8java" startline="262" endline="264">org.jgap.BaseGene.setApplicationData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a27bb3cd52e8cd52fffc4953f172709a2" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.jgap.BaseGene.m_compareAppData</definition>
        <argsstring></argsstring>
        <name>m_compareAppData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method compareTo(): Should we also consider the application data when comparing? Default is &quot;false&quot; as &quot;true&quot; means a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s losing its identity when application data is set differently!</para><para><simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="58" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" compoundref="_base_gene_8java" startline="302" endline="304">org.jgap.BaseGene.isCompareApplicationData</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" compoundref="_base_gene_8java" startline="292" endline="294">org.jgap.BaseGene.setCompareApplicationData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a4d41d885b45ce031c33c88214f98019e" prot="private" static="no" mutable="no">
        <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
        <definition>Configuration org.jgap.BaseGene.m_configuration</definition>
        <argsstring></argsstring>
        <name>m_configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="60" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="60" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" compoundref="_base_gene_8java" startline="82" endline="96">org.jgap.BaseGene.BaseGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a8cd57f3a57f5a892f590df9e06b82e47" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String org.jgap.BaseGene.m_uniqueID</definition>
        <argsstring></argsstring>
        <name>m_uniqueID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique ID of the gene that allows to distinct it from other genes. In the best case, this ID is unique worldwide. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="66" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="66" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" compoundref="_base_gene_8java" startline="82" endline="96">org.jgap.BaseGene.BaseGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" compoundref="_base_gene_8java" startline="437" endline="439">org.jgap.BaseGene.getUniqueID</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a3f14fef3c7107830f24306cf7bb0abf0" prot="private" static="no" mutable="no">
        <type>Map&lt; Integer, String &gt;</type>
        <definition>Map&lt;Integer,String&gt; org.jgap.BaseGene.m_uniqueIDTemplates</definition>
        <argsstring></argsstring>
        <name>m_uniqueIDTemplates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In case mutation, crossing over etc. happened, this sequence gives evidence about the parent(s) of the current gene. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="72" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="72" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" compoundref="_base_gene_8java" startline="82" endline="96">org.jgap.BaseGene.BaseGene</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1_base_gene_1a846344a347601679d0935dcdba7f7e6f" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker" kindref="compound">IGeneConstraintChecker</ref></type>
        <definition>IGeneConstraintChecker org.jgap.BaseGene.m_geneAlleleChecker</definition>
        <argsstring></argsstring>
        <name>m_geneAlleleChecker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional helper class for checking if a given allele value to be set for a given gene is valid. If not, the allele value may not be set for the gene or the gene type (e.g. IntegerGene) is not allowed in general!</para><para><simplesect kind="since"><para>2.5 (moved from CompositeGene, where it was since 2.0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="348" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="348" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" compoundref="_base_gene_8java" startline="370" endline="372">org.jgap.BaseGene.getConstraintChecker</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" compoundref="_base_gene_8java" startline="358" endline="361">org.jgap.BaseGene.setConstraintChecker</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.BaseGene.BaseGene</definition>
        <argsstring>(Configuration a_configuration)</argsstring>
        <name>BaseGene</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_configuration</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="82" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="82" bodyend="96"/>
        <references refid="classorg_1_1jgap_1_1_configuration_1ad71c68a6972d6fd993197773439154a0" compoundref="_configuration_8java" startline="1500" endline="1502">org.jgap.Configuration.getJGAPFactory</references>
        <references refid="classorg_1_1jgap_1_1_configuration_1a1cbe9f50b9017fe15ac4e27487cc549f" compoundref="_configuration_8java" startline="1911" endline="1913">org.jgap.Configuration.isUniqueKeysActive</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a4d41d885b45ce031c33c88214f98019e" compoundref="_base_gene_8java" startline="60">org.jgap.BaseGene.m_configuration</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a8cd57f3a57f5a892f590df9e06b82e47" compoundref="_base_gene_8java" startline="66">org.jgap.BaseGene.m_uniqueID</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a3f14fef3c7107830f24306cf7bb0abf0" compoundref="_base_gene_8java" startline="72">org.jgap.BaseGene.m_uniqueIDTemplates</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.BaseGene.getAllele</definition>
        <argsstring>()</argsstring>
        <name>getAllele</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1aa06c80639659ddbcfa1cfe7b7bb109f9">getAllele</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the allele value represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>.</para><para><simplesect kind="return"><para>the allele value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="103" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="103" bodyend="105"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">org.jgap.BaseGene.getInternalValue</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" compoundref="_integer_gene_8java" startline="331" endline="340">org.jgap.impl.IntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1ac3266677e324ec24bab4676d3cf9a08a" compoundref="_mutiple_integer_gene_8java" startline="352" endline="364">org.jgap.impl.MutipleIntegerGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ad4a32fa2f8796bc1598539e93a72e39f" compoundref="_double_gene_8java" startline="236" endline="238">org.jgap.impl.DoubleGene.doubleValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" compoundref="_base_gene_8java" startline="413" endline="420">org.jgap.BaseGene.getBusinessKey</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a90c518c0ed7c08016323ea88b9fb4078" compoundref="_integer_gene_8java" startline="239" endline="241">org.jgap.impl.IntegerGene.intValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" compoundref="_double_gene_8java" startline="288" endline="317">org.jgap.impl.DoubleGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a40e4284a0f01a3847ea8a639e568f0c5" compoundref="_mutiple_integer_gene_8java" startline="315" endline="341">org.jgap.impl.MutipleIntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a2a4600159ee917898b7781df844c8b63" compoundref="_number_gene_test_8java" startline="529" endline="547">org.jgap.impl.NumberGeneTest.NumberGeneImpl.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" compoundref="_map_gene_8java" startline="99" endline="110">org.jgap.impl.MapGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1aeb21f4416a05004539579bd66368c431" compoundref="_set_gene_test_8java" startline="87" endline="94">org.jgap.impl.SetGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7596ec075d333d0c1c65915fc2440cd6" compoundref="_map_gene_test_8java" startline="134" endline="156">org.jgap.impl.MapGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a5add564c0cfdabdb6653ce37733aec81" compoundref="_double_gene_test_8java" startline="943" endline="952">org.jgap.impl.DoubleGeneTest.testMapValueToWithinBoundsSupportsFullDoubleRange</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a7325ad49582d7aa552cb5fe916b07bf4" compoundref="_double_gene_test_8java" startline="960" endline="969">org.jgap.impl.DoubleGeneTest.testMapValueToWithinBoundsSupportsFullDoubleRange2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a9160143307a32535102f3e8cd584807e" compoundref="_double_gene_test_8java" startline="978" endline="987">org.jgap.impl.DoubleGeneTest.testMapValueToWithinBoundsSupportsFullDoubleRange3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a8b63897ed935aad5f540677592f3fccb" compoundref="_double_gene_test_8java" startline="995" endline="1004">org.jgap.impl.DoubleGeneTest.testMapValueToWithinBoundsSupportsFullDoubleRange4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a13b425255966c43d85780abc24e13a41" compoundref="_double_gene_test_8java" startline="1012" endline="1021">org.jgap.impl.DoubleGeneTest.testMapValueToWithinBoundsSupportsFullDoubleRange5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a3c038eb59a6c5a9b6cd1f3940a88b76d" compoundref="_integer_gene_test_8java" startline="985" endline="996">org.jgap.impl.IntegerGeneTest.testMapValueToWithinBoundsSupportsFullIntegerRange</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_inversion_operator_test_1a309cf99a30aef85d7f0f54b30b6583aa" compoundref="_inversion_operator_test_8java" startline="173" endline="222">org.jgap.impl.InversionOperatorTest.testOperate_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a691e9d03e916efc556b423bce6956fc9" compoundref="_composite_gene_test_8java" startline="586" endline="639">org.jgap.impl.CompositeGeneTest.testPersistentPresentation_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a1cddaada86124996c52f6b8d377da67e" compoundref="_map_gene_test_8java" startline="353" endline="370">org.jgap.impl.MapGeneTest.testPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1aa9a1b9e80aa3d7137a14bcae1ce5442e" compoundref="_integer_gene_test_8java" startline="392" endline="406">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a70f12c3c52313d5353c8fc0e58905126" compoundref="_integer_gene_test_8java" startline="414" endline="428">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1ad4025b40eff99e3585b11a64f563677a" compoundref="_composite_gene_test_8java" startline="459" endline="475">org.jgap.impl.CompositeGeneTest.testSetAllele_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a27a495152197e280a5eaa5fb0cfe31b3" compoundref="_composite_gene_test_8java" startline="483" endline="499">org.jgap.impl.CompositeGeneTest.testSetAllele_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ae331bea59a36e18e9edaaa8b66fa3607" compoundref="_string_gene_test_8java" startline="991" endline="1001">org.jgap.impl.StringGeneTest.testSetToRandomValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1a1a19b79e86f435af5e5f0058d11e9b8c" compoundref="_string_gene_test_8java" startline="1029" endline="1034">org.jgap.impl.StringGeneTest.testSetToRandomValue_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1af4a00cb5ade8d1121e76867b4af970c2" compoundref="_string_gene_test_8java" startline="1042" endline="1056">org.jgap.impl.StringGeneTest.testSetToRandomValue_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a0f95af661fa009571d9d1d73d9860184" compoundref="_set_gene_test_8java" startline="416" endline="421">org.jgap.impl.SetGeneTest.testSetValueFromPersistentRepresentation_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a74a3edfd1a7bd8535386b86e1e9a136e" compoundref="_boolean_gene_test_8java" startline="569" endline="574">org.jgap.impl.BooleanGeneTest.testSetValueFromPersistentRepresentation_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a222bd7b1b829b94a1789ce8f0bb91445" compoundref="_set_gene_test_8java" startline="429" endline="434">org.jgap.impl.SetGeneTest.testSetValueFromPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a4d5319f5916e1663ce805e558204a7ce" compoundref="_boolean_gene_test_8java" startline="582" endline="587">org.jgap.impl.BooleanGeneTest.testSetValueFromPersistentRepresentation_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a5acd1e84539f21b4288986abaa4faba8" compoundref="_set_gene_test_8java" startline="441" endline="446">org.jgap.impl.SetGeneTest.testSetValueFromPersistentRepresentation_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a328bc133cf71b9d5ead453976301aa33" compoundref="_boolean_gene_test_8java" startline="595" endline="600">org.jgap.impl.BooleanGeneTest.testSetValueFromPersistentRepresentation_3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.BaseGene.hashCode</definition>
        <argsstring>()</argsstring>
        <name>hashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the hash code value for a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Override if another <ref refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" kindref="member">hashCode()</ref> implementation is necessary or more appropriate than this default implementation.</para><para><simplesect kind="return"><para>this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s hash code</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="118" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="118" bodyend="128"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">org.jgap.BaseGene.getInternalValue</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a5e353bbf6a9576b702bf466a5f952b82">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executed by the genetic engine when this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance is no longer needed and should perform any necessary resource cleanup. If you need a special cleanup, override this method.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="138" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value that may be useful for display purposes.</para><para><simplesect kind="return"><para>a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="152" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="152" bodyend="169"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd">org.jgap.BaseGene.getInternalValue</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" compoundref="_base_gene_8java" startline="31">org.jgap.BaseGene.S_APPLICATION_DATA</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a2a35ceb76a665867ea10f34492dabf44" compoundref="_set_gene_8java" startline="222" endline="235">org.jgap.impl.SetGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4650fd61d86fae144300e230de0a4c0b" compoundref="_number_gene_test_8java" startline="499" endline="502">org.jgap.impl.NumberGeneTest.NumberGeneImpl.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a98553b5f28580d0c8de7fa044773ab21" compoundref="_set_gene_test_8java" startline="56" endline="63">org.jgap.impl.SetGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a0fb9dca147686f73069f77a77bdaa111" compoundref="_set_gene_test_8java" startline="71" endline="79">org.jgap.impl.SetGeneTest.testToString_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.BaseGene.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a7a975e180dd0ac0fd33cdc182f64bea8">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the gene, i.e the number of atomic elements. Always 1 for non-composed <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> types. Override for composed <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> types</para></simplesect>
<simplesect kind="author"><para>Neil Rotstan </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="178" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.BaseGene.equals</definition>
        <argsstring>(final Object a_other)</argsstring>
        <name>equals</name>
        <param>
          <type>final Object</type>
          <declname>a_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> with the given object and returns true if the other object is a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> of the same type and has the same value (allele) as this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Otherwise it returns false.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_other</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to compare to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> for equality </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> is equal to the given object, false otherwise</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="193" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="193" bodyend="216"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" compoundref="_base_gene_8java" startline="306" endline="339">org.jgap.BaseGene.compareApplicationData</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1a4eb1d079f14465a2324ad41a6ee3b77a">org.jgap.Gene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" compoundref="_base_gene_8java" startline="302" endline="304">org.jgap.BaseGene.isCompareApplicationData</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ac8b7dd5b3d2fb4ade4e9d5c95ad4e719" compoundref="_composite_gene_8java" startline="154" endline="180">org.jgap.impl.CompositeGene.addGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a9c60da46d532e5d1edd5d39946f755df" compoundref="_set_gene_test_8java" startline="109" endline="119">org.jgap.impl.SetGeneTest.testEquals_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a43b715217cedcd7499cda526c82ffd53" compoundref="_composite_gene_test_8java" startline="332" endline="341">org.jgap.impl.CompositeGeneTest.testEquals_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a8703f73e2f61b29ab8366d06c0677a20" compoundref="_composite_gene_test_8java" startline="349" endline="360">org.jgap.impl.CompositeGeneTest.testEquals_5_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a88233ae6b45ef921275b2a97119ef891" compoundref="_integer_gene_test_8java" startline="170" endline="182">org.jgap.impl.IntegerGeneTest.testEquals_8</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a10ed74565938f11d5d47a1534da1347a" compoundref="_integer_gene_test_8java" startline="191" endline="203">org.jgap.impl.IntegerGeneTest.testEquals_9</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1acf4739596f865c1d3ab7ac3991919ea8" compoundref="_integer_gene_test_8java" startline="212" endline="224">org.jgap.impl.IntegerGeneTest.testEquals_9_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a765667c1df140f4e476400df65b5022e" compoundref="_integer_gene_test_8java" startline="251" endline="263">org.jgap.impl.IntegerGeneTest.testEquals_9_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a0ad17a091c3960d0325852571f700778" compoundref="_composite_gene_test_8java" startline="501" endline="523">org.jgap.impl.CompositeGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a297c4a3ccf6c7b8e5521eee664190cb1" compoundref="_fixed_binary_gene_test_8java" startline="1216" endline="1225">org.jgap.impl.FixedBinaryGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1af16a147e8e62220d91afa1f0393c6e5a" compoundref="_map_gene_test_8java" startline="270" endline="279">org.jgap.impl.MapGeneTest.testNewGene_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab7deb8db5b683e0e902a3e9bf30bff7a" compoundref="_map_gene_test_8java" startline="285" endline="294">org.jgap.impl.MapGeneTest.testNewGene_3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.BaseGene.getEnergy</definition>
        <argsstring>()</argsstring>
        <name>getEnergy</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1aa1794038b5018cdb49998639c79cb57a">getEnergy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>energy of the gene</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="235" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="235" bodyend="237"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a8553da900cf30fc4b0f5463404b86a8e" compoundref="_base_gene_8java" startline="39">org.jgap.BaseGene.m_energy</references>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" compoundref="_base_gene_8java" startline="392" endline="399">org.jgap.BaseGene.newGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1a4a2f68a7bb91c97ce77702fa83b163e5" compoundref="_number_gene_test_8java" startline="439" endline="443">org.jgap.impl.NumberGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a20128230b05f932ca8dd789a19e20823" compoundref="_set_gene_test_8java" startline="558" endline="562">org.jgap.impl.SetGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1aa64b7484648be18e15b627b0b14a9be5" compoundref="_boolean_gene_test_8java" startline="709" endline="713">org.jgap.impl.BooleanGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aa3bfbe1da45e50076461af450213a18d" compoundref="_double_gene_test_8java" startline="878" endline="882">org.jgap.impl.DoubleGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1acb024368bf438141c837793089af4ca7" compoundref="_integer_gene_test_8java" startline="898" endline="902">org.jgap.impl.IntegerGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1aeefd97ee4a4d485e40117a0775723665" compoundref="_composite_gene_test_8java" startline="915" endline="919">org.jgap.impl.CompositeGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1aa378986ea4e120aaaa6ee8977d1e5eea" compoundref="_string_gene_test_8java" startline="1166" endline="1170">org.jgap.impl.StringGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a99a259cba3e8c0479ced236c6291e3c3" compoundref="_fixed_binary_gene_test_8java" startline="1299" endline="1303">org.jgap.impl.FixedBinaryGeneTest.testSetEnergy_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1a19a7060516f0120dbfad40e1455d11f2" compoundref="_number_gene_test_8java" startline="451" endline="461">org.jgap.impl.NumberGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1a1554cf6128cd642a799c38d7ae398776" compoundref="_set_gene_test_8java" startline="570" endline="580">org.jgap.impl.SetGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a1ffa7414ec2fda7638d7ef84a54e9f26" compoundref="_boolean_gene_test_8java" startline="721" endline="731">org.jgap.impl.BooleanGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a283385f9c99041206f7996a76a9fc5da" compoundref="_double_gene_test_8java" startline="890" endline="900">org.jgap.impl.DoubleGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1abc7de81ace1472e146b815ccd2ff0b33" compoundref="_integer_gene_test_8java" startline="910" endline="920">org.jgap.impl.IntegerGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a013bf371bd1049433e99abadf29cdcdf" compoundref="_composite_gene_test_8java" startline="928" endline="938">org.jgap.impl.CompositeGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1a58a5e1fa0c39082fd47bdc611c4a1877" compoundref="_string_gene_test_8java" startline="1178" endline="1188">org.jgap.impl.StringGeneTest.testSetEnergy_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1af904ed8c4f128dfcab908d1a751b2c59" compoundref="_fixed_binary_gene_test_8java" startline="1311" endline="1321">org.jgap.impl.FixedBinaryGeneTest.testSetEnergy_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.setEnergy</definition>
        <argsstring>(final double a_energy)</argsstring>
        <name>setEnergy</name>
        <param>
          <type>final double</type>
          <declname>a_energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the energy of the gene <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_energy</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="246" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="246" bodyend="248"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a8553da900cf30fc4b0f5463404b86a8e" compoundref="_base_gene_8java" startline="39">org.jgap.BaseGene.m_energy</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.setApplicationData</definition>
        <argsstring>(final Object a_newData)</argsstring>
        <name>setApplicationData</name>
        <param>
          <type>final Object</type>
          <declname>a_newData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This sets the application-specific data that is attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Attaching application-specific data may be useful for some applications when it comes time to distinguish a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from another. JGAP ignores this data functionally.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newData</parametername>
</parameternamelist>
<parameterdescription>
<para>the new application-specific data to attach to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="262" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="262" bodyend="264"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ab2e121e812be7a4dead5ca7e300ac3d7" compoundref="_base_gene_8java" startline="49">org.jgap.BaseGene.m_applicationData</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.BaseGene.getApplicationData</definition>
        <argsstring>()</argsstring>
        <name>getApplicationData</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a4eb1d079f14465a2324ad41a6ee3b77a">getApplicationData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the application-specific data that is attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Attaching application-specific data may be useful for some applications when it comes time to distinguish a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from another. JGAP ignores this data functionally.</para><para><simplesect kind="return"><para>the application-specific data previously attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>, or null if there is no data attached</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="278" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="278" bodyend="280"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ab2e121e812be7a4dead5ca7e300ac3d7" compoundref="_base_gene_8java" startline="49">org.jgap.BaseGene.m_applicationData</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" compoundref="_boolean_gene_8java" startline="264" endline="341">org.jgap.impl.BooleanGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a7deda1b70647eb5598875aecbf2c73a2" compoundref="_string_gene_8java" startline="409" endline="450">org.jgap.impl.StringGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a35ddbee61a1634d7f92b12304672f10b" compoundref="_fixed_binary_gene_8java" startline="423" endline="464">org.jgap.impl.FixedBinaryGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab05429ae96ad205f88855f6dbe242638" compoundref="_composite_gene_8java" startline="450" endline="508">org.jgap.impl.CompositeGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" compoundref="_base_gene_8java" startline="193" endline="216">org.jgap.BaseGene.equals</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" compoundref="_base_gene_8java" startline="392" endline="399">org.jgap.BaseGene.newGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" compoundref="_base_gene_8java" startline="152" endline="169">org.jgap.BaseGene.toString</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.setCompareApplicationData</definition>
        <argsstring>(final boolean a_doCompare)</argsstring>
        <name>setCompareApplicationData</name>
        <param>
          <type>final boolean</type>
          <declname>a_doCompare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Should we also consider the application data when comparing? Default is &quot;false&quot; as &quot;true&quot; means a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> is losing its identity when application data is set differently!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_doCompare</parametername>
</parameternamelist>
<parameterdescription>
<para>true: consider application data in method compareTo</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="292" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="292" bodyend="294"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a27bb3cd52e8cd52fffc4953f172709a2" compoundref="_base_gene_8java" startline="58">org.jgap.BaseGene.m_compareAppData</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.BaseGene.isCompareApplicationData</definition>
        <argsstring>()</argsstring>
        <name>isCompareApplicationData</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a71de32c2c6bf2b71332449f20d604f81">isCompareApplicationData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="302" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="302" bodyend="304"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a27bb3cd52e8cd52fffc4953f172709a2" compoundref="_base_gene_8java" startline="58">org.jgap.BaseGene.m_compareAppData</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" compoundref="_boolean_gene_8java" startline="264" endline="341">org.jgap.impl.BooleanGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a7deda1b70647eb5598875aecbf2c73a2" compoundref="_string_gene_8java" startline="409" endline="450">org.jgap.impl.StringGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a35ddbee61a1634d7f92b12304672f10b" compoundref="_fixed_binary_gene_8java" startline="423" endline="464">org.jgap.impl.FixedBinaryGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab05429ae96ad205f88855f6dbe242638" compoundref="_composite_gene_8java" startline="450" endline="508">org.jgap.impl.CompositeGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" compoundref="_base_gene_8java" startline="193" endline="216">org.jgap.BaseGene.equals</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.setConstraintChecker</definition>
        <argsstring>(final IGeneConstraintChecker a_constraintChecker)</argsstring>
        <name>setConstraintChecker</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a1ef8e9cd912cc68ebe6cd246cf896633">setConstraintChecker</reimplements>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker" kindref="compound">IGeneConstraintChecker</ref></type>
          <declname>a_constraintChecker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the constraint checker to be used for this gene whenever method <ref refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" kindref="member">setAllele(Object)</ref> is called. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_constraintChecker</parametername>
</parameternamelist>
<parameterdescription>
<para>the constraint checker to be set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.5 (moved from CompositeGene, where it was since 2.0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="358" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="358" bodyend="361"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a846344a347601679d0935dcdba7f7e6f" compoundref="_base_gene_8java" startline="348">org.jgap.BaseGene.m_geneAlleleChecker</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker" kindref="compound">IGeneConstraintChecker</ref></type>
        <definition>IGeneConstraintChecker org.jgap.BaseGene.getConstraintChecker</definition>
        <argsstring>()</argsstring>
        <name>getConstraintChecker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker" kindref="compound">IGeneConstraintChecker</ref> the constraint checker to be used whenever method <ref refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" kindref="member">setAllele(Object)</ref> is called.</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.5 (moved from CompositeGene, where it was since 2.0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="370" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="370" bodyend="372"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a846344a347601679d0935dcdba7f7e6f" compoundref="_base_gene_8java" startline="348">org.jgap.BaseGene.m_geneAlleleChecker</references>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" compoundref="_base_gene_8java" startline="392" endline="399">org.jgap.BaseGene.newGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1ab9957400b5eb890f04032b5ce498cbf4" compoundref="_string_gene_8java" startline="383" endline="392">org.jgap.impl.StringGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab71f66feb3b88bb9bdcab5682abd4b03" compoundref="_composite_gene_8java" startline="418" endline="433">org.jgap.impl.CompositeGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1ae253eaecdab77e190ec9deb4c01bafb7" compoundref="_fixed_binary_gene_8java" startline="109" endline="128">org.jgap.impl.FixedBinaryGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1ad85c7164cd5ed0dfb4abf496ae3ec29b" compoundref="_string_gene_8java" startline="347" endline="371">org.jgap.impl.StringGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a9e22ec1330a1b2009da1f587c299ed74" compoundref="_composite_gene_8java" startline="389" endline="406">org.jgap.impl.CompositeGene.setAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a9d68c86ea47f39668f53933cf44ead28" compoundref="_double_gene_test_8java" startline="411" endline="429">org.jgap.impl.DoubleGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1a789e68149276a16a7be7886c377fe0c0" compoundref="_number_gene_test_8java" startline="420" endline="431">org.jgap.impl.NumberGeneTest.testSetConstraintChecker_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a28c1c3da974ca8e747cb5b5fd6836ba2" compoundref="_fixed_binary_gene_test_8java" startline="529" endline="540">org.jgap.impl.FixedBinaryGeneTest.testSetConstraintChecker_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aab5661f006960b5b617a9a35d3f6638a" compoundref="_double_gene_test_8java" startline="828" endline="839">org.jgap.impl.DoubleGeneTest.testSetConstraintChecker_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a6614addee4f794acae2d385a6e0910ae" compoundref="_composite_gene_test_8java" startline="844" endline="855">org.jgap.impl.CompositeGeneTest.testSetConstraintChecker_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1aa7c10a7831352fe34caeef35eb9efd77" compoundref="_string_gene_test_8java" startline="1131" endline="1142">org.jgap.impl.StringGeneTest.testSetConstraintChecker_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.BaseGene.newGene</definition>
        <argsstring>()</argsstring>
        <name>newGene</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ae4ddccb7bf569c0ed6cdc19def590964">newGene</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides implementation-independent means for creating new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instances. The new instance that is created and returned should be setup with any implementation-dependent configuration that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance is setup with (aside from the actual value, of course). For example, if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> were setup with bounds on its value, then the <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance returned from this method should also be setup with those same bounds. This is important, as the JGAP core will invoke this method on each <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in the sample <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> in order to create each new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in the same respective gene position for a new <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>.</para><para><simplesect kind="return"><para>a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance of the same type and with the same setup as this concrete <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="author"><para>Neil Rostan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 (since 1.0 in IntegerGene) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000041"><xreftitle>Todo</xreftitle><xrefdescription><para>clone app.data </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="392" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="392" bodyend="399"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" compoundref="_base_gene_8java" startline="278" endline="280">org.jgap.BaseGene.getApplicationData</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" compoundref="_base_gene_8java" startline="370" endline="372">org.jgap.BaseGene.getConstraintChecker</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" compoundref="_base_gene_8java" startline="235" endline="237">org.jgap.BaseGene.getEnergy</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c">org.jgap.BaseGene.newGeneInternal</references>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_supergene_persistent_representation_test_1ae85934ad93c5a40784e816866bf82b72" compoundref="_supergene_persistent_representation_test_8java" startline="233" endline="240">org.jgap.supergenes.SupergenePersistentRepresentationTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a3367d5a2d86ba7f0d9467f30a7f3143b" compoundref="_map_gene_test_8java" startline="242" endline="253">org.jgap.impl.MapGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1ac4a66a79af1de04b9e5681e2c81c1806" compoundref="_integer_gene_test_8java" startline="336" endline="350">org.jgap.impl.IntegerGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a9d68c86ea47f39668f53933cf44ead28" compoundref="_double_gene_test_8java" startline="411" endline="429">org.jgap.impl.DoubleGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a0ad17a091c3960d0325852571f700778" compoundref="_composite_gene_test_8java" startline="501" endline="523">org.jgap.impl.CompositeGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1a8f3f7adbe4432d52375081b2b47e4c18" compoundref="_string_gene_test_8java" startline="539" endline="553">org.jgap.impl.StringGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a297c4a3ccf6c7b8e5521eee664190cb1" compoundref="_fixed_binary_gene_test_8java" startline="1216" endline="1225">org.jgap.impl.FixedBinaryGeneTest.testNewGene_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_supergene_persistent_representation_test_1a0599284afd0b91166979cffe3a5d6f4f" compoundref="_supergene_persistent_representation_test_8java" startline="242" endline="252">org.jgap.supergenes.SupergenePersistentRepresentationTest.testNewGene_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aa110813c5f2bdc9045aa2044eb2c7a70" compoundref="_map_gene_test_8java" startline="259" endline="264">org.jgap.impl.MapGeneTest.testNewGene_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_supergene_persistent_representation_test_1a49a6c0247ccdfc6cd6a3ea6473a5a7ac" compoundref="_supergene_persistent_representation_test_8java" startline="254" endline="261">org.jgap.supergenes.SupergenePersistentRepresentationTest.testNewGene_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1af16a147e8e62220d91afa1f0393c6e5a" compoundref="_map_gene_test_8java" startline="270" endline="279">org.jgap.impl.MapGeneTest.testNewGene_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1ab7deb8db5b683e0e902a3e9bf30bff7a" compoundref="_map_gene_test_8java" startline="285" endline="294">org.jgap.impl.MapGeneTest.testNewGene_3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
        <definition>Configuration org.jgap.BaseGene.getConfiguration</definition>
        <argsstring>()</argsstring>
        <name>getConfiguration</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1aa178414303649867b6176de80c6ba892">getConfiguration</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the configuration set</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="409" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="409" bodyend="411"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a4d41d885b45ce031c33c88214f98019e" compoundref="_base_gene_8java" startline="60">org.jgap.BaseGene.m_configuration</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a25f48363b718e483e9b479a51aa9c017" compoundref="_set_gene_8java" startline="127" endline="136">org.jgap.impl.SetGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1ac9095e249f597d47c9c54aa9108afb77" compoundref="_map_gene_8java" startline="222" endline="226">org.jgap.impl.MapGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a008b2ecc6f66090965919b537fb327b3" compoundref="_abstract_supergene_8java" startline="222" endline="262">org.jgap.supergenes.AbstractSupergene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1aa63ee177d2ac62ad5c82d38db881ba7f" compoundref="_string_gene_8java" startline="568" endline="614">org.jgap.impl.StringGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a7763fec4b36cd24c4a75850c66258387" compoundref="_fixed_binary_gene_8java" startline="100" endline="107">org.jgap.impl.FixedBinaryGene.clone</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" compoundref="_base_gene_8java" startline="306" endline="339">org.jgap.BaseGene.compareApplicationData</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a658a2a0eb85cd1093cb140f4ed4042d9" compoundref="_set_gene_8java" startline="272" endline="303">org.jgap.impl.SetGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a8bf4b223b9614799efa2ee90d36b0602" compoundref="_composite_gene_8java" startline="319" endline="327">org.jgap.impl.CompositeGene.createGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a32c5375e3de833953678146fb3dcb5b3" compoundref="_abstract_supergene_8java" startline="488" endline="496">org.jgap.supergenes.AbstractSupergene.createGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a497a53be8d8d711ed48c62b062984a94" compoundref="_abstract_supergene_8java" startline="453" endline="485">org.jgap.supergenes.AbstractSupergene.createValidator</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" compoundref="_double_gene_8java" startline="288" endline="317">org.jgap.impl.DoubleGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" compoundref="_integer_gene_8java" startline="293" endline="319">org.jgap.impl.IntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a40e4284a0f01a3847ea8a639e568f0c5" compoundref="_mutiple_integer_gene_8java" startline="315" endline="341">org.jgap.impl.MutipleIntegerGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1abe5acebc3f0d099bdb825e6ef7a7c233" compoundref="_set_gene_8java" startline="62" endline="69">org.jgap.impl.SetGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1acf83c8bd879cbbcf3e091eaf718594be" compoundref="_fixed_binary_gene_8java" startline="69" endline="77">org.jgap.impl.FixedBinaryGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7" compoundref="_map_gene_8java" startline="99" endline="110">org.jgap.impl.MapGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" compoundref="_double_gene_8java" startline="108" endline="117">org.jgap.impl.DoubleGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" compoundref="_integer_gene_8java" startline="113" endline="121">org.jgap.impl.IntegerGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a0d94e1fe37cbc3e7cda6481117f2a45a" compoundref="_mutiple_integer_gene_8java" startline="118" endline="127">org.jgap.impl.MutipleIntegerGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a57df173aaf3d927451500893e5cccaf3" compoundref="_boolean_gene_8java" startline="125" endline="132">org.jgap.impl.BooleanGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a1e30b794dee0e8da4d5a4d213e9fb2c1" compoundref="_abstract_supergene_8java" startline="192" endline="213">org.jgap.supergenes.AbstractSupergene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1ab9957400b5eb890f04032b5ce498cbf4" compoundref="_string_gene_8java" startline="383" endline="392">org.jgap.impl.StringGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab71f66feb3b88bb9bdcab5682abd4b03" compoundref="_composite_gene_8java" startline="418" endline="433">org.jgap.impl.CompositeGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4dcdc2431e0b48f6d53f4cdbdc605996" compoundref="_number_gene_test_8java" startline="489" endline="497">org.jgap.impl.NumberGeneTest.NumberGeneImpl.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1aea3c1ac18b8d5f5973d19f3341391fc4" compoundref="_fixed_binary_gene_8java" startline="198" endline="210">org.jgap.impl.FixedBinaryGene.substring</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_test_1af8949675ba0fdbb6eb0309f39f0ce8ae" compoundref="_set_gene_test_8java" startline="32" endline="36">org.jgap.impl.SetGeneTest.testConstruct_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.getBusinessKey</definition>
        <argsstring>()</argsstring>
        <name>getBusinessKey</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_business_key_1ab1b12087d8726e9020441a1fed6be0f8">getBusinessKey</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>business key</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="413" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="413" bodyend="420"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.getUniqueID</definition>
        <argsstring>()</argsstring>
        <name>getUniqueID</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_unique_key_1a1276412b558e169199771997a190f876">getUniqueID</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>unique ID of the gene, which allows to distinct this instance from others, in the best case worldwide</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="437" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="437" bodyend="439"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a8cd57f3a57f5a892f590df9e06b82e47" compoundref="_base_gene_8java" startline="66">org.jgap.BaseGene.m_uniqueID</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.BaseGene.setUniqueIDTemplate</definition>
        <argsstring>(String a_templateID, int a_index)</argsstring>
        <name>setUniqueIDTemplate</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_unique_key_1aeac223774f93ba6640bc07cc97a9ef4c">setUniqueIDTemplate</reimplements>
        <param>
          <type>String</type>
          <declname>a_templateID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A template is a gene that is the logical predecessor of the current gene. A template can occur in mutation or crossing over. In the latter case can be at least two template genes. This is why in this setter method the parameter a_index exists.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_templateID</parametername>
</parameternamelist>
<parameterdescription>
<para>the unique ID of the template </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the template, e.g. in crossing over for the second candidate gene this is 2</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="454" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.getUniqueIDTemplate</definition>
        <argsstring>(int a_index)</argsstring>
        <name>getUniqueIDTemplate</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_unique_key_1af26fbe03487632a16c84b62325489652">getUniqueIDTemplate</reimplements>
        <param>
          <type>int</type>
          <declname>a_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the template to retrieve the key for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="465" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="465" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract Object</type>
        <definition>abstract Object org.jgap.BaseGene.getInternalValue</definition>
        <argsstring>()</argsstring>
        <name>getInternalValue</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a5877331914ff77741c6bcde9531008a2">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1ad1d9fb9f74b0905a92472f22050ab5b8">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a9c3d7ad5bd78dbdf8b6c17278fe14f11">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a20a2cdecf740152ac3454df33e0d8449">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a2510aeb97b5362ab5ce9e00d412873dd">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1af4b0e1f740b6aa78679ab71c51568cea">getInternalValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a9ee20f6169c0d441cdacb3685d5336f6">getInternalValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation holds its own m_value object keeping the allele value. In your <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation, just return it with this method (see <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">org.jgap.impl.BooleanGene</ref> for example) <simplesect kind="return"><para>the m_value object</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="227" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" compoundref="_base_gene_8java" startline="118" endline="128">org.jgap.BaseGene.hashCode</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" compoundref="_base_gene_8java" startline="152" endline="169">org.jgap.BaseGene.toString</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.BaseGene.compareApplicationData</definition>
        <argsstring>(final Object a_appdata1, final Object a_appdata2)</argsstring>
        <name>compareApplicationData</name>
        <param>
          <type>final Object</type>
          <declname>a_appdata1</declname>
        </param>
        <param>
          <type>final Object</type>
          <declname>a_appdata2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="306" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="306" bodyend="339"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" compoundref="_number_gene_8java" startline="50" endline="110">org.jgap.impl.NumberGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a3d7f5c0543076d1b8090a17b7935aabd" compoundref="_boolean_gene_8java" startline="264" endline="341">org.jgap.impl.BooleanGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a7deda1b70647eb5598875aecbf2c73a2" compoundref="_string_gene_8java" startline="409" endline="450">org.jgap.impl.StringGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a35ddbee61a1634d7f92b12304672f10b" compoundref="_fixed_binary_gene_8java" startline="423" endline="464">org.jgap.impl.FixedBinaryGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab05429ae96ad205f88855f6dbe242638" compoundref="_composite_gene_8java" startline="450" endline="508">org.jgap.impl.CompositeGene.compareTo</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" compoundref="_base_gene_8java" startline="193" endline="216">org.jgap.BaseGene.equals</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>abstract Gene org.jgap.BaseGene.newGeneInternal</definition>
        <argsstring>()</argsstring>
        <name>newGeneInternal</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1abe5acebc3f0d099bdb825e6ef7a7c233">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1acf83c8bd879cbbcf3e091eaf718594be">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aea5223852eb46cf96ffb04b4b16165b7">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a0d94e1fe37cbc3e7cda6481117f2a45a">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a57df173aaf3d927451500893e5cccaf3">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a1e30b794dee0e8da4d5a4d213e9fb2c1">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1ab9957400b5eb890f04032b5ce498cbf4">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ab71f66feb3b88bb9bdcab5682abd4b03">newGeneInternal</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4dcdc2431e0b48f6d53f4cdbdc605996">newGeneInternal</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="401" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" compoundref="_base_gene_8java" startline="392" endline="399">org.jgap.BaseGene.newGene</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.encode</definition>
        <argsstring>(String a_string)</argsstring>
        <name>encode</name>
        <param>
          <type>String</type>
          <declname>a_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="422" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="422" bodyend="424"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a79af8bfa3fb168ff61d4945b9ed4a319" compoundref="_string_gene_8java" startline="306" endline="328">org.jgap.impl.StringGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ad33dc860fffad1457c3f44a8b3b031f7" compoundref="_composite_gene_8java" startline="339" endline="354">org.jgap.impl.CompositeGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a41a4e0b1cf2366722b5f3b97a1711487" compoundref="_abstract_supergene_8java" startline="363" endline="393">org.jgap.supergenes.AbstractSupergene.getPersistentRepresentation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.BaseGene.decode</definition>
        <argsstring>(String a_string)</argsstring>
        <name>decode</name>
        <param>
          <type>String</type>
          <declname>a_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="426" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="426" bodyend="428"/>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a497a53be8d8d711ed48c62b062984a94" compoundref="_abstract_supergene_8java" startline="453" endline="485">org.jgap.supergenes.AbstractSupergene.createValidator</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a6300aa56c257d02ece7298fe6fccbc36" compoundref="_string_gene_8java" startline="205" endline="288">org.jgap.impl.StringGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1abd62d1ccb9e0753b93d11a89fd055d0e" compoundref="_composite_gene_8java" startline="275" endline="305">org.jgap.impl.CompositeGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1af8156c2a8b41bc9fe3e397595c513a6d" compoundref="_abstract_supergene_8java" startline="411" endline="450">org.jgap.supergenes.AbstractSupergene.setValueFromPersistentRepresentation</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract base class for all genes. Provides default implementations.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9786">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="9803">
        <label>org.jgap.supergenes.SupergeneInternalParserTest.TestClass</label>
        <childnode refid="9801" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9792">
        <label>org.jgap.impl.MapGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_map_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9802">
        <label>org.jgap.supergenes.InstantiableSupergeneForTesting</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_instantiable_supergene_for_testing"/>
        <childnode refid="9801" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9785">
        <label>Serializable</label>
      </node>
      <node id="9784">
        <label>Comparable</label>
      </node>
      <node id="9787">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="9782">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="9783" relation="public-inheritance">
        </childnode>
        <childnode refid="9787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9795">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="9793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9788">
        <label>org.jgap.BaseGeneTest.BaseGeneImpl</label>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9797">
        <label>org.jgap.impl.MutipleIntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene"/>
        <childnode refid="9793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9804">
        <label>org.jgap.supergenes.SupergenePersistentRepresentationTest.TestClass</label>
        <childnode refid="9801" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9789">
        <label>org.jgap.impl.BooleanGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9791">
        <label>org.jgap.impl.FixedBinaryGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9798">
        <label>org.jgap.impl.NumberGeneTest.NumberGeneImpl</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl"/>
        <childnode refid="9793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9783">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="9784" relation="public-inheritance">
        </childnode>
        <childnode refid="9785" relation="public-inheritance">
        </childnode>
        <childnode refid="9786" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9793">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9801">
        <label>org.jgap.supergenes.AbstractSupergene</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9796">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="9795" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9794">
        <label>org.jgap.impl.DoubleGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_double_gene"/>
        <childnode refid="9793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9800">
        <label>org.jgap.impl.StringGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_string_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9790">
        <label>org.jgap.impl.CompositeGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_composite_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9799">
        <label>org.jgap.impl.SetGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_set_gene"/>
        <childnode refid="9782" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9809">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="9824">
        <label>List</label>
      </node>
      <node id="9823">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9813" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9820">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9808">
        <label>Serializable</label>
      </node>
      <node id="9807">
        <label>Comparable</label>
      </node>
      <node id="9810">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="9805">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="9806" relation="public-inheritance">
        </childnode>
        <childnode refid="9810" relation="public-inheritance">
        </childnode>
        <childnode refid="9811" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="9825" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="9813">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="9814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9818">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9825">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9821">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9813" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9814">
        <label>Cloneable</label>
      </node>
      <node id="9806">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="9807" relation="public-inheritance">
        </childnode>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9816">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9822">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9815">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="9813" relation="public-inheritance">
        </childnode>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9807" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9819">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="9807" relation="public-inheritance">
        </childnode>
        <childnode refid="9813" relation="public-inheritance">
        </childnode>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9811">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="9812" relation="public-inheritance">
        </childnode>
        <childnode refid="9808" relation="public-inheritance">
        </childnode>
        <childnode refid="9813" relation="public-inheritance">
        </childnode>
        <childnode refid="9807" relation="public-inheritance">
        </childnode>
        <childnode refid="9815" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="9816" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="9817" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="9818" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="9819" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="9820" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="9821" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="9822" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="9823" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="9824" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="9817">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="9812">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/BaseGene.java" bodystart="23" bodyend="469"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a7e83775c4b2b9391ec833869808d0154" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad20da6b23ba524a95caa28f727c26dcd" prot="protected" virt="pure-virtual"><scope>org::jgap::BaseGene</scope><name>getInternalValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab2e121e812be7a4dead5ca7e300ac3d7" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_applicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a27bb3cd52e8cd52fffc4953f172709a2" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_compareAppData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a4d41d885b45ce031c33c88214f98019e" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_configuration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a8553da900cf30fc4b0f5463404b86a8e" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_energy</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a846344a347601679d0935dcdba7f7e6f" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_geneAlleleChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a8cd57f3a57f5a892f590df9e06b82e47" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_uniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a3f14fef3c7107830f24306cf7bb0abf0" prot="private" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>m_uniqueIDTemplates</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c" prot="protected" virt="pure-virtual"><scope>org::jgap::BaseGene</scope><name>newGeneInternal</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::BaseGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::BaseGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::BaseGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7" prot="public" virt="non-virtual"><scope>org::jgap::BaseGene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
