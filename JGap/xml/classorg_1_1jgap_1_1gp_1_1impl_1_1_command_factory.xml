<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory" kind="class" prot="public">
    <compoundname>org::jgap::gp::impl::CommandFactory</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a7d6ce98f1fdbc2b0dc87d69701afb866" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.gp.impl.CommandFactory.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.2 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a7def106ec48870af803918a2860da5bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
        <definition>static CommandGene [] org.jgap.gp.impl.CommandFactory.createStoreCommands</definition>
        <argsstring>(CommandGene[] a_target, GPConfiguration a_conf, Class a_type, String a_prefix, int a_count)</argsstring>
        <name>createStoreCommands</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
          <declname>a_target</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>a_prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_count</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="27" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a2ccd8570f7a5351ba0db9217d728f7e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
        <definition>static CommandGene [] org.jgap.gp.impl.CommandFactory.createWriteOnlyCommands</definition>
        <argsstring>(CommandGene[] a_target, GPConfiguration a_conf, Class a_type, String a_prefix, int a_count, boolean a_noValidation)</argsstring>
        <name>createWriteOnlyCommands</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
          <declname>a_target</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>a_prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_count</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>a_noValidation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="46" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="46" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a5608719a4fc2d8daeb5ae9f56dd4cd00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
        <definition>static CommandGene [] org.jgap.gp.impl.CommandFactory.createReadOnlyCommands</definition>
        <argsstring>(CommandGene[] a_target, GPConfiguration a_conf, Class a_type, String a_prefix, int a_count, int a_startIndex, boolean a_noValidation)</argsstring>
        <name>createReadOnlyCommands</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
          <declname>a_target</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>a_prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_startIndex</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>a_noValidation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="65" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="65" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a3983da01b9cc6fdc92839328e8061849" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
        <definition>static CommandGene [] org.jgap.gp.impl.CommandFactory.createStackCommands</definition>
        <argsstring>(CommandGene[] a_target, GPConfiguration a_conf, Class a_type)</argsstring>
        <name>createStackCommands</name>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[]</type>
          <declname>a_target</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>a_type</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="85" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="85" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Easily creates single and batched consistent command objects.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" line="23" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/gp/impl/CommandFactory.java" bodystart="23" bodyend="97"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a5608719a4fc2d8daeb5ae9f56dd4cd00" prot="public" virt="non-virtual"><scope>org::jgap::gp::impl::CommandFactory</scope><name>createReadOnlyCommands</name></member>
      <member refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a3983da01b9cc6fdc92839328e8061849" prot="public" virt="non-virtual"><scope>org::jgap::gp::impl::CommandFactory</scope><name>createStackCommands</name></member>
      <member refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a7def106ec48870af803918a2860da5bc" prot="public" virt="non-virtual"><scope>org::jgap::gp::impl::CommandFactory</scope><name>createStoreCommands</name></member>
      <member refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a2ccd8570f7a5351ba0db9217d728f7e0" prot="public" virt="non-virtual"><scope>org::jgap::gp::impl::CommandFactory</scope><name>createWriteOnlyCommands</name></member>
      <member refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_command_factory_1a7d6ce98f1fdbc2b0dc87d69701afb866" prot="private" virt="non-virtual"><scope>org::jgap::gp::impl::CommandFactory</scope><name>CVS_REVISION</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
