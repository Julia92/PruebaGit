<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="math_problem_distributed_2_client_evolve_strategy_8java" kind="file">
    <compoundname>ClientEvolveStrategy.java</compoundname>
    <innerclass refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy" prot="public">examples::grid::mathProblemDistributed::ClientEvolveStrategy</innerclass>
    <innernamespace refid="namespaceexamples_1_1grid_1_1math_problem_distributed">examples::grid::mathProblemDistributed</innernamespace>
    <innernamespace refid="namespaceorg_1_1jgap_1_1distr_1_1grid_1_1gp_1_1">org::jgap::distr::grid::gp::</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>JGAP.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>JGAP<sp/>offers<sp/>a<sp/>dual<sp/>license<sp/>model<sp/>containing<sp/>the<sp/>LGPL<sp/>as<sp/>well<sp/>as<sp/>the<sp/>MPL.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>licensing<sp/>information<sp/>please<sp/>see<sp/>the<sp/>file<sp/>license.txt<sp/>included<sp/>with<sp/>JGAP</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>or<sp/>have<sp/>a<sp/>look<sp/>at<sp/>the<sp/>top<sp/>of<sp/>class<sp/>org.jgap.Chromosome<sp/>which<sp/>representatively</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>includes<sp/>the<sp/>JGAP<sp/>license<sp/>policy<sp/>applicable<sp/>for<sp/>any<sp/>file<sp/>delivered<sp/>with<sp/>JGAP.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespaceexamples_1_1grid_1_1math_problem_distributed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">examples.grid.mathProblemDistributed;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.apache.log4j.*;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.*;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.distr.grid.*;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.distr.grid.gp.*;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.*;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.function.*;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.impl.*;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.jgap.gp.terminal.*;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy" kindref="compound">ClientEvolveStrategy</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>GPProblem<sp/>implements<sp/>IClientEvolveStrategyGP<sp/>{</highlight></codeline>
<codeline lineno="30" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aea23fd80f9fdb26be3ebb3bb3836b84f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aea23fd80f9fdb26be3ebb3bb3836b84f" kindref="member">CVS_REVISION</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$Revision:<sp/>1.14<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ab9dbd30db73c004ae43e231238c85308" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Logger<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ab9dbd30db73c004ae43e231238c85308" kindref="member">log</ref><sp/>=<sp/>Logger.getLogger(ClientEvolveStrategy.class);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>private<sp/>GPConfiguration<sp/>m_config;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae48b9c70ed4cbd0fc93c7ac650ec0b8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IClientFeedbackGP<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae48b9c70ed4cbd0fc93c7ac650ec0b8a" kindref="member">m_clientFeedback</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae9dde44546202496c6ec538cfe89665f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae9dde44546202496c6ec538cfe89665f" kindref="member">m_maxEvolutions</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GPPopulation<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_grid_configuration" kindref="compound">GridConfiguration</ref><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" kindref="member">m_gridConfig</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aac86cd006f0a8604f858b04d8a6922d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Float[]<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aac86cd006f0a8604f858b04d8a6922d8" kindref="member">x</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Float[20];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a78a08fbfc56464ac25a1578cac4acefc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a78a08fbfc56464ac25a1578cac4acefc" kindref="member">y</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[20];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0ad8d79a672c0357771f54c021b4c090" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0ad8d79a672c0357771f54c021b4c090" kindref="member">ClientEvolveStrategy</ref>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_grid_configuration" kindref="compound">GridConfiguration</ref><sp/>a_gridConfig)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>super();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" kindref="member">m_gridConfig</ref><sp/>=<sp/>a_gridConfig;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1adeea4800a3e2af53a324a306bd2c3c4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1adeea4800a3e2af53a324a306bd2c3c4c" kindref="member">initialize</ref>(IGridClientMediator<sp/>a_gc,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>a_config,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IClientFeedbackGP<sp/>a_clientFeedback)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>log.info(</highlight><highlight class="stringliteral">&quot;Initializing...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>super.setGPConfiguration(a_config);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae48b9c70ed4cbd0fc93c7ac650ec0b8a" kindref="member">m_clientFeedback</ref><sp/>=<sp/>a_clientFeedback;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>a<sp/>randomly<sp/>initialized<sp/>population.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_genotype" kindref="compound">GPGenotype</ref><sp/>gen<sp/>=<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a2f74acd3f4568cae66d8ee7ca2ba0012" kindref="member">create</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref><sp/>=<sp/>gen.getGPPopulation();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a7b0c5a677297a08fffe823b94bbc8d9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a7b0c5a677297a08fffe823b94bbc8d9c" kindref="member">afterWorkRequestsSent</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>clear<sp/>population<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>clear<sp/>population,<sp/>otherwise<sp/>it<sp/>would<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endlessly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pop.clear();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.warn(</highlight><highlight class="stringliteral">&quot;Population<sp/>cleared&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1acddb8ec026e7127a7f2577365d0baaae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1acddb8ec026e7127a7f2577365d0baaae" kindref="member">isEvolutionFinished</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_evolutionsDone)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>best<sp/>solution<sp/>is<sp/>satisfying.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IGPProgram<sp/>fittest<sp/>=<sp/>m_pop.determineFittestProgram();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fittest.getFitnessValue()<sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>complete<sp/>evolution<sp/>cycle<sp/>3<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_evolutionsDone<sp/>&gt;<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1ae9dde44546202496c6ec538cfe89665f" kindref="member">m_maxEvolutions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a92541f850491d647fe5607ce5fb48e0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a92541f850491d647fe5607ce5fb48e0b" kindref="member">onFinished</ref>()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>IGPProgram<sp/>best<sp/>=<sp/>m_pop.determineFittestProgram();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>m_clientFeedback.info(</highlight><highlight class="stringliteral">&quot;Best<sp/>solution<sp/>evolved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>best.getFitnessValue());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>m_clientFeedback.info(</highlight><highlight class="stringliteral">&quot;Solution:<sp/>&quot;</highlight><highlight class="normal">+best.toStringNorm(0));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a821d02bb9ee9282711b6db57343e2f2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a821d02bb9ee9282711b6db57343e2f2f" kindref="member">evolve</ref>()</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>in<sp/>this<sp/>example<sp/>as<sp/>evolution<sp/>takes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>workers<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1af33956d48611de7061d107744aa3d599" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>JGAPRequestGP[]<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1af33956d48611de7061d107744aa3d599" kindref="member">generateWorkRequests</ref>(JGAPRequestGP<sp/>m_workReq,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IRequestSplitStrategyGP<sp/>m_splitStrategy,<sp/>Object<sp/>data)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>JGAPRequestGP[]<sp/>workList;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref>.isFirstEmpty())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log.warn(</highlight><highlight class="stringliteral">&quot;Initial<sp/>population<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>m_workReq.setPopulation(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_workReq.setConfiguration(getGPConfiguration());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getGPConfiguration().getJGAPFactory()<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight><highlight class="stringliteral">&quot;JGAPFactory<sp/>must<sp/>not<sp/>be<sp/>null!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>workList<sp/>=<sp/>m_splitStrategy.split(m_workReq);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>workList;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aeb5ce2077915475eb1b2a8b9debc8754" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1aeb5ce2077915475eb1b2a8b9debc8754" kindref="member">resultReceived</ref>(JGAPResultGP<sp/>a_result)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>very<sp/>simplistic<sp/>implementation!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>GPPopulation<sp/>pop<sp/>=<sp/>a_result.getPopulation();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pop<sp/>==<sp/>null<sp/>||<sp/>pop.isFirstEmpty())<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IGPProgram<sp/>best<sp/>=<sp/>a_result.getFittest();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.error(</highlight><highlight class="stringliteral">&quot;Empty<sp/>result<sp/>received&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref>.getGPProgram(0).getFitnessValue()<sp/>&gt;<sp/>best.getFitnessValue())<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pop.setGPProgram(0,<sp/>best);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pop.addFittestProgram(best);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1afb7ebd90cdce7410e2d66a3b5fa512a4" kindref="member">m_pop</ref><sp/>=<sp/>pop;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a39a213813f301a11505afb216d976330" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1terminal_1_1_variable" kindref="compound">Variable</ref><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a39a213813f301a11505afb216d976330" kindref="member">createVariable</ref>(<ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>a_conf)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Variable.create(a_conf,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">CommandGene.FloatClass</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a9b2fa5b55d1c7886bec5251f0c11710c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[][]<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a9b2fa5b55d1c7886bec5251f0c11710c" kindref="member">getNodeSets</ref>(<ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>conf)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" kindref="member">m_gridConfig</ref>.<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_grid_configuration_1a500a7cfca41775f22033ebc1288dc547" kindref="member">getVariable</ref>()<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_gridConfig.setVariable(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a39a213813f301a11505afb216d976330" kindref="member">createVariable</ref>(conf));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>[][]<sp/>nodeSets<sp/>=<sp/>{<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gridConfig.getVariable(),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Add(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Add3(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Subtract(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Multiply(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Multiply3(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Divide(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Sine(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exp(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Pow(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Terminal(conf,<sp/><ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene" kindref="compound">CommandGene</ref>.<ref refid="classorg_1_1jgap_1_1gp_1_1_command_gene_1a45c853c890dbbba4a629bca1688ab16e" kindref="member">FloatClass</ref>,<sp/>2.0d,<sp/>10.0d,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeSets;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a2f74acd3f4568cae66d8ee7ca2ba0012" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_genotype" kindref="compound">GPGenotype</ref><sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a2f74acd3f4568cae66d8ee7ca2ba0012" kindref="member">create</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throws<sp/><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_configuration" kindref="compound">GPConfiguration</ref><sp/>conf<sp/>=<sp/>getGPConfiguration();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gridConfig.setTypes(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Class[]<sp/>{CommandGene.FloatClass});</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Class[]<sp/>types<sp/>=<sp/>{CommandGene.FloatClass};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gridConfig.setArgTypes(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Class[][]<sp/>{<sp/>{}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Class[][]<sp/>argTypes<sp/>=<sp/>{<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gridConfig.setNodeSets(<ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a9b2fa5b55d1c7886bec5251f0c11710c" kindref="member">getNodeSets</ref>(conf));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>CommandGene[][]<sp/>nodeSets<sp/>=<sp/>getNodeSets(conf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>genotype<sp/>with<sp/>initial<sp/>population.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gridConfig.setMaxNodes(20);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1jgap_1_1gp_1_1impl_1_1_g_p_genotype" kindref="compound">GPGenotype</ref><sp/>result<sp/>=<sp/>GPGenotype.randomInitialGenotype(conf,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gridConfig.getTypes(),<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" kindref="member">m_gridConfig</ref>.getArgTypes(),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gridConfig.getNodeSets(),<sp/><ref refid="classexamples_1_1grid_1_1math_problem_distributed_1_1_client_evolve_strategy_1a0577ef3c95315bf1e2afe9e74c775861" kindref="member">m_gridConfig</ref>.getMaxNodes(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>result.putVariable(m_gridConfig.getVariable());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.putVariable(m_gridConfig.getVariable());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/grid/mathProblemDistributed/ClientEvolveStrategy.java"/>
  </compounddef>
</doxygen>
