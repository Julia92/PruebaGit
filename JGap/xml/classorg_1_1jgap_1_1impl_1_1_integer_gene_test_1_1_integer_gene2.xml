<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2" kind="class" prot="package">
    <compoundname>org::jgap::impl::IntegerGeneTest::IntegerGene2</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" prot="public" virt="non-virtual">org.jgap.impl.IntegerGene</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2_1aaef6811c80decb00b9039d366286981b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.IntegerGeneTest.IntegerGene2.IntegerGene2</definition>
        <argsstring>()</argsstring>
        <name>IntegerGene2</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" line="931" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" bodystart="931" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2_1a6623c24d23d0a5e98891f1a8f3120ac9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.IntegerGeneTest.IntegerGene2.IntegerGene2</definition>
        <argsstring>(final Configuration a_conf, int a_lowerBounds, int a_upperBounds)</argsstring>
        <name>IntegerGene2</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_lowerBounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_upperBounds</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" line="936" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" bodystart="936" bodyend="940"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Descendent of <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> being virtually the same but of a different class so that equals and compareTo should signal a difference.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="14646">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="14645">
        <label>Serializable</label>
      </node>
      <node id="14644">
        <label>Comparable</label>
      </node>
      <node id="14647">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="14642">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="14643" relation="public-inheritance">
        </childnode>
        <childnode refid="14647" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14640">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="14641" relation="public-inheritance">
        </childnode>
        <childnode refid="14648" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14643">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="14644" relation="public-inheritance">
        </childnode>
        <childnode refid="14645" relation="public-inheritance">
        </childnode>
        <childnode refid="14646" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14648">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="14641">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="14642" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14639">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="14640" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14656">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="14671">
        <label>List</label>
      </node>
      <node id="14670">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14660" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14667">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14655">
        <label>Serializable</label>
      </node>
      <node id="14654">
        <label>Comparable</label>
      </node>
      <node id="14657">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="14652">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="14653" relation="public-inheritance">
        </childnode>
        <childnode refid="14657" relation="public-inheritance">
        </childnode>
        <childnode refid="14658" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="14672" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="14650">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="14651" relation="public-inheritance">
        </childnode>
        <childnode refid="14673" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14660">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="14661" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14665">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14672">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14668">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14660" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14661">
        <label>Cloneable</label>
      </node>
      <node id="14653">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="14654" relation="public-inheritance">
        </childnode>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14673">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="14651">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="14652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14663">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14669">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14662">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="14660" relation="public-inheritance">
        </childnode>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14666">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="14654" relation="public-inheritance">
        </childnode>
        <childnode refid="14660" relation="public-inheritance">
        </childnode>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14649">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="14650" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14658">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="14659" relation="public-inheritance">
        </childnode>
        <childnode refid="14655" relation="public-inheritance">
        </childnode>
        <childnode refid="14660" relation="public-inheritance">
        </childnode>
        <childnode refid="14654" relation="public-inheritance">
        </childnode>
        <childnode refid="14662" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="14663" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="14664" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="14665" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="14666" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="14667" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="14668" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="14669" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="14670" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="14671" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="14664">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="14659">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" line="930" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/IntegerGeneTest.java" bodystart="929" bodyend="941"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1af36f1f47459727cb4aefa0140ef03585" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>applyMutation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a8bf63bc12293cf330f6aee95d89b644e" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e" prot="protected" virt="pure-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getInternalValue</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ada11b926a9171e6bc6a1d16a28b62d89" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getLowerBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1aeadfb567a20ff5e7000d242f4c392ddf" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>getUpperBounds</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a5a2ddbdf4b8deab10c3c7c7c6ee0a4b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a91bfa275e9a9ba43b6cab6f368aa1526" prot="protected" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>INTEGER_RANGE</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae8edebc964e1c4e91951ecda1f26109c" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1afe1aeaaa89646a83a34edb94cd58b6af" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1affb4e686eaf110e8451f4afab7c0d2d6" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>IntegerGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2_1aaef6811c80decb00b9039d366286981b" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>IntegerGene2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1_1_integer_gene2_1a6623c24d23d0a5e98891f1a8f3120ac9" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>IntegerGene2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a90c518c0ed7c08016323ea88b9fb4078" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>intValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1ae3c6bf8773b6c13dfe231343be395e0a" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>mapValueToWithinBounds</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a225ed6a7409f890ce21009051eb7392f" prot="protected" virt="virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>newGeneInternal</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>NumberGene</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a7bb0f704f675017aee7fec0ab7e88310" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setToRandomValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual" ambiguityscope="org::jgap::impl::NumberGene."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a94a345f1919c4840dd0b9eecf7afc6a3" prot="public" virt="non-virtual" ambiguityscope="org::jgap::IPersistentRepresentation."><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d" prot="public" virt="non-virtual"><scope>org::jgap::impl::IntegerGeneTest::IntegerGene2</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
