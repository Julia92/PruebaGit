<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_double_gene" kind="class" prot="public">
    <compoundname>org::jgap::impl::DoubleGene</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1impl_1_1_number_gene" prot="public" virt="non-virtual">org.jgap.impl.NumberGene</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_persistent_representation" prot="public" virt="non-virtual">org.jgap.IPersistentRepresentation</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1aae41c294c77e89a7971fd485b9454507" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.DoubleGene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.40 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.impl.DoubleGene.m_upperBound</definition>
        <argsstring></argsstring>
        <name>m_upperBound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The upper bounds of values represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. If not explicitly provided by the user, this should be set to Double.MAX_VALUE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="33" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" compoundref="_double_gene_8java" startline="328" endline="332">org.jgap.impl.DoubleGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1acf5e9830d934ce129e690dafd1ee0101" compoundref="_double_gene_8java" startline="90" endline="96">org.jgap.impl.DoubleGene.DoubleGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" compoundref="_double_gene_8java" startline="133" endline="146">org.jgap.impl.DoubleGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a6310705faae7069e39bc0da68b9b2e3b" compoundref="_double_gene_8java" startline="384" endline="386">org.jgap.impl.DoubleGene.getUpperBound</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" compoundref="_double_gene_8java" startline="288" endline="317">org.jgap.impl.DoubleGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" compoundref="_double_gene_8java" startline="108" endline="117">org.jgap.impl.DoubleGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7" compoundref="_double_gene_8java" startline="252" endline="257">org.jgap.impl.DoubleGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" compoundref="_double_gene_8java" startline="167" endline="227">org.jgap.impl.DoubleGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e" compoundref="_double_gene_8java" startline="358" endline="368">org.jgap.impl.DoubleGene.toString</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.jgap.impl.DoubleGene.m_lowerBound</definition>
        <argsstring></argsstring>
        <name>m_lowerBound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The lower bounds of values represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. If not explicitly provided by the user, this should be set to Double.MIN_VALUE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="39" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" compoundref="_double_gene_8java" startline="328" endline="332">org.jgap.impl.DoubleGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1acf5e9830d934ce129e690dafd1ee0101" compoundref="_double_gene_8java" startline="90" endline="96">org.jgap.impl.DoubleGene.DoubleGene</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a5d7bdb546951bbae98ee0aa5d7f3fa09" compoundref="_double_gene_8java" startline="375" endline="377">org.jgap.impl.DoubleGene.getLowerBound</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" compoundref="_double_gene_8java" startline="133" endline="146">org.jgap.impl.DoubleGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" compoundref="_double_gene_8java" startline="288" endline="317">org.jgap.impl.DoubleGene.mapValueToWithinBounds</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" compoundref="_double_gene_8java" startline="108" endline="117">org.jgap.impl.DoubleGene.newGeneInternal</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7" compoundref="_double_gene_8java" startline="252" endline="257">org.jgap.impl.DoubleGene.setToRandomValue</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" compoundref="_double_gene_8java" startline="167" endline="227">org.jgap.impl.DoubleGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e" compoundref="_double_gene_8java" startline="358" endline="368">org.jgap.impl.DoubleGene.toString</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1aea962046b97d87bd6e4b9180295587eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.DoubleGene.DoubleGene</definition>
        <argsstring>()</argsstring>
        <name>DoubleGene</name>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref> with default settings. No bounds will be put into effect for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance, other than the standard range of double values.</para><para>Attention: The configuration used is the one set with the static method Genotype.setConfiguration.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="54" bodyend="57"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" compoundref="_double_gene_8java" startline="108" endline="117">org.jgap.impl.DoubleGene.newGeneInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1ab207a560e848e93ae4ae53ad1b422357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.DoubleGene.DoubleGene</definition>
        <argsstring>(final Configuration a_config)</argsstring>
        <name>DoubleGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref> with default settings. No bounds will be put into effect for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance, other than the standard range of double values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="70" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1acf5e9830d934ce129e690dafd1ee0101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.jgap.impl.DoubleGene.DoubleGene</definition>
        <argsstring>(final Configuration a_config, final double a_lowerBound, final double a_upperBound)</argsstring>
        <name>DoubleGene</name>
        <param>
          <type>final <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
          <declname>a_config</declname>
        </param>
        <param>
          <type>final double</type>
          <declname>a_lowerBound</declname>
        </param>
        <param>
          <type>final double</type>
          <declname>a_upperBound</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref> with the specified lower and upper bounds for values (alleles) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>the lowest value that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> may possess, inclusively </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>the highest value that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> may possess, inclusively </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_invalid_configuration_exception" kindref="compound">InvalidConfigurationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="90" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="90" bodyend="96"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.DoubleGene.getPersistentRepresentation</definition>
        <argsstring>()</argsstring>
        <name>getPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a07bf7dbaa8de08e268c9357a46e79dac">getPersistentRepresentation</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> that includes any information required to reconstruct it at a later time, such as its value and internal state. This string will be used to represent this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in XML persistence. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><simplesect kind="return"><para>a string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s current state</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="133" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="133" bodyend="146"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.DoubleGene.setValueFromPersistentRepresentation</definition>
        <argsstring>(String a_representation)</argsstring>
        <name>setValueFromPersistentRepresentation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_i_persistent_representation_1a94a345f1919c4840dd0b9eecf7afc6a3">setValueFromPersistentRepresentation</reimplements>
        <param>
          <type>String</type>
          <declname>a_representation</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value and internal state of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from the string representation returned by a previous invocation of the <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" kindref="member">getPersistentRepresentation()</ref> method. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_representation</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representation retrieved from a prior call to the <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" kindref="member">getPersistentRepresentation()</ref> method</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation does not support the given string representation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000162"><xreftitle>Todo</xreftitle><xrefdescription><para>unify first part of method with <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref> </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="167" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="167" bodyend="227"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <references refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" compoundref="_gene_8java" startline="38">org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1ad4a32fa2f8796bc1598539e93a72e39f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.impl.DoubleGene.doubleValue</definition>
        <argsstring>()</argsstring>
        <name>doubleValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the double value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>, which may be more convenient in some cases than the more general <ref refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" kindref="member">getAllele()</ref> method.</para><para><simplesect kind="return"><para>the double value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="236" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="236" bodyend="238"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" compoundref="_double_gene_8java" startline="328" endline="332">org.jgap.impl.DoubleGene.applyMutation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1ab562980244f71d28c752654f451889c0" compoundref="_double_gene_test_8java" startline="713" endline="719">org.jgap.impl.DoubleGeneTest.testApplyMutation_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1afb8af34f87912cda2dc1786bf0370443" compoundref="_double_gene_test_8java" startline="797" endline="803">org.jgap.impl.DoubleGeneTest.testApplyMutation_6</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aade85a6cc2c643ee2b7e7e6a3613c32e" compoundref="_double_gene_test_8java" startline="276" endline="281">org.jgap.impl.DoubleGeneTest.testDoubleValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aca6abd8b365765849b6d374c7002679a" compoundref="_double_gene_test_8java" startline="288" endline="299">org.jgap.impl.DoubleGeneTest.testDoubleValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a6e2fa115a36266ab319e1ed06aa94a9a" compoundref="_double_gene_test_8java" startline="369" endline="374">org.jgap.impl.DoubleGeneTest.testSetAllele_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a8a382c48b3a10e03189bcc4c9d21a936" compoundref="_double_gene_test_8java" startline="384" endline="389">org.jgap.impl.DoubleGeneTest.testSetAllele_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1af8168e17d3165a64df57d0313a4ed347" compoundref="_double_gene_test_8java" startline="399" endline="404">org.jgap.impl.DoubleGeneTest.testSetAllele_6</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a7e0f423c7773d1df23c8ecd61d7793a6" compoundref="_composite_gene_test_8java" startline="883" endline="890">org.jgap.impl.CompositeGeneTest.testSetToRandomValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_test_1a34f299e5071f10f1f2528ff5b3818ab1" compoundref="_composite_gene_test_8java" startline="899" endline="906">org.jgap.impl.CompositeGeneTest.testSetToRandomValue_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aed0830787086b2aad8b0cd18e6becacd" compoundref="_double_gene_test_8java" startline="606" endline="615">org.jgap.impl.DoubleGeneTest.testSetToRandomValue_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1ab12015b0af5317353074156ee3a94224" compoundref="_double_gene_test_8java" startline="622" endline="631">org.jgap.impl.DoubleGeneTest.testSetToRandomValue_4</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.DoubleGene.setToRandomValue</definition>
        <argsstring>(RandomGenerator a_numberGenerator)</argsstring>
        <name>setToRandomValue</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a">setToRandomValue</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_numberGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value (allele) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to a random Double value between the lower and upper bounds (if any) of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_numberGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number generator that should be used to create any random values. It&apos;s important to use this generator to maintain the user&apos;s flexibility to configure the genetic engine to use the random number generator of their choice</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="252" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="252" bodyend="257"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1a708f273cc71846c2ae973172f20f2c01">org.jgap.RandomGenerator.nextDouble</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.DoubleGene.applyMutation</definition>
        <argsstring>(int index, double a_percentage)</argsstring>
        <name>applyMutation</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4">applyMutation</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>See interface <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> for description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored (because there is only 1 atomic element) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>percentage of mutation (greater than -1 and smaller than 1)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="328" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="328" bodyend="332"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ad4a32fa2f8796bc1598539e93a72e39f" compoundref="_double_gene_8java" startline="236" endline="238">org.jgap.impl.DoubleGene.doubleValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac1e682ba44a3708cc505d78415ee5b6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.impl.DoubleGene.hashCode</definition>
        <argsstring>()</argsstring>
        <name>hashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modified <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac1e682ba44a3708cc505d78415ee5b6d" kindref="member">hashCode()</ref> function to return different hashcodes for differently ordered genes in a chromosome. <simplesect kind="return"><para>-3 if no allele set, otherwise value return by <ref refid="classorg_1_1jgap_1_1_base_gene_1af842a106d90ca973956f560ae448464e" kindref="member">BaseGene.hashCode()</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="342" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="342" bodyend="349"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a2832659fb3d8a1adec0c88443be3619c" compoundref="_double_gene_test_8java" startline="847" endline="851">org.jgap.impl.DoubleGeneTest.testHashCode_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a2213279d3483e26ce78597f3e00ea859" compoundref="_double_gene_test_8java" startline="859" endline="870">org.jgap.impl.DoubleGeneTest.testHashCode_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.impl.DoubleGene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s value that may be useful for display purposes</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="358" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="358" bodyend="368"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" compoundref="_number_gene_8java" startline="165" endline="167">org.jgap.impl.NumberGene.getInternalValue</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a5d7bdb546951bbae98ee0aa5d7f3fa09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.impl.DoubleGene.getLowerBound</definition>
        <argsstring>()</argsstring>
        <name>getLowerBound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the lower bound set </para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="375" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="375" bodyend="377"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a18fa1aa01c4a566a565aee2c6614b18a" compoundref="_double_gene_test_8java" startline="909" endline="914">org.jgap.impl.DoubleGeneTest.testBounds_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1adfd7251ebe9018d0e5c914aa096153dc" compoundref="_double_gene_test_8java" startline="922" endline="927">org.jgap.impl.DoubleGeneTest.testBounds_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a6310705faae7069e39bc0da68b9b2e3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.impl.DoubleGene.getUpperBound</definition>
        <argsstring>()</argsstring>
        <name>getUpperBound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the upper bound set </para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="384" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="384" bodyend="386"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a18fa1aa01c4a566a565aee2c6614b18a" compoundref="_double_gene_test_8java" startline="909" endline="914">org.jgap.impl.DoubleGeneTest.testBounds_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1adfd7251ebe9018d0e5c914aa096153dc" compoundref="_double_gene_test_8java" startline="922" endline="927">org.jgap.impl.DoubleGeneTest.testBounds_1</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.impl.DoubleGene.newGeneInternal</definition>
        <argsstring>()</argsstring>
        <name>newGeneInternal</name>
        <reimplements refid="classorg_1_1jgap_1_1_base_gene_1aa423e96ffac5a9589fb3a4fbda791b3c">newGeneInternal</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides an implementation-independent means for creating new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instances.</para><para><simplesect kind="return"><para>a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance of the same type and with the same setup as this concrete <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="108" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="108" bodyend="117"/>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aea962046b97d87bd6e4b9180295587eb" compoundref="_double_gene_8java" startline="54" endline="57">org.jgap.impl.DoubleGene.DoubleGene</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac51a53a77b67a6ab2a220ac750be84a8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.jgap.impl.DoubleGene.compareToNative</definition>
        <argsstring>(Object o1, Object o2)</argsstring>
        <name>compareToNative</name>
        <reimplements refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1ad43d0cc91b4458f407085e30aaf6ce3e">compareToNative</reimplements>
        <param>
          <type>Object</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares to objects by first casting them into their expected type (e.g. Integer for <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>) and then calling the compareTo-method of the casted type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o1</parametername>
</parameternamelist>
<parameterdescription>
<para>first object to be compared, which is always not null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o2</parametername>
</parameternamelist>
<parameterdescription>
<para>second object to be compared, which is always not null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the object provided for comparison</para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="271" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void org.jgap.impl.DoubleGene.mapValueToWithinBounds</definition>
        <argsstring>()</argsstring>
        <name>mapValueToWithinBounds</name>
        <reimplements refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1abecc7e11d15220180de70184adbca1dd">mapValueToWithinBounds</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps the value of this <ref refid="classorg_1_1jgap_1_1impl_1_1_double_gene" kindref="compound">DoubleGene</ref> to within the bounds specified by the m_upperBounds and m_lowerBounds instance variables. The value&apos;s relative position within the double range will be preserved within the bounds range (in other words, if the value is about halfway between the double max and min, then the resulting value will be about halfway between the upper bounds and lower bounds). If the value is null or is already within the bounds, it will be left unchanged.</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="288" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="288" bodyend="317"/>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" compoundref="_base_gene_8java" startline="103" endline="105">org.jgap.BaseGene.getAllele</references>
        <references refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" compoundref="_base_gene_8java" startline="409" endline="411">org.jgap.BaseGene.getConfiguration</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" compoundref="_double_gene_8java" startline="39">org.jgap.impl.DoubleGene.m_lowerBound</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" compoundref="_double_gene_8java" startline="33">org.jgap.impl.DoubleGene.m_upperBound</references>
        <references refid="interfaceorg_1_1jgap_1_1_random_generator_1a708f273cc71846c2ae973172f20f2c01">org.jgap.RandomGenerator.nextDouble</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" compoundref="_number_gene_8java" startline="138" endline="149">org.jgap.impl.NumberGene.setAllele</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation that supports a double values for its allele. Upper and lower bounds may optionally be provided to restrict the range of legal values allowed by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance.</para><para>Partly copied from <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="12105">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="12104">
        <label>Serializable</label>
      </node>
      <node id="12103">
        <label>Comparable</label>
      </node>
      <node id="12106">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="12101">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="12102" relation="public-inheritance">
        </childnode>
        <childnode refid="12106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12102">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="12103" relation="public-inheritance">
        </childnode>
        <childnode refid="12104" relation="public-inheritance">
        </childnode>
        <childnode refid="12105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12107">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="12100">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="12101" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12099">
        <label>org.jgap.impl.DoubleGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_double_gene"/>
        <childnode refid="12100" relation="public-inheritance">
        </childnode>
        <childnode refid="12107" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12114">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="12129">
        <label>List</label>
      </node>
      <node id="12128">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12125">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12113">
        <label>Serializable</label>
      </node>
      <node id="12112">
        <label>Comparable</label>
      </node>
      <node id="12115">
        <label>org.jgap.IBusinessKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_business_key"/>
      </node>
      <node id="12110">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="12111" relation="public-inheritance">
        </childnode>
        <childnode refid="12115" relation="public-inheritance">
        </childnode>
        <childnode refid="12116" relation="usage">
          <edgelabel>m_configuration</edgelabel>
        </childnode>
        <childnode refid="12130" relation="usage">
          <edgelabel>m_geneAlleleChecker</edgelabel>
        </childnode>
      </node>
      <node id="12118">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="12119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12123">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12130">
        <label>org.jgap.IGeneConstraintChecker</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12126">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12119">
        <label>Cloneable</label>
      </node>
      <node id="12111">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="12112" relation="public-inheritance">
        </childnode>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12131">
        <label>org.jgap.IPersistentRepresentation</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_persistent_representation"/>
      </node>
      <node id="12109">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="12110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12121">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12127">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12120">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="12118" relation="public-inheritance">
        </childnode>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12124">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="12112" relation="public-inheritance">
        </childnode>
        <childnode refid="12118" relation="public-inheritance">
        </childnode>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12108">
        <label>org.jgap.impl.DoubleGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_double_gene"/>
        <childnode refid="12109" relation="public-inheritance">
        </childnode>
        <childnode refid="12131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12116">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="12117" relation="public-inheritance">
        </childnode>
        <childnode refid="12113" relation="public-inheritance">
        </childnode>
        <childnode refid="12118" relation="public-inheritance">
        </childnode>
        <childnode refid="12112" relation="public-inheritance">
        </childnode>
        <childnode refid="12120" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="12121" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="12122" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="12123" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="12124" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="12125" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="12126" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="12127" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="12128" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="12129" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="12122">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="12117">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/impl/DoubleGene.java" bodystart="24" bodyend="387"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>applyMutation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acea53de5bb68978322967e8019607f24" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>BaseGene</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>cleanup</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a72fa365cdcc9f2eb399fb8346a0a511b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>compareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a3d3b44370a460ad1467f4dd0520a2f95" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>compareTo</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac51a53a77b67a6ab2a220ac750be84a8" prot="protected" virt="virtual"><scope>org::jgap::impl::DoubleGene</scope><name>compareToNative</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aae41c294c77e89a7971fd485b9454507" prot="private" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9277d0b77c1e8ca244687a8ab8cf42f" prot="protected" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>decode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a86edb3d2c29e5064305fabc2dd59a3b9" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aea962046b97d87bd6e4b9180295587eb" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>DoubleGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ab207a560e848e93ae4ae53ad1b422357" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>DoubleGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1acf5e9830d934ce129e690dafd1ee0101" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>DoubleGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ad4a32fa2f8796bc1598539e93a72e39f" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>doubleValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a5e8fc72c1fccdb665113c0c34e3fa4b5" prot="protected" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>encode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>equals</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getBusinessKey</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getConfiguration</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ae9823bef7c550fc1533afb8ab2b34d93" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a123a17deb1c4d63e97ade4ec25e2917f" prot="protected" virt="virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getInternalValue</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a5d7bdb546951bbae98ee0aa5d7f3fa09" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getLowerBound</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ab53d562a62f5c72fc88c7e5315a23ed7" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getUniqueID</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1ad3c210e440f2b542391db5a909fda3b7" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a6310705faae7069e39bc0da68b9b2e3b" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>getUpperBound</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1ac1e682ba44a3708cc505d78415ee5b6d" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>hashCode</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>isCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a07193d7a0dc9a450d41463104ee72f02" prot="private" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>m_lowerBound</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a258aa95e2039227c87fb0c78758bba8b" prot="private" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>m_upperBound</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7487946984538fd71a24e0f8280a8e24" prot="protected" virt="virtual"><scope>org::jgap::impl::DoubleGene</scope><name>mapValueToWithinBounds</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>newGene</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1af714cdfc2b8f7f3e4d397cf149c09b95" prot="protected" virt="virtual"><scope>org::jgap::impl::DoubleGene</scope><name>newGeneInternal</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a5d2265fad09b1e672f56fc1279c9262b" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>NumberGene</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1acc4b1c46f3508b835bf95b9058eae3a0" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>S_APPLICATION_DATA</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_number_gene_1a694c7472b269b500d40eca6966e21291" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual" ambiguityscope="org::jgap::BaseGene."><scope>org::jgap::impl::DoubleGene</scope><name>setAllele</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afeb9a5f42018c057c8197fb0e7d57354" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::DoubleGene</scope><name>setApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1adad4ccd46efd7b2a3dc81bd0ba0c410c" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::DoubleGene</scope><name>setCompareApplicationData</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setConstraintChecker</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1afb39fbd8997971a140a9a4380ceecc4a" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual" ambiguityscope="org::jgap::Gene."><scope>org::jgap::impl::DoubleGene</scope><name>setEnergy</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setToRandomValue</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1aa7d9f1c3c2e727d496d66a85818c17d0" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>size</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e" prot="public" virt="non-virtual"><scope>org::jgap::impl::DoubleGene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
