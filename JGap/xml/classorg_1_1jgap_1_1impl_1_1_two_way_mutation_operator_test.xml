<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test" kind="class" prot="public">
    <compoundname>org::jgap::impl::TwoWayMutationOperatorTest</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" prot="public" virt="non-virtual">org.jgap.JGAPTestCase</basecompoundref>
    <innerclass refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1_1_genetic_operator_constraint_for_testing" prot="public">org::jgap::impl::TwoWayMutationOperatorTest::GeneticOperatorConstraintForTesting</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a97ea6c6f97bc4a9b52e6647d17371eba" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.TwoWayMutationOperatorTest.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.4 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1acb671a73091f904ba404f4a8341ee7c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Test</type>
        <definition>static Test org.jgap.impl.TwoWayMutationOperatorTest.suite</definition>
        <argsstring>()</argsstring>
        <name>suite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="29" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a63a92c35435399bf80c3955dbdd533c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.setUp</definition>
        <argsstring>()</argsstring>
        <name>setUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1add6698cf3ff31ab61fd8d9ebc2098bf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testConstruct_0</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="45" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="45" bodyend="50"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a929e74b0d9b86dfa7f0cb2ba88e347d3" compoundref="_two_way_mutation_operator_8java" startline="382" endline="384">org.jgap.impl.TwoWayMutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a87ad794efe1b14c660330de4054d819f" compoundref="_two_way_mutation_operator_8java" startline="301" endline="303">org.jgap.impl.TwoWayMutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ae758de62bd6d05954399b44507436f23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testConstruct_1</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="58" bodyend="65"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a2d8517cf9d49e3caf9ccb8ad9968df7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testConstruct_2</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="73" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="73" bodyend="78"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a929e74b0d9b86dfa7f0cb2ba88e347d3" compoundref="_two_way_mutation_operator_8java" startline="382" endline="384">org.jgap.impl.TwoWayMutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a87ad794efe1b14c660330de4054d819f" compoundref="_two_way_mutation_operator_8java" startline="301" endline="303">org.jgap.impl.TwoWayMutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a726dc47baf5840268b9be1c488928a00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testConstruct_3</definition>
        <argsstring>()</argsstring>
        <name>testConstruct_3</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="86" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="86" bodyend="92"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a929e74b0d9b86dfa7f0cb2ba88e347d3" compoundref="_two_way_mutation_operator_8java" startline="382" endline="384">org.jgap.impl.TwoWayMutationOperator.getMutationRate</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1a87ad794efe1b14c660330de4054d819f" compoundref="_two_way_mutation_operator_8java" startline="301" endline="303">org.jgap.impl.TwoWayMutationOperator.getMutationRateCalc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a99778a336f692aa1641e5c89f9314031" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_0</definition>
        <argsstring>()</argsstring>
        <name>testOperate_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that size of mutated set of chromosomes equals the size of original chromosomes. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="102" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="102" bodyend="111"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a5e7ecb066dff7b1ff085ba661258320a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_0_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_0_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that size of mutated set of chromosomes equals the size of original chromosomes.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="122" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="122" bodyend="147"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a67731e9951a3c7c0acdf94f029813297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_1</definition>
        <argsstring>()</argsstring>
        <name>testOperate_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutating with different types of genes contained in the population should be possible without exception.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="158" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="158" bodyend="170"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" compoundref="_j_g_a_p_test_case_8java" startline="33">org.jgap.JGAPTestCase.conf</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a9397117401cd6b22c1135fc9a4a39443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NullpointerException because of null <ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref>.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="180" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="180" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a7db4bcc04b20603ce74a442945cc4189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_3</definition>
        <argsstring>()</argsstring>
        <name>testOperate_3</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests if population size grows expectedly after two consecutive calls.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="203" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="203" bodyend="247"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a33dc84e10064aa3f546d39f1df943bcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_3_1</definition>
        <argsstring>()</argsstring>
        <name>testOperate_3_1</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert (adapted from Dan Clark&apos;s test of <ref refid="classorg_1_1jgap_1_1impl_1_1_mutation_operator" kindref="compound">MutationOperator</ref>) </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="255" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="255" bodyend="303"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_base_chromosome_1aef0e40ec9b5956389365f5c3144ab207" compoundref="_base_chromosome_8java" startline="283" endline="285">org.jgap.BaseChromosome.getGene</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ae3373c063cd72f1ba17b2c98d0db33b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_4</definition>
        <argsstring>()</argsstring>
        <name>testOperate_4</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensure that nothing is done. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="312" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="312" bodyend="330"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a60231c860d1fe97ef3099f755a9b5a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_5</definition>
        <argsstring>()</argsstring>
        <name>testOperate_5</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutation, especially tested for an <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="340" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="340" bodyend="375"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ad5e7a0c1980806808308431a03ead4af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_5_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_5_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutation, especially tested for an <ref refid="classorg_1_1jgap_1_1impl_1_1_integer_gene" kindref="compound">IntegerGene</ref>. Uses a <ref refid="classorg_1_1jgap_1_1impl_1_1_composite_gene" kindref="compound">CompositeGene</ref>.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="385" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="385" bodyend="429"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a5b9af4fc46f95af9b923d6b0b9f65d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_6</definition>
        <argsstring>()</argsstring>
        <name>testOperate_6</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following should be possible without exception.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="439" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="439" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a811f359c1815b31efa93a006b9fb31f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_6_2</definition>
        <argsstring>()</argsstring>
        <name>testOperate_6_2</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="453" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="453" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a3ee4f4d7d87956b8242bad4d2f185718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testOperate_8</definition>
        <argsstring>()</argsstring>
        <name>testOperate_8</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Considers <ref refid="interfaceorg_1_1jgap_1_1_i_genetic_operator_constraint" kindref="compound">IGeneticOperatorConstraint</ref>. Here, the mutation of a <ref refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene" kindref="compound">BooleanGene</ref> is forbidden by that constraint.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="470" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="470" bodyend="505"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a1d39352ae6f5842dbd8507d5a7770cd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testIsSerializable_0</definition>
        <argsstring>()</argsstring>
        <name>testIsSerializable_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures operator is implementing Serializable. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="514" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="514" bodyend="518"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" compoundref="_j_g_a_p_test_case_8java" startline="140" endline="142">org.jgap.JGAPTestCase.isSerializable</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a9afdce817ce9995938f7ad6b0158cdad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testDoSerialize_0</definition>
        <argsstring>()</argsstring>
        <name>testDoSerialize_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensures that operator and all objects contained implement Serializable. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="527" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="527" bodyend="534"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" compoundref="_j_g_a_p_test_case_8java" startline="153" endline="168">org.jgap.JGAPTestCase.doSerialize</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a424ae5203191621fde09ebd7e49f5a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testEquals_0</definition>
        <argsstring>()</argsstring>
        <name>testEquals_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test equals with classcast object.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="552" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="552" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a6c25d8783e8d7adb703d7e7e92b0c0aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.TwoWayMutationOperatorTest.testCompareTo_0</definition>
        <argsstring>()</argsstring>
        <name>testCompareTo_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="564" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="564" bodyend="580"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_1acc8b23fbd0c3b2ba1dea9c266eea9fe2" compoundref="_two_way_mutation_operator_8java" startline="352" endline="380">org.jgap.impl.TwoWayMutationOperator.compareTo</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests the <ref refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator" kindref="compound">TwoWayMutationOperator</ref> class.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.1 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18839">
        <label>org.jgap.impl.TwoWayMutationOperatorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test"/>
        <childnode refid="18840" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18840">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="18841" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18841">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18856">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="18861">
        <label>List</label>
      </node>
      <node id="18860">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
        <childnode refid="18848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18857">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18847">
        <label>Serializable</label>
      </node>
      <node id="18850">
        <label>Comparable</label>
      </node>
      <node id="18842">
        <label>org.jgap.impl.TwoWayMutationOperatorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test"/>
        <childnode refid="18843" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18862">
        <label>PrivateAccessor</label>
      </node>
      <node id="18843">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="18844" relation="public-inheritance">
        </childnode>
        <childnode refid="18845" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
        <childnode refid="18862" relation="usage">
          <edgelabel>privateAccessor</edgelabel>
        </childnode>
      </node>
      <node id="18844">
        <label>TestCase</label>
      </node>
      <node id="18848">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="18849" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18854">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18858">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
        <childnode refid="18848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18849">
        <label>Cloneable</label>
      </node>
      <node id="18852">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18859">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18851">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="18848" relation="public-inheritance">
        </childnode>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
        <childnode refid="18850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18855">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="18850" relation="public-inheritance">
        </childnode>
        <childnode refid="18848" relation="public-inheritance">
        </childnode>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
        <childnode refid="18856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18845">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="18846" relation="public-inheritance">
        </childnode>
        <childnode refid="18847" relation="public-inheritance">
        </childnode>
        <childnode refid="18848" relation="public-inheritance">
        </childnode>
        <childnode refid="18850" relation="public-inheritance">
        </childnode>
        <childnode refid="18851" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="18852" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="18853" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="18854" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="18855" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="18857" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="18858" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18859" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="18860" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="18861" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="18853">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="18846">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" line="25" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/TwoWayMutationOperatorTest.java" bodystart="24" bodyend="581"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>assertEquals</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a3ccc244fd7637efacc27641a3b4bac99" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>assertEqualsMap</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a0f7793db6d254be9753ed623ae09653b" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2b9df927cb9282d81abfd7daf6407416" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>conf</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a97ea6c6f97bc4a9b52e6647d17371eba" prot="private" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>doSerialize</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a1068930066ebd33ed69ccfe34a7f78ed" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>getNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a4f484987731cdc5276ee2575a165fcf3" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>isChromosomesEqual</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>isSerializable</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1adf378e0444b264c507f8cc459d8a26ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a472f2e2903439a8a484ba5ff0639fa02" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>privateAccessor</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a77399f44cc0bd6e5ac3832e0ad2b2f7e" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>setNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a63a92c35435399bf80c3955dbdd533c1" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>setUp</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1acb671a73091f904ba404f4a8341ee7c1" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>suite</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a6c25d8783e8d7adb703d7e7e92b0c0aa" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testCompareTo_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1add6698cf3ff31ab61fd8d9ebc2098bf5" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testConstruct_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ae758de62bd6d05954399b44507436f23" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testConstruct_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a2d8517cf9d49e3caf9ccb8ad9968df7d" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testConstruct_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a726dc47baf5840268b9be1c488928a00" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testConstruct_3</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a9afdce817ce9995938f7ad6b0158cdad" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testDoSerialize_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a424ae5203191621fde09ebd7e49f5a38" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testEquals_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a1d39352ae6f5842dbd8507d5a7770cd8" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testIsSerializable_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a99778a336f692aa1641e5c89f9314031" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a5e7ecb066dff7b1ff085ba661258320a" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_0_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a67731e9951a3c7c0acdf94f029813297" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a9397117401cd6b22c1135fc9a4a39443" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a7db4bcc04b20603ce74a442945cc4189" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_3</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a33dc84e10064aa3f546d39f1df943bcc" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_3_1</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ae3373c063cd72f1ba17b2c98d0db33b1" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_4</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a60231c860d1fe97ef3099f755a9b5a0c" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_5</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1ad5e7a0c1980806808308431a03ead4af" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_5_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a5b9af4fc46f95af9b923d6b0b9f65d3a" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_6</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a811f359c1815b31efa93a006b9fb31f0" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_6_2</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_two_way_mutation_operator_test_1a3ee4f4d7d87956b8242bad4d2f185718" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>testOperate_8</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a653121052ecd3600acbcabf78dc1e193" prot="public" virt="non-virtual"><scope>org::jgap::impl::TwoWayMutationOperatorTest</scope><name>uniqueChromosomes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
