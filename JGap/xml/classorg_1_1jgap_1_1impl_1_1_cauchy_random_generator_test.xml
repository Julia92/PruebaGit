<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test" kind="class" prot="public">
    <compoundname>org::jgap::impl::CauchyRandomGeneratorTest</compoundname>
    <basecompoundref refid="classorg_1_1jgap_1_1_j_g_a_p_test_case" prot="public" virt="non-virtual">org.jgap.JGAPTestCase</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a22237fc504630f8b03232d9775e60169" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.impl.CauchyRandomGeneratorTest.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.11 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Test</type>
        <definition>static Test org.jgap.impl.CauchyRandomGeneratorTest.suite</definition>
        <argsstring>()</argsstring>
        <name>suite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="28" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1abbee59e7277ce668b7765d4fcd68c902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.CauchyRandomGeneratorTest.testGeneral</definition>
        <argsstring>()</argsstring>
        <name>testGeneral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if construction and calculation possible in general.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aa1d18ef9636a7adf1d57582ed2f66ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.CauchyRandomGeneratorTest.testNextCauchy_0</definition>
        <argsstring>()</argsstring>
        <name>testNextCauchy_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1ab4c709e82a32f56e87ada1947a8bd21a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.CauchyRandomGeneratorTest.testGetCauchyStdDeviation_0</definition>
        <argsstring>()</argsstring>
        <name>testGetCauchyStdDeviation_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="64" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="64" bodyend="68"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" compoundref="_j_g_a_p_test_case_8java" startline="30">org.jgap.JGAPTestCase.DELTA</references>
        <references refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_1ac137983fc618059f79e3c22cf18948c0" compoundref="_cauchy_random_generator_8java" startline="104" endline="106">org.jgap.impl.CauchyRandomGenerator.getCauchyStandardDeviation</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aeecddbf9c0574d1d322cce47eb6124f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.CauchyRandomGeneratorTest.testNextInt_0</definition>
        <argsstring>()</argsstring>
        <name>testNextInt_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="74" bodyend="81"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" compoundref="_j_g_a_p_test_case_8java" startline="241" endline="243">org.jgap.JGAPTestCase.assertEquals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a157a2f8e2d9d45bfd8dc63fc63cc4867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.impl.CauchyRandomGeneratorTest.testSerialize_0</definition>
        <argsstring>()</argsstring>
        <name>testSerialize_0</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests serializability capabilities.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.01 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000194"><xreftitle>Todo</xreftitle><xrefdescription><para>fix test as Java 5 uses java.util.concurrent.AtomicLong instead of sun.misc.AtomicLong </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="91" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="91" bodyend="104"/>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" compoundref="_j_g_a_p_test_case_8java" startline="153" endline="168">org.jgap.JGAPTestCase.doSerialize</references>
        <references refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" compoundref="_j_g_a_p_test_case_8java" startline="32">org.jgap.JGAPTestCase.privateAccessor</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tests the <ref refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator" kindref="compound">CauchyRandomGenerator</ref> class.</para><para><simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10304">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="10305" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10305">
        <label>TestCase</label>
      </node>
      <node id="10303">
        <label>org.jgap.impl.CauchyRandomGeneratorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test"/>
        <childnode refid="10304" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10320">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="10325">
        <label>List</label>
      </node>
      <node id="10324">
        <label>org.jgap.FitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_fitness_function"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
        <childnode refid="10312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10321">
        <label>org.jgap.RandomGenerator</label>
        <link refid="interfaceorg_1_1jgap_1_1_random_generator"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10311">
        <label>Serializable</label>
      </node>
      <node id="10314">
        <label>Comparable</label>
      </node>
      <node id="10326">
        <label>PrivateAccessor</label>
      </node>
      <node id="10307">
        <label>org.jgap.JGAPTestCase</label>
        <link refid="classorg_1_1jgap_1_1_j_g_a_p_test_case"/>
        <childnode refid="10308" relation="public-inheritance">
        </childnode>
        <childnode refid="10309" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
        <childnode refid="10326" relation="usage">
          <edgelabel>privateAccessor</edgelabel>
        </childnode>
      </node>
      <node id="10308">
        <label>TestCase</label>
      </node>
      <node id="10312">
        <label>org.jgap.util.ICloneable</label>
        <link refid="interfaceorg_1_1jgap_1_1util_1_1_i_cloneable"/>
        <childnode refid="10313" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10318">
        <label>org.jgap.FitnessEvaluator</label>
        <link refid="interfaceorg_1_1jgap_1_1_fitness_evaluator"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10322">
        <label>org.jgap.BulkFitnessFunction</label>
        <link refid="classorg_1_1jgap_1_1_bulk_fitness_function"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
        <childnode refid="10312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10313">
        <label>Cloneable</label>
      </node>
      <node id="10316">
        <label>org.jgap.IJGAPFactory</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_j_g_a_p_factory"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10323">
        <label>org.jgap.Configuration.ConfigurationConfigurable</label>
        <link refid="classorg_1_1jgap_1_1_configuration_1_1_configuration_configurable"/>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10306">
        <label>org.jgap.impl.CauchyRandomGeneratorTest</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test"/>
        <childnode refid="10307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10315">
        <label>org.jgap.IBreeder</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_breeder"/>
        <childnode refid="10312" relation="public-inheritance">
        </childnode>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
        <childnode refid="10314" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10319">
        <label>org.jgap.IChromosome</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome"/>
        <childnode refid="10314" relation="public-inheritance">
        </childnode>
        <childnode refid="10312" relation="public-inheritance">
        </childnode>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
        <childnode refid="10320" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10309">
        <label>org.jgap.Configuration</label>
        <link refid="classorg_1_1jgap_1_1_configuration"/>
        <childnode refid="10310" relation="public-inheritance">
        </childnode>
        <childnode refid="10311" relation="public-inheritance">
        </childnode>
        <childnode refid="10312" relation="public-inheritance">
        </childnode>
        <childnode refid="10314" relation="public-inheritance">
        </childnode>
        <childnode refid="10315" relation="usage">
          <edgelabel>m_breeder</edgelabel>
        </childnode>
        <childnode refid="10316" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="10317" relation="usage">
          <edgelabel>m_chromosomePool</edgelabel>
        </childnode>
        <childnode refid="10318" relation="usage">
          <edgelabel>m_fitnessEvaluator</edgelabel>
        </childnode>
        <childnode refid="10319" relation="usage">
          <edgelabel>m_sampleChromosome</edgelabel>
        </childnode>
        <childnode refid="10321" relation="usage">
          <edgelabel>m_randomGenerator</edgelabel>
        </childnode>
        <childnode refid="10322" relation="usage">
          <edgelabel>m_bulkObjectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10323" relation="usage">
          <edgelabel>m_config</edgelabel>
        </childnode>
        <childnode refid="10324" relation="usage">
          <edgelabel>m_objectiveFunction</edgelabel>
        </childnode>
        <childnode refid="10325" relation="usage">
          <edgelabel>m_geneticOperators</edgelabel>
        </childnode>
      </node>
      <node id="10317">
        <label>org.jgap.IChromosomePool</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_chromosome_pool"/>
      </node>
      <node id="10310">
        <label>Configurable</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" line="24" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/tests/org/jgap/impl/CauchyRandomGeneratorTest.java" bodystart="23" bodyend="105"/>
    <listofallmembers>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a55e45761cdd59a4489404bb7aa775b79" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>assertEquals</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a3ccc244fd7637efacc27641a3b4bac99" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>assertEqualsMap</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a0f7793db6d254be9753ed623ae09653b" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2b9df927cb9282d81abfd7daf6407416" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>assertInList</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a2f976f156a2ab015f30f0828671764e1" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>conf</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a22237fc504630f8b03232d9775e60169" prot="private" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>CVS_REVISION</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a9526215e5c49deb8f2811944f050d30b" prot="protected" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>DELTA</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1ac979f355528f40c594bf83535f3925b8" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>doSerialize</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a1068930066ebd33ed69ccfe34a7f78ed" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>getNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a4f484987731cdc5276ee2575a165fcf3" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>isChromosomesEqual</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a29296ff97e1d62bc9fd84f8571d3e654" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>isSerializable</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1adf378e0444b264c507f8cc459d8a26ee" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a472f2e2903439a8a484ba5ff0639fa02" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>JGAPTestCase</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a32462e38877d88fea7d7aad0538a42bd" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>privateAccessor</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a77399f44cc0bd6e5ac3832e0ad2b2f7e" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>setNestedField</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a7278f46bafa651d39a1d301f6edacece" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>setUp</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a6e12cb315bb90d5c3439b3d7b97d4a32" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>suite</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1abbee59e7277ce668b7765d4fcd68c902" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>testGeneral</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1ab4c709e82a32f56e87ada1947a8bd21a" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>testGetCauchyStdDeviation_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aa1d18ef9636a7adf1d57582ed2f66ce8" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>testNextCauchy_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1aeecddbf9c0574d1d322cce47eb6124f5" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>testNextInt_0</name></member>
      <member refid="classorg_1_1jgap_1_1impl_1_1_cauchy_random_generator_test_1a157a2f8e2d9d45bfd8dc63fc63cc4867" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>testSerialize_0</name></member>
      <member refid="classorg_1_1jgap_1_1_j_g_a_p_test_case_1a653121052ecd3600acbcabf78dc1e193" prot="public" virt="non-virtual"><scope>org::jgap::impl::CauchyRandomGeneratorTest</scope><name>uniqueChromosomes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
