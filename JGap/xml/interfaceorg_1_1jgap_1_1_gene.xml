<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interfaceorg_1_1jgap_1_1_gene" kind="interface" prot="public">
    <compoundname>org::jgap::Gene</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Comparable</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1jgap_1_1_i_unique_key" prot="public" virt="non-virtual">org.jgap.IUniqueKey</basecompoundref>
    <derivedcompoundref refid="classorg_1_1jgap_1_1_base_gene" prot="public" virt="non-virtual">org.jgap.BaseGene</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1jgap_1_1_i_composite_gene" prot="public" virt="non-virtual">org.jgap.ICompositeGene</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene" prot="public" virt="non-virtual">org.jgap.supergenes.Supergene</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="interfaceorg_1_1jgap_1_1_gene_1a771652182ee68c96d4107eee7692fee2" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.Gene.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.26 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.jgap.Gene.PERSISTENT_FIELD_DELIMITER</definition>
        <argsstring></argsstring>
        <name>PERSISTENT_FIELD_DELIMITER</name>
        <initializer>= &quot;:&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the delimiter that is used to separate fields in the persistent representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" bodystart="38" bodyend="-1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a8cab2846ca49b7aa6d6c23a028aded45" compoundref="_string_gene_8java" startline="331" endline="334">org.jgap.impl.StringGene.getBusinessKey</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1ac4e7c0fad73465365953b375cfa802a8" compoundref="_base_gene_8java" startline="413" endline="420">org.jgap.BaseGene.getBusinessKey</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105" compoundref="_double_gene_8java" startline="133" endline="146">org.jgap.impl.DoubleGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd" compoundref="_integer_gene_8java" startline="137" endline="150">org.jgap.impl.IntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a2ee1d1c02b875f75243d7b510961990f" compoundref="_mutiple_integer_gene_8java" startline="143" endline="157">org.jgap.impl.MutipleIntegerGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a2a35ceb76a665867ea10f34492dabf44" compoundref="_set_gene_8java" startline="222" endline="235">org.jgap.impl.SetGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a79af8bfa3fb168ff61d4945b9ed4a319" compoundref="_string_gene_8java" startline="306" endline="328">org.jgap.impl.StringGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845" compoundref="_map_gene_8java" startline="352" endline="372">org.jgap.impl.MapGene.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4650fd61d86fae144300e230de0a4c0b" compoundref="_number_gene_test_8java" startline="499" endline="502">org.jgap.impl.NumberGeneTest.NumberGeneImpl.getPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1aa2cb5e988d106f535d0c0a1e156d3dbc" compoundref="_set_gene_8java" startline="154" endline="203">org.jgap.impl.SetGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949" compoundref="_double_gene_8java" startline="167" endline="227">org.jgap.impl.DoubleGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a68a36ac6573668c924a01c99209dcd14" compoundref="_integer_gene_8java" startline="171" endline="228">org.jgap.impl.IntegerGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a2cf38361dd0f05d2bf89031796caa0ec" compoundref="_mutiple_integer_gene_8java" startline="178" endline="245">org.jgap.impl.MutipleIntegerGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a6300aa56c257d02ece7298fe6fccbc36" compoundref="_string_gene_8java" startline="205" endline="288">org.jgap.impl.StringGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1aa26832d5aefa69e44d2efd58e333e230" compoundref="_map_gene_8java" startline="248" endline="333">org.jgap.impl.MapGene.setValueFromPersistentRepresentation</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1a8b4e912e393e17c7c5aa86bc7df4150c" compoundref="_string_gene_test_8java" startline="667" endline="681">org.jgap.impl.StringGeneTest.testPersistentRepresentation_5_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a6db638a4ed7cb78bda76ad0b9cabbd40" compoundref="_integer_gene_test_8java" startline="485" endline="492">org.jgap.impl.IntegerGeneTest.testPersistentRepresentation_6</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1ae4ddccb7bf569c0ed6cdc19def590964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></type>
        <definition>Gene org.jgap.Gene.newGene</definition>
        <argsstring>()</argsstring>
        <name>newGene</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a40f8f3d249145ad028892cd706ba9dae">newGene</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides an implementation-independent means for creating new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instances. The new instance that is created and returned should be setup with any implementation-dependent configuration that this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance is setup with (aside from the actual value, of course). For example, if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> were setup with bounds on its value, then the <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance returned from this method should also be setup with those same bounds. This is important, as the JGAP core will invoke this method on each <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in the sample <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref> in order to create each new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> in the same respective gene position for a new <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>. </para><para>It should be noted that nothing is guaranteed about the actual value of the returned <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> and it should therefore be considered to be undefined.</para><para><simplesect kind="return"><para>a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance of the same type and with the same setup as this concrete <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="60" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_chromosome_1aa6b7f021f64700b1926d5819f5fde5aa" compoundref="_chromosome_8java" startline="235" endline="250">org.jgap.Chromosome.initFromGene</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setAllele</definition>
        <argsstring>(Object a_newValue)</argsstring>
        <name>setAllele</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a3ba3b9efa4f1348e0ff4302cceeec6ae">setAllele</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1af102ddb4e963fc1355ea193ce414ca54">setAllele</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a9e22ec1330a1b2009da1f587c299ed74">setAllele</reimplementedby>
        <param>
          <type>Object</type>
          <declname>a_newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to the new given value. The actual type of the value is implementation-dependent.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1aa06c80639659ddbcfa1cfe7b7bb109f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.Gene.getAllele</definition>
        <argsstring>()</argsstring>
        <name>getAllele</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a35e754e8e217bdd26962e1c3c31d0169">getAllele</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a538336e75c89f2df35bc7301f187e9a7">getAllele</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a45f21f887ad34c02fbc88d41e5d0372d">getAllele</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a06d9f8415a3386a04b4eebc12850dbcf">getAllele</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the value represented by this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. The actual type of the value is implementation-dependent.</para><para><simplesect kind="return"><para>the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>.</para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="81" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1acfcc706bef6eae46a909f2c3d76f4284" compoundref="_string_gene_test_8java" startline="902" endline="913">org.jgap.impl.StringGeneTest.testApplyMutation_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ad31eda30431fa32afe1e53a6b77d6f35" compoundref="_string_gene_test_8java" startline="921" endline="929">org.jgap.impl.StringGeneTest.testApplyMutation_5</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1ad346e993537f0d1a1ed124f63c7c9482" compoundref="_integer_gene_test_8java" startline="500" endline="508">org.jgap.impl.IntegerGeneTest.testCompareToNative_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a429e3fd06bbdf213d8aa5c9f0cca2ade" compoundref="_double_gene_test_8java" startline="638" endline="646">org.jgap.impl.DoubleGeneTest.testCompareToNative_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1aaca30ad0957426960df82c3d0181720b" compoundref="_integer_gene_test_8java" startline="516" endline="524">org.jgap.impl.IntegerGeneTest.testCompareToNative_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a47cb3ecaac9abd7e3b49b900bb436e11" compoundref="_double_gene_test_8java" startline="653" endline="661">org.jgap.impl.DoubleGeneTest.testCompareToNative_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a3e55460ecfd6e9a92d11255b1cab4862" compoundref="_integer_gene_test_8java" startline="532" endline="540">org.jgap.impl.IntegerGeneTest.testCompareToNative_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a4d6da3b9788ffad15d4e32bcafe0c698" compoundref="_double_gene_test_8java" startline="668" endline="676">org.jgap.impl.DoubleGeneTest.testCompareToNative_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1ae900fa40f189e617a4a5cc956e408e39" compoundref="_integer_gene_test_8java" startline="548" endline="557">org.jgap.impl.IntegerGeneTest.testCompareToNative_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1ac42475019d5bb04cb8a6648e790e7254" compoundref="_double_gene_test_8java" startline="683" endline="691">org.jgap.impl.DoubleGeneTest.testCompareToNative_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1abc32d11e1df94a89b843ceca99889880" compoundref="_integer_gene_test_8java" startline="565" endline="574">org.jgap.impl.IntegerGeneTest.testCompareToNative_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1abfecef5adc2bc846e768483df3945eab" compoundref="_double_gene_test_8java" startline="698" endline="706">org.jgap.impl.DoubleGeneTest.testCompareToNative_4</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a7c55bb8369e77722d154f156a5fdc8fe" compoundref="_integer_gene_test_8java" startline="66" endline="71">org.jgap.impl.IntegerGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1a425fed5eb6ecdbe156a11e7ccd7ddb3f" compoundref="_number_gene_test_8java" startline="82" endline="87">org.jgap.impl.NumberGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1a455a90298c73ab7d52e5e559ba3710de" compoundref="_base_gene_test_8java" startline="91" endline="96">org.jgap.BaseGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a7071bbd501b8e8b2221d91277cc16ff7" compoundref="_double_gene_test_8java" startline="125" endline="130">org.jgap.impl.DoubleGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a950619d64e13dc4e4b8cf0f5352232ef" compoundref="_fixed_binary_gene_test_8java" startline="177" endline="187">org.jgap.impl.FixedBinaryGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1a2d82e8673ce7638ee88b4cb0098efc56" compoundref="_string_gene_test_8java" startline="179" endline="184">org.jgap.impl.StringGeneTest.testGetAllele_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a2e00b7f855533a0de802d7a0568634f0" compoundref="_integer_gene_test_8java" startline="73" endline="78">org.jgap.impl.IntegerGeneTest.testGetAllele_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1aa9115dd2fc5e4b418011566e6c021134" compoundref="_number_gene_test_8java" startline="95" endline="100">org.jgap.impl.NumberGeneTest.testGetAllele_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1ab339d237a79809954950f37d49fde33f" compoundref="_double_gene_test_8java" startline="137" endline="142">org.jgap.impl.DoubleGeneTest.testGetAllele_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a088080488b4a4ad78782bb171aef5fd0" compoundref="_integer_gene_test_8java" startline="80" endline="85">org.jgap.impl.IntegerGeneTest.testGetAllele_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1a09434d6c07e06c892a179f5082b291c1" compoundref="_number_gene_test_8java" startline="108" endline="113">org.jgap.impl.NumberGeneTest.testGetAllele_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a636d5d5e8e4e71ff9f65e60f35ef7d50" compoundref="_double_gene_test_8java" startline="149" endline="154">org.jgap.impl.DoubleGeneTest.testGetAllele_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a29d39330c076e729ea75ee87a178fc60" compoundref="_fixed_binary_gene_test_8java" startline="212" endline="222">org.jgap.impl.FixedBinaryGeneTest.testGetAllele_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a4b1d38cef38c4e3c543b89514fc079e2" compoundref="_fixed_binary_gene_test_8java" startline="1250" endline="1259">org.jgap.impl.FixedBinaryGeneTest.testHashCode_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a24f9726db25a7c036fb45c26dde82eaf" compoundref="_integer_gene_test_8java" startline="968" endline="977">org.jgap.impl.IntegerGeneTest.testIntegerGeneSupportsFullIntegerRange</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_gaussian_mutation_operator_test_1a1e3b4fcc8a28caac10c7a309d5429b58" compoundref="_gaussian_mutation_operator_test_8java" startline="143" endline="190">org.jgap.impl.GaussianMutationOperatorTest.testOperate_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1aea2f56e45427df3bbbc7d484849121bf" compoundref="_map_gene_test_8java" startline="378" endline="391">org.jgap.impl.MapGeneTest.testPersistentRepresentation_3</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ac97ac4aeda28e2b1a8e7c098a384355a" compoundref="_string_gene_test_8java" startline="689" endline="695">org.jgap.impl.StringGeneTest.testPersistentRepresentation_6</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1aaf1b3d6e463af7c30a9653321fa2d2c3" compoundref="_double_gene_test_8java" startline="563" endline="569">org.jgap.impl.DoubleGeneTest.testSetToRandomValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_test_1a7c02a53a8930dc6240785629c6c340d7" compoundref="_map_gene_test_8java" startline="573" endline="578">org.jgap.impl.MapGeneTest.testSetToRandomValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a6bda8e455f1c69ae53bfe2c5e68f4141" compoundref="_integer_gene_test_8java" startline="803" endline="809">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a873f6318efa75c8ac5f32df7a6afedd0" compoundref="_double_gene_test_8java" startline="576" endline="583">org.jgap.impl.DoubleGeneTest.testSetToRandomValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1afd2bcd03479b8ad2ba6e9652eb4df483" compoundref="_integer_gene_test_8java" startline="817" endline="823">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ad280f69c098d53acb65e5e7af85ddf61" compoundref="_string_gene_test_8java" startline="1008" endline="1014">org.jgap.impl.StringGeneTest.testSetToRandomValue_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a6e78c6ca74eb86d0d457a7c10c05c999" compoundref="_double_gene_test_8java" startline="590" endline="599">org.jgap.impl.DoubleGeneTest.testSetToRandomValue_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1adbe9a8fca1e79bf25fc85d03de25260f" compoundref="_integer_gene_test_8java" startline="831" endline="838">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ab8429d0a6bd03309f2bb2866affb5857" compoundref="_string_gene_test_8java" startline="1016" endline="1021">org.jgap.impl.StringGeneTest.testSetToRandomValue_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a37f9978f191a94f289db2d59a0c6e81e" compoundref="_integer_gene_test_8java" startline="881" endline="890">org.jgap.impl.IntegerGeneTest.testSetToRandomValue_5</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.Gene.getPersistentRepresentation</definition>
        <argsstring>()</argsstring>
        <name>getPersistentRepresentation</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a8da36e3431c7c509e2e09285e47da105">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a81f6bb7889e353d5fe2a191b2fe530bd">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1a2ee1d1c02b875f75243d7b510961990f">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a616c3ec92db2cc4ef9bcc6ba33b2e0a1">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1a2a35ceb76a665867ea10f34492dabf44">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a9c557fe781b49efc9afb7c4b5f00ad38">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a79af8bfa3fb168ff61d4945b9ed4a319">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ad33dc860fffad1457c3f44a8b3b031f7">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a0a1b56bd574314d61311ac070f7f9845">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a41a4e0b1cf2366722b5f3b97a1711487">getPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4650fd61d86fae144300e230de0a4c0b">getPersistentRepresentation</reimplementedby>
        <exceptions> throws UnsupportedOperationException</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a string representation of the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance that includes any information required to reconstruct it at a later time, such as its value and internal state. This string will be used to represent this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance in XML persistence. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><simplesect kind="return"><para>string representation of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>&apos;s current state </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="98" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_chromosome_1a2bef76845dd6e92c09037dae72e7ca15" compoundref="_base_chromosome_8java" startline="368" endline="379">org.jgap.BaseChromosome.getGenesPersistentRepresentation</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setValueFromPersistentRepresentation</definition>
        <argsstring>(String a_representation)</argsstring>
        <name>setValueFromPersistentRepresentation</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_set_gene_1aa2cb5e988d106f535d0c0a1e156d3dbc">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9b71158d4e12d38732f9b60bf2ba1949">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a67b5e436592a8e9fa9e17a3794ec6deb">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1abd62d1ccb9e0753b93d11a89fd055d0e">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a1b079182739f988716e7bcb26664a77f">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1af8156c2a8b41bc9fe3e397595c513a6d">setValueFromPersistentRepresentation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1ab5392ff8df1b30eda8285f2650667798">setValueFromPersistentRepresentation</reimplementedby>
        <param>
          <type>String</type>
          <declname>a_representation</declname>
        </param>
        <exceptions> throws UnsupportedOperationException, <ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value and internal state of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from the string representation returned by a previous invocation of the <ref refid="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" kindref="member">getPersistentRepresentation()</ref> method. This is an optional method but, if not implemented, XML persistence and possibly other features will not be available. An UnsupportedOperationException should be thrown if no implementation is provided.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_representation</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representation retrieved from a prior call to the <ref refid="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" kindref="member">getPersistentRepresentation()</ref> method</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>to indicate that no implementation is provided for this method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1jgap_1_1_unsupported_representation_exception" kindref="compound">UnsupportedRepresentationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> implementation does not support the given string representation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setToRandomValue</definition>
        <argsstring>(RandomGenerator a_numberGenerator)</argsstring>
        <name>setToRandomValue</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a21dd7e5973db3e3a32745d3e2e3dcbb0">setToRandomValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1aa60b29de6b26966ef4038bc02ccc2fd7">setToRandomValue</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a2b5cf8d97f823fbca3c0d1fb54690324">setToRandomValue</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1jgap_1_1_random_generator" kindref="compound">RandomGenerator</ref></type>
          <declname>a_numberGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value of this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> to a random legal value for the implementation. This method exists for the benefit of mutation and other operations that simply desire to randomize the value of a gene.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_numberGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>The random number generator that should be used to create any random values. It&apos;s important to use this generator to maintain the user&apos;s flexibility to configure the genetic engine to use the random number generator of their choice</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a5e353bbf6a9576b702bf466a5f952b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a569b99cf460d27d2c1acbea2b7775975">cleanup</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a69244d0036ad5f7f05766a3341f21841">cleanup</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1aec3dc6646255f4187aa9a6b4238a9a2c">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executed by the genetic engine when this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> instance is no longer needed and should perform any necessary resource cleanup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String org.jgap.Gene.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a935dfec06cb77bff0d2a45859d6a35b7">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a50ac7f407c3570cecf66f7b423d98187">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a9819e6f329bd77276a5821b4c433cd6e">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_1a877a71e49546005e6cc35230fc5d470d">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene_1af833c58712332cc2c981066f6e27bc63">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1abf9d0e79fbf043ff7eca2d9eaee04a64">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a7d7bc7856360c5889926a1cd83a38efa">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a67a9b1dfccb63d4b2909abdd3e8c1abe">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ad30baf0c08afe2bba30d25ada096d88a">toString</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_map_gene_1a4b9c5182f259a969cef430fa1d66d17f">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string representation of the gene</para></simplesect>
<simplesect kind="since"><para>1.1 (in the interface) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="147" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1a0f40cae2a08a312d2a151cce68b9b6b9" compoundref="_base_gene_test_8java" startline="49" endline="54">org.jgap.BaseGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a3fd5156ee718a318eaebb503dae8e23d" compoundref="_integer_gene_test_8java" startline="52" endline="57">org.jgap.impl.IntegerGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1aec44cec61d4623c92ea309cd4ae581f3" compoundref="_number_gene_test_8java" startline="53" endline="59">org.jgap.impl.NumberGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1adb092c0b47ab095cc1295a7a955c87e7" compoundref="_double_gene_test_8java" startline="89" endline="94">org.jgap.impl.DoubleGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a708b0ca8dd431e60c9fb8f4e7089d98b" compoundref="_boolean_gene_test_8java" startline="97" endline="102">org.jgap.impl.BooleanGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a1b54ccae5dcffc2be5b9df801b276d1c" compoundref="_fixed_binary_gene_test_8java" startline="141" endline="146">org.jgap.impl.FixedBinaryGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_test_1ac8d853a768b02052b1aebd97cb0fcc5c" compoundref="_string_gene_test_8java" startline="142" endline="147">org.jgap.impl.StringGeneTest.testToString_0</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_integer_gene_test_1a3070c9d8379c60b832d95e0b85bdc0c3" compoundref="_integer_gene_test_8java" startline="59" endline="64">org.jgap.impl.IntegerGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1aead7ff4df4c451b9651c71d5511448fb" compoundref="_base_gene_test_8java" startline="62" endline="68">org.jgap.BaseGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1a7406aef41e8fac5c7167199920fdf499" compoundref="_double_gene_test_8java" startline="101" endline="106">org.jgap.impl.DoubleGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1aab652f751096e101f59aa22cc82ae1c5" compoundref="_boolean_gene_test_8java" startline="104" endline="109">org.jgap.impl.BooleanGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a0d53eeb1d5bbf8a15f4c85b30c72364b" compoundref="_fixed_binary_gene_test_8java" startline="153" endline="158">org.jgap.impl.FixedBinaryGeneTest.testToString_1</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1adc93f7f406a22a00b578002e99a22fcb" compoundref="_base_gene_test_8java" startline="76" endline="83">org.jgap.BaseGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_test_1ab329ef8b0ed1bb0e2c1d313717cf8e66" compoundref="_double_gene_test_8java" startline="114" endline="118">org.jgap.impl.DoubleGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_test_1a88ca0d100fe9f39ccac97a2300aaf8b9" compoundref="_boolean_gene_test_8java" startline="117" endline="121">org.jgap.impl.BooleanGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_test_1a3795203a4324069a9e828f86761d8214" compoundref="_fixed_binary_gene_test_8java" startline="166" endline="170">org.jgap.impl.FixedBinaryGeneTest.testToString_2</referencedby>
        <referencedby refid="classorg_1_1jgap_1_1supergenes_1_1_supergene_persistent_representation_test_1ab3f2f53be1565cf97145eac9204cf839" compoundref="_supergene_persistent_representation_test_8java" startline="167" endline="181">org.jgap.supergenes.SupergenePersistentRepresentationTest.testToString_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a7a975e180dd0ac0fd33cdc182f64bea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int org.jgap.Gene.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a26c00775111b327b178288164ed9c667">size</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene_1a1f65b004a1004c6e5acf7ad64628a72e">size</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1a96149f0c784d464b12a634ce09a7fa49">size</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene_1a8d2326c3d5ce80c73dff063f26994233">size</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1ac6078356e9ce615740ab4e5fcd53b86a">size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the gene, i.e the number of atomic elements. Always 1 for numbers</para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="155" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_test_1a73d2f1e2216984439d5d81aab9354d3f" compoundref="_base_gene_test_8java" startline="104" endline="108">org.jgap.BaseGeneTest.testSize_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.applyMutation</definition>
        <argsstring>(int index, double a_percentage)</argsstring>
        <name>applyMutation</name>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_double_gene_1a7cb99b828171a8f23c191876a3fd3c46">applyMutation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene_1a70dea740df4046662f3c4d56205e9986">applyMutation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl_1a4499c0baa8d3c60ede4b70deb58fba49">applyMutation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_string_gene_1aa63ee177d2ac62ad5c82d38db881ba7f">applyMutation</reimplementedby>
        <reimplementedby refid="classorg_1_1jgap_1_1impl_1_1_composite_gene_1a06e95c3f9f2d2d8784dc1ac0eaff49da">applyMutation</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies a mutation of a given intensity (percentage) onto the atomic element at given index (NumberGenes only have one atomic element) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of atomic element, between 0 and <ref refid="interfaceorg_1_1jgap_1_1_gene_1a7a975e180dd0ac0fd33cdc182f64bea8" kindref="member">size()</ref>-1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_percentage</parametername>
</parameternamelist>
<parameterdescription>
<para>percentage of mutation (greater than -1 and smaller than 1).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setApplicationData</definition>
        <argsstring>(Object a_newData)</argsstring>
        <name>setApplicationData</name>
        <param>
          <type>Object</type>
          <declname>a_newData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This sets the application-specific data that is attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Attaching application-specific data may be useful for some applications when it comes time to distinguish a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from another. JGAP ignores this data functionally.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_newData</parametername>
</parameternamelist>
<parameterdescription>
<para>the new application-specific data to attach to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a4eb1d079f14465a2324ad41a6ee3b77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.jgap.Gene.getApplicationData</definition>
        <argsstring>()</argsstring>
        <name>getApplicationData</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a0520139dc694dc6034aeb631ae7d70bd">getApplicationData</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the application-specific data that is attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>. Attaching application-specific data may be useful for some applications when it comes time to distinguish a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> from another. JGAP ignores this data functionally.</para><para><simplesect kind="return"><para>the application-specific data previously attached to this <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref>, or null if there is no data attached</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="194" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_base_gene_1a9fb0e302ae57ee3f2f5d1ee08a75bf43" compoundref="_base_gene_8java" startline="193" endline="216">org.jgap.BaseGene.equals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setCompareApplicationData</definition>
        <argsstring>(boolean a_doCompare)</argsstring>
        <name>setCompareApplicationData</name>
        <param>
          <type>boolean</type>
          <declname>a_doCompare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Should we also consider the application data when comparing? Default is &quot;false&quot; as &quot;true&quot; means a <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> is losing its identity when application data is set differently!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_doCompare</parametername>
</parameternamelist>
<parameterdescription>
<para>true: consider application data in method compareTo</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a71de32c2c6bf2b71332449f20d604f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.jgap.Gene.isCompareApplicationData</definition>
        <argsstring>()</argsstring>
        <name>isCompareApplicationData</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1acd6431c06c81bc03b4abbe32e4d9d8ef">isCompareApplicationData</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1aa1794038b5018cdb49998639c79cb57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.jgap.Gene.getEnergy</definition>
        <argsstring>()</argsstring>
        <name>getEnergy</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a48f71c4c1282de2ca2cf8f4009c4615a">getEnergy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>energy of the gene</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="222" column="1"/>
        <referencedby refid="classorg_1_1jgap_1_1_genotype_test_1a5e6a6ad1dc3ba752999cf6958c928441" compoundref="_genotype_test_8java" startline="990" endline="1004">org.jgap.GenotypeTest.testRandomInitialGenotype_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setEnergy</definition>
        <argsstring>(double a_energy)</argsstring>
        <name>setEnergy</name>
        <param>
          <type>double</type>
          <declname>a_energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the energy of the gene <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_energy</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1a1ef8e9cd912cc68ebe6cd246cf896633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.jgap.Gene.setConstraintChecker</definition>
        <argsstring>(final IGeneConstraintChecker a_constraintChecker)</argsstring>
        <name>setConstraintChecker</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a334db8a543f3008719d78ee219826b65">setConstraintChecker</reimplementedby>
        <param>
          <type>final <ref refid="interfaceorg_1_1jgap_1_1_i_gene_constraint_checker" kindref="compound">IGeneConstraintChecker</ref></type>
          <declname>a_constraintChecker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the constraint checker to be used for this gene whenever method <ref refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" kindref="member">setAllele(Object)</ref> is called. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_constraintChecker</parametername>
</parameternamelist>
<parameterdescription>
<para>the constraint checker to be set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>2.6 (moved from CompositeGene, where it was since 2.0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1jgap_1_1_gene_1aa178414303649867b6176de80c6ba892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1jgap_1_1_configuration" kindref="compound">Configuration</ref></type>
        <definition>Configuration org.jgap.Gene.getConfiguration</definition>
        <argsstring>()</argsstring>
        <name>getConfiguration</name>
        <reimplementedby refid="classorg_1_1jgap_1_1_base_gene_1a32a316c9cc9e273bd75182cbdf188fb6">getConfiguration</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the configuration used</para></simplesect>
<simplesect kind="author"><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="250" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Genes represent the discrete components of a potential solution (the <ref refid="classorg_1_1jgap_1_1_chromosome" kindref="compound">Chromosome</ref>). This interface exists so that custom gene implementations can be easily plugged-in, which can add a great deal of flexibility and convenience for many applications. Note that it&apos;s very important that implementations of this interface also implement the equals() method. Without a proper implementation of equals(), some genetic operations will fail to work properly. </para><para>When implementing a new <ref refid="interfaceorg_1_1jgap_1_1_gene" kindref="compound">Gene</ref> type, extend it from <ref refid="classorg_1_1jgap_1_1_base_gene" kindref="compound">org.jgap.BaseGene</ref>!</para><para><simplesect kind="author"><para>Neil Rotstan </para><simplesectsep/><para>Klaus Meffert </para></simplesect>
<simplesect kind="since"><para>1.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="13128">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="13145">
        <label>org.jgap.supergenes.SupergeneInternalParserTest.TestClass</label>
        <childnode refid="13143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13134">
        <label>org.jgap.impl.MapGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_map_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13147">
        <label>org.jgap.ICompositeGene</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_composite_gene"/>
        <childnode refid="13125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13144">
        <label>org.jgap.supergenes.InstantiableSupergeneForTesting</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_instantiable_supergene_for_testing"/>
        <childnode refid="13143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13127">
        <label>Serializable</label>
      </node>
      <node id="13126">
        <label>Comparable</label>
      </node>
      <node id="13129">
        <label>org.jgap.BaseGene</label>
        <link refid="classorg_1_1jgap_1_1_base_gene"/>
        <childnode refid="13125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13137">
        <label>org.jgap.impl.IntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_integer_gene"/>
        <childnode refid="13135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13130">
        <label>org.jgap.BaseGeneTest.BaseGeneImpl</label>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13139">
        <label>org.jgap.impl.MutipleIntegerGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_mutiple_integer_gene"/>
        <childnode refid="13135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13146">
        <label>org.jgap.supergenes.SupergenePersistentRepresentationTest.TestClass</label>
        <childnode refid="13143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13131">
        <label>org.jgap.impl.BooleanGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_boolean_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13148">
        <label>org.jgap.supergenes.Supergene</label>
        <link refid="interfaceorg_1_1jgap_1_1supergenes_1_1_supergene"/>
        <childnode refid="13147" relation="public-inheritance">
        </childnode>
        <childnode refid="13125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13133">
        <label>org.jgap.impl.FixedBinaryGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_fixed_binary_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13140">
        <label>org.jgap.impl.NumberGeneTest.NumberGeneImpl</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene_test_1_1_number_gene_impl"/>
        <childnode refid="13135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13125">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="13126" relation="public-inheritance">
        </childnode>
        <childnode refid="13127" relation="public-inheritance">
        </childnode>
        <childnode refid="13128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13135">
        <label>org.jgap.impl.NumberGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_number_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13143">
        <label>org.jgap.supergenes.AbstractSupergene</label>
        <link refid="classorg_1_1jgap_1_1supergenes_1_1_abstract_supergene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
        <childnode refid="13148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13138">
        <label>org.jgap.impl.IntegerGeneTest.IntegerGene2</label>
        <childnode refid="13137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13136">
        <label>org.jgap.impl.DoubleGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_double_gene"/>
        <childnode refid="13135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13142">
        <label>org.jgap.impl.StringGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_string_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13132">
        <label>org.jgap.impl.CompositeGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_composite_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
        <childnode refid="13147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13141">
        <label>org.jgap.impl.SetGene</label>
        <link refid="classorg_1_1jgap_1_1impl_1_1_set_gene"/>
        <childnode refid="13129" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13152">
        <label>org.jgap.IUniqueKey</label>
        <link refid="interfaceorg_1_1jgap_1_1_i_unique_key"/>
      </node>
      <node id="13151">
        <label>Serializable</label>
      </node>
      <node id="13150">
        <label>Comparable</label>
      </node>
      <node id="13149">
        <label>org.jgap.Gene</label>
        <link refid="interfaceorg_1_1jgap_1_1_gene"/>
        <childnode refid="13150" relation="public-inheritance">
        </childnode>
        <childnode refid="13151" relation="public-inheritance">
        </childnode>
        <childnode refid="13152" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" line="30" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/src/org/jgap/Gene.java" bodystart="29" bodyend="251"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af506b6e1d6ceb3e88e522da4c79adba4" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>applyMutation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a5e353bbf6a9576b702bf466a5f952b82" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>cleanup</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a771652182ee68c96d4107eee7692fee2" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>CVS_REVISION</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1aa06c80639659ddbcfa1cfe7b7bb109f9" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4eb1d079f14465a2324ad41a6ee3b77a" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1aa178414303649867b6176de80c6ba892" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getConfiguration</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1aa1794038b5018cdb49998639c79cb57a" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a044aa8f0a04ee06bb04bbd35ad4c7f2f" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_unique_key_1a1276412b558e169199771997a190f876" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getUniqueID</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_unique_key_1af26fbe03487632a16c84b62325489652" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>getUniqueIDTemplate</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a71de32c2c6bf2b71332449f20d604f81" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>isCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae4ddccb7bf569c0ed6cdc19def590964" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>newGene</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae49de1c9f46601f1b60d393a9ce3901a" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>PERSISTENT_FIELD_DELIMITER</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af46a0c31e0fecea483497e87ca278127" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setAllele</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ae8405395f244a18424794e8f2e36c608" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a404ee1527c7dab2f8115f18507d0544b" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setCompareApplicationData</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a1ef8e9cd912cc68ebe6cd246cf896633" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setConstraintChecker</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1af5c429a29c338d2ad5d5514d5beea6e7" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setEnergy</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a4ef135da7549ee98139928e21adb841a" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setToRandomValue</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_i_unique_key_1aeac223774f93ba6640bc07cc97a9ef4c" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setUniqueIDTemplate</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a057e5d6cce5ae768cbf626e0ccf70520" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>setValueFromPersistentRepresentation</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1a7a975e180dd0ac0fd33cdc182f64bea8" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>size</name></member>
      <member refid="interfaceorg_1_1jgap_1_1_gene_1ac62239b4b7bf81179fd491a4c4bd1901" prot="public" virt="non-virtual"><scope>org::jgap::Gene</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
