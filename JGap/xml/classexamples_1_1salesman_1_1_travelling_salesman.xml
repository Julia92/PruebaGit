<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classexamples_1_1salesman_1_1_travelling_salesman" kind="class" prot="public">
    <compoundname>examples::salesman::TravellingSalesman</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Salesman</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1salesman_1_1_travelling_salesman_1a82d86ae3a72943681e09da420164b6de" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String examples.salesman.TravellingSalesman.CVS_REVISION</definition>
        <argsstring></argsstring>
        <name>CVS_REVISION</name>
        <initializer>= &quot;$Revision: 1.14 $&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String containing the CVS revision. Read out via reflection! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="60" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classexamples_1_1salesman_1_1_travelling_salesman_1a0f51860b5f44013db47fc58ce9b210e1" prot="public" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int examples.salesman.TravellingSalesman.CITIES</definition>
        <argsstring></argsstring>
        <name>CITIES</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of cities to visit </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="63" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="63" bodyend="-1"/>
        <referencedby refid="classexamples_1_1salesman_1_1_travelling_salesman_1ae7c685f5c77b358a9abd2e52244dfd85" compoundref="_travelling_salesman_8java" startline="78" endline="91">examples.salesman.TravellingSalesman.createSampleChromosome</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classexamples_1_1salesman_1_1_travelling_salesman_1acd4f8e271c8cd63d71a6ffb953370232" prot="public" static="yes" mutable="no">
        <type>final int[][]</type>
        <definition>final int [][] examples.salesman.TravellingSalesman.CITYARRAY</definition>
        <argsstring></argsstring>
        <name>CITYARRAY</name>
        <initializer>= new int[][] { {2, 4}, {7, 5}, {7, 11},
      {8, 1}, {1, 6}, {5, 9}, {0, 11}
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="65" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="65" bodyend="-1"/>
        <referencedby refid="classexamples_1_1salesman_1_1_travelling_salesman_1a936df47bd7b28bba8a1e1718714e0ace" compoundref="_travelling_salesman_8java" startline="105" endline="121">examples.salesman.TravellingSalesman.distance</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexamples_1_1salesman_1_1_travelling_salesman_1ae7c685f5c77b358a9abd2e52244dfd85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IChromosome</type>
        <definition>IChromosome examples.salesman.TravellingSalesman.createSampleChromosome</definition>
        <argsstring>(Object a_initial_data)</argsstring>
        <name>createSampleChromosome</name>
        <param>
          <type>Object</type>
          <declname>a_initial_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array of the given number of integer genes. The first gene is always 0, this is the city where the salesman starts the journey.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_initial_data</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Chromosome</para></simplesect>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="78" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="78" bodyend="91"/>
        <references refid="classexamples_1_1salesman_1_1_travelling_salesman_1a0f51860b5f44013db47fc58ce9b210e1" compoundref="_travelling_salesman_8java" startline="63">examples.salesman.TravellingSalesman.CITIES</references>
      </memberdef>
      <memberdef kind="function" id="classexamples_1_1salesman_1_1_travelling_salesman_1a936df47bd7b28bba8a1e1718714e0ace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double examples.salesman.TravellingSalesman.distance</definition>
        <argsstring>(Gene a_from, Gene a_to)</argsstring>
        <name>distance</name>
        <param>
          <type>Gene</type>
          <declname>a_from</declname>
        </param>
        <param>
          <type>Gene</type>
          <declname>a_to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Distance is equal to the difference between city numbers, except the distance between the last and first cities that is equal to 1. In this way, we ensure that the optimal solution is 0 1 2 3 .. n - easy to check.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_from</parametername>
</parameternamelist>
<parameterdescription>
<para>first gene, representing a city </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_to</parametername>
</parameternamelist>
<parameterdescription>
<para>second gene, representing a city </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the distance between two cities represented as genes</para></simplesect>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="105" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="105" bodyend="121"/>
        <references refid="classexamples_1_1salesman_1_1_travelling_salesman_1acd4f8e271c8cd63d71a6ffb953370232" compoundref="_travelling_salesman_8java" startline="65">examples.salesman.TravellingSalesman.CITYARRAY</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classexamples_1_1salesman_1_1_travelling_salesman_1a76c16e34c9e44697cf21a362a352d1d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void examples.salesman.TravellingSalesman.main</definition>
        <argsstring>(String[] args)</argsstring>
        <name>main</name>
        <param>
          <type>String[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solve a sample task with the number of cities, defined in a CITIES constant. Print the known optimal way, sample chromosome and found solution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>not relevant here</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="133" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="133" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Explains how to use JGAP extensions, needed to solve the task group, known as the <emphasis>Problem of the travelling salesman</emphasis>. The extensions are defined in <ref refid="namespaceorg_1_1jgap_1_1impl_1_1salesman" kindref="compound">org.jgap.impl.salesman</ref></para><para>&lt;font size=&quot;-1&quot;&gt;</para><para>The traveling salesman problem is the following: given a finite number of &apos;cities&apos; along with the cost of travel between each pair of them, find the cheapest way of visiting all the cities and returning to your starting point. </para><para>&lt;/font&gt;</para><para>Also see <itemizedlist>
<listitem>
<para>J. Grefenstette, R. Gopal, R. Rosmaita, and D. Gucht. <emphasis>Genetic algorithms for the traveling salesman problem</emphasis>. In Proceedings of the Second International Conference on Genetice Algorithms. Lawrence Eribaum Associates, Mahwah, NJ, 1985.  </para></listitem>
<listitem>
<para><ulink url="http://ecsl.cs.unr.edu/docs/techreports/gong/node3.html">Sushil J. Louis &amp; Gong Li</ulink> (very clear explanatory material)  </para></listitem>
<listitem>
<para><ulink url="http://www.tsp.gatech.edu www.tsp.gatech.edu"><emphasis>Travelling salesman</emphasis> web site</ulink>  </para></listitem>
</itemizedlist>
</para><para>This simple test and example shows how to use the Salesman class. The distance between the cities is assumed to be equal to the difference of the assigned numbers. So, the optimal solution is obviously 1 2 3 4 ... n or reverse, but the system does not know this. To get the useful application, you need to override at least the distance function. Also, it is recommended to define a new type of gene, corresponding the data about your &quot;city&quot;. For example, it can contain the city X and Y co-ordinates, used by the distance function.</para><para><simplesect kind="author"><para>Audrius Meskauskas </para></simplesect>
<simplesect kind="since"><para>2.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="18642">
        <label>examples.salesman.TravellingSalesman</label>
        <link refid="classexamples_1_1salesman_1_1_travelling_salesman"/>
        <childnode refid="18643" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18643">
        <label>Salesman</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18644">
        <label>examples.salesman.TravellingSalesman</label>
        <link refid="classexamples_1_1salesman_1_1_travelling_salesman"/>
        <childnode refid="18645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18645">
        <label>Salesman</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/git/PruebaGit/JGap/LDH_Git/examples/src/examples/salesman/TravellingSalesman.java" bodystart="57" bodyend="146"/>
    <listofallmembers>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1a0f51860b5f44013db47fc58ce9b210e1" prot="public" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>CITIES</name></member>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1acd4f8e271c8cd63d71a6ffb953370232" prot="public" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>CITYARRAY</name></member>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1ae7c685f5c77b358a9abd2e52244dfd85" prot="public" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>createSampleChromosome</name></member>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1a82d86ae3a72943681e09da420164b6de" prot="private" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>CVS_REVISION</name></member>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1a936df47bd7b28bba8a1e1718714e0ace" prot="public" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>distance</name></member>
      <member refid="classexamples_1_1salesman_1_1_travelling_salesman_1a76c16e34c9e44697cf21a362a352d1d1" prot="public" virt="non-virtual"><scope>examples::salesman::TravellingSalesman</scope><name>main</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
