.TH "examples.supergene.SupergeneSample" 3 "Sat Nov 23 2013" "Version 1.2" "Práctica_5_LDH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
examples.supergene.SupergeneSample \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBexamples\&.supergene\&.AbstractSupergeneTest\fP\&.
.PP
Inherited by examples\&.supergene\&.WithoutSupergeneSample\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "int \fBmakeChangeForAmount\fP (int a_targetChangeAmount)  throws Exception "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBmain\fP (String[] args)"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final String \fBCVS_REVISION\fP = '$Revision: 1\&.3 $'"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
To test the Supergene, we created the 'make change' version with additional condition: the number of nickels and pennies must be both even or both odd\&. The supergene encloses two genes (nickels and pennies) and is valid if the condition above is satisfied\&.
.PP
\fBAuthor:\fP
.RS 4
Neil Rotstan 
.PP
Klaus Meffert 
.PP
Audrius Meskauskas 
.RE
.PP
\fBSince:\fP
.RS 4
2\&.0 
.RE
.PP

.PP
Definition at line 27 of file SupergeneSample\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "static void examples\&.supergene\&.SupergeneSample\&.main (String[]args)\fC [inline]\fP, \fC [static]\fP"

.PP
Definition at line 80 of file SupergeneSample\&.java\&.
.PP
References examples\&.supergene\&.AbstractSupergeneTest\&.test()\&.
.SS "int examples\&.supergene\&.SupergeneSample\&.makeChangeForAmount (inta_targetChangeAmount) throws Exception\fC [inline]\fP, \fC [virtual]\fP"
Executes the genetic algorithm to determine the minimum number of coins necessary to make up the given target amount of change\&. The solution will then be written to System\&.out\&.
.PP
\fBParameters:\fP
.RS 4
\fIa_targetChangeAmount\fP the target amount of change for which this method is attempting to produce the minimum number of coins
.RE
.PP
\fBReturns:\fP
.RS 4
absolute difference between the required and computed change amount 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIException\fP 
.RE
.PP

.PP
Implements \fBexamples\&.supergene\&.AbstractSupergeneTest\fP\&.
.PP
Definition at line 44 of file SupergeneSample\&.java\&.
.PP
References examples\&.supergene\&.AbstractSupergeneTest\&.DIMES, examples\&.supergene\&.AbstractSupergeneTest\&.getDimesGene(), examples\&.supergene\&.AbstractSupergeneTest\&.getNickelsGene(), examples\&.supergene\&.AbstractSupergeneTest\&.getPenniesGene(), examples\&.supergene\&.AbstractSupergeneTest\&.getQuartersGene(), examples\&.supergene\&.AbstractSupergeneTest\&.QUARTERS, and examples\&.supergene\&.AbstractSupergeneTest\&.solve()\&.
.SH "Member Data Documentation"
.PP 
.SS "final String examples\&.supergene\&.SupergeneSample\&.CVS_REVISION = '$Revision: 1\&.3 $'\fC [static]\fP, \fC [private]\fP"
String containing the CVS revision\&. Read out via reflection! 
.PP
Definition at line 30 of file SupergeneSample\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Práctica_5_LDH from the source code\&.
